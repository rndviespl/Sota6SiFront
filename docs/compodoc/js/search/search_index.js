var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AboutComponent.html",[0,0.39,1,1.083]],["body/components/AboutComponent.html",[0,0.373,1,1.204,2,0.809,3,0.047,4,0.042,5,0.52,6,0.573,7,0.52,8,0.52,9,0.042,10,1.614,11,0.52,12,1.952,13,2.906,14,2.147,15,2.118,16,0.809,17,1.566,18,1.985,19,2.66,20,3.917,21,3.917,22,3.917,23,2.66,24,2.239,25,1.204,26,1.204,27,2.66,28,2.035,29,2.66,30,0.919,31,1.847,32,0.919,33,3.06,34,0.03,35,0.241,36,1.28,37,2.393,38,1.947,39,1.67,40,3.423,41,1.67,42,0.402,43,2.23,44,4.555,45,3.981,46,0.449,47,1.461,48,2.303,49,0.625,50,3.06,51,0.402,52,0.013,53,0.453,54,0.05,55,0.194,56,2.23,57,0.942,58,1.847,59,1.178,60,0.515,61,1.393,62,1.847,63,1.847,64,0.741,65,0.767,66,1.4,67,1.847,68,1.844,69,1.847,70,1.048,71,3.423,72,1.458,73,1.847,74,0.399,75,1.113,76,0.654,77,0.96,78,1.614,79,1.4,80,0.176,81,0.537,82,1.597,83,1.81,84,0.573,85,0.782,86,1.103,87,0.726,88,0.812,89,0.782,90,0.782,91,1.847,92,1.346,93,1.461,94,1.614,95,1.255,96,1.461,97,1.056,98,1.255,99,3.06,100,1.161,101,0.845,102,0.047,103,0.184,104,1.614,105,1.461,106,1.847,107,5.268,108,4.755,109,5.442,110,6.028,111,5.442,112,4.303,113,2.674,114,3.06,115,3.06,116,3.06,117,3.06,118,2.674,119,3.06,120,4.755,121,1.928,122,1.295,123,3.06,124,2.674,125,3.06,126,3.06,127,3.06,128,1.4,129,3.06,130,2.674,131,3.06,132,2.42,133,2.674,134,2.674,135,2.674,136,3.06,137,2.078,138,3.06,139,1.461,140,1.543,141,2.132,142,2.366,143,1.178,144,1.847,145,1.847,146,1.614,147,4.157,148,4.767,149,4.463,150,1.255,151,3.917,152,2.509,153,1.589,154,1.97,155,3.507,156,2.239,157,1.056,158,1.866,159,0.96,160,3.779,161,1.847,162,1.847,163,3.429,164,2.993,165,3.402,166,1.939,167,3.988,168,3.992,169,1.056,170,1.749,171,2.66,172,1.847,173,1.847,174,3.917,175,1.255,176,0.862,177,2.23,178,3.917,179,2.264,180,1.952,181,1.461,182,2.405,183,1.847,184,2.674,185,2.66,186,2.886,187,2.366,188,4.555,189,3.06,190,1.952,191,1.458,192,1.461,193,1.847,194,1.461,195,1.792,196,2.863,197,2.083,198,2.366,199,3.319,200,1.178,201,1.346,202,1.847,203,2.674,204,1.847,205,1.847,206,4.555,207,4.412,208,1.847,209,1.614,210,2.674,211,1.614,212,1.847,213,1.589,214,3.098,215,0.918,216,3.679,217,1.847,218,3.429,219,2.078,220,1.614,221,1.005,222,2.674,223,2.42,224,1.346,225,1.461,226,1.614,227,1.847,228,1.113,229,3.981,230,1.189,231,1.346,232,1.614,233,1.614,234,1.847,235,1.847,236,1.614,237,3.06,238,2.674,239,1.847,240,1.847,241,1.614,242,1.255,243,2.604,244,3.319,245,1.178,246,1.346,247,1.113,248,0.726,249,0.726,250,0.726,251,0.726,252,0.701,253,0.726,254,0.726,255,0.726,256,0.726,257,0.726,258,0.52,259,0.862,260,0.862,261,0.52,262,0.52,263,0.52,264,0.488,265,0.52,266,0.52,267,0.488,268,0.52,269,0.52,270,0.488,271,0.52,272,0.52,273,0.862,274,0.473,275,1.103,276,0.473,277,0.52,278,0.862,279,0.488,280,0.52,281,0.52,282,0.488,283,1.103,284,0.52,285,0.488,286,0.52,287,0.488,288,0.52,289,0.488,290,0.52,291,0.52,292,0.473,293,0.52,294,0.488,295,0.52,296,0.488,297,0.52,298,0.488,299,0.52,300,0.488,301,0.43,302,0.862,303,0.488,304,0.52,305,0.473,306,0.52,307,0.488,308,0.504,309,0.473,310,0.862,311,0.488,312,0.473,313,0.52,314,0.488,315,0.52,316,0.488,317,0.444,318,0.504,319,0.52,320,0.488,321,0.488,322,0.473,323,0.504,324,0.52,325,0.004,326,0.004]],["title/injectables/AchievementsRepositoryService.html",[327,0.373,328,2.985]],["body/injectables/AchievementsRepositoryService.html",[3,0.133,4,0.117,9,0.117,34,0.085,42,0.862,46,0.761,49,0.826,51,1.025,52,0.013,53,0.775,54,0.127,55,0.495,60,1.025,74,0.398,80,0.494,86,1.134,102,0.133,103,0.516,325,0.009,326,0.009,327,0.597,328,4.78,329,1.329,330,7.062,331,2.197,332,5.732,333,5.732,334,5.732,335,6.602,336,5.732,337,5.191,338,5.404,339,4.536,340,5.732,341,4.197,342,5.191,343,6.161,344,2.141,345,5.732,346,0.893,347,5.191,348,2.091,349,5.732,350,4.536,351,4.536,352,5.732,353,5.191,354,3.525,355,5.191,356,1.372,357,1.329,358,1.509,359,1.225,360,5.191,361,5.191,362,5.191,363,5.191,364,5.191]],["title/injectables/AchievementsService.html",[327,0.373,338,2.782]],["body/injectables/AchievementsService.html",[3,0.124,4,0.109,9,0.109,34,0.079,35,0.494,36,1.294,42,0.825,46,0.709,49,0.836,51,1.027,52,0.013,53,0.777,54,0.128,55,0.496,57,1.672,60,1.027,61,1.606,64,0.787,65,0.815,74,0.387,80,0.461,86,1.058,102,0.124,103,0.481,121,2.654,122,3.115,325,0.009,326,0.009,327,0.571,329,1.239,332,5.48,333,5.48,334,5.48,335,6.432,336,5.48,338,4.259,340,5.48,341,4.13,343,6.178,344,2.119,345,5.48,346,0.881,348,2.023,349,5.48,352,5.48,354,3.286,356,1.279,357,1.239,358,1.407,359,1.199,365,4.229,366,3.059,367,6.271,368,2.128,369,6.271,370,4.839,371,4.839,372,4.839,373,4.839,374,6.271,375,4.839,376,6.271,377,4.839,378,6.271,379,2.128,380,2.305,381,2.513,382,2.513,383,2.513,384,2.513,385,4.839,386,4.839]],["title/components/AchievmentsPageForUserComponent.html",[0,0.39,264,1.083]],["body/components/AchievmentsPageForUserComponent.html",[0,0.504,1,0.773,2,1.163,3,0.075,4,0.066,5,0.823,6,0.907,7,0.823,8,0.823,9,0.066,11,0.823,14,2.27,15,2.252,16,1.163,17,1.642,25,0.773,26,0.773,30,1.322,32,1.322,34,0.048,35,0.347,36,1.458,37,2.695,39,2.434,42,0.579,46,0.645,48,2.494,49,0.799,51,0.579,52,0.013,53,0.586,54,0.116,55,0.28,57,1.058,60,0.696,61,1.509,64,1.181,65,1.222,68,1.761,74,0.427,76,1.035,77,2.75,80,0.278,81,0.85,83,1.322,84,0.907,87,1.15,88,1.285,100,1.671,102,0.075,103,0.291,140,2.17,154,1.659,166,1.491,176,0.823,230,1.288,248,1.15,249,1.15,250,1.15,251,1.15,252,1.109,253,1.15,254,1.15,255,1.15,256,1.15,257,1.15,258,0.823,259,1.24,260,1.24,261,0.823,262,0.823,263,0.823,264,1.557,265,1.997,266,0.823,267,0.773,268,0.823,269,0.823,270,0.773,271,0.823,272,0.823,273,1.24,274,0.748,275,1.491,276,0.748,277,0.823,278,1.24,279,0.773,280,0.823,281,0.823,282,0.773,283,1.491,284,0.823,285,0.773,286,0.823,287,0.773,288,0.823,289,0.773,290,0.823,291,0.823,292,0.748,293,0.823,294,0.773,295,0.823,296,0.773,297,0.823,298,0.773,299,0.823,300,0.773,301,0.681,302,1.24,303,0.773,304,0.823,305,0.748,306,0.823,307,0.773,308,0.797,309,0.748,310,1.24,311,0.773,312,0.748,313,0.823,314,0.773,315,0.823,316,0.773,317,0.703,318,0.797,319,0.823,320,0.773,321,0.773,322,0.748,323,0.797,324,0.823,325,0.006,326,0.006,328,4.294,341,3.06,346,0.767,354,1.985,359,0.46,387,6.791,388,6.145,389,2.555,390,2.286,391,5.295,392,5.295,393,5.295,394,5.295,395,4.187,396,4.187,397,2.923,398,4.402,399,5.295,400,3.206,401,5.295,402,4.187,403,4.627,404,2.421,405,5.295,406,3.758,407,4.402,408,2.807,409,5.892,410,2.555,411,5.295,412,2.317,413,5.295,414,4.402,415,4.402,416,2.923,417,1.865,418,2.591,419,2.923,420,2.923,421,2.923,422,3.481,423,2.923,424,2.923,425,2.188,426,2.923,427,3.481,428,2.923,429,3.377,430,2.923,431,3.368,432,2.923,433,2.923,434,1.337,435,1.795,436,1.613,437,2.923,438,1.985,439,1.985,440,2.923,441,1.865,442,1.865,443,4.402,444,2.923,445,1.557,446,5.149,447,2.312,448,5.295,449,2.312,450,2.312,451,2.923,452,4.402,453,2.923,454,2.923,455,2.923,456,4.402,457,2.923,458,2.923,459,1.731,460,4.659,461,4.402,462,2.923,463,1.795,464,1.337,465,4.402,466,2.923,467,2.923,468,2.923,469,2.923,470,1.237,471,1.337,472,1.285,473,1.518,474,1.453,475,2.555,476,4.402,477,4.402]],["title/components/AlertDeleteComponent.html",[0,0.39,267,1.083]],["body/components/AlertDeleteComponent.html",[0,0.632,1,1.165,2,1.558,3,0.113,4,0.099,5,1.241,6,1.367,7,1.241,8,1.241,9,0.099,11,1.241,14,2.347,15,2.338,16,1.558,17,2.061,25,1.165,26,1.165,30,1.771,32,1.771,34,0.072,35,0.465,37,2.354,49,0.457,52,0.013,53,0.586,54,0.096,64,0.717,65,0.742,74,0.442,75,2.656,76,1.561,80,0.419,81,1.282,82,1.797,83,2.131,84,1.829,86,0.963,100,2.238,102,0.113,103,0.438,140,1.894,154,1.998,176,1.241,230,1.289,248,1.733,249,1.733,250,1.733,251,1.733,252,1.673,253,1.733,254,1.733,255,1.733,256,1.733,257,1.733,258,1.241,259,1.661,260,1.661,261,1.241,262,1.241,263,1.241,264,1.165,265,1.241,266,1.241,267,1.875,268,2.224,269,1.241,270,1.165,271,1.241,272,1.241,273,1.661,274,1.128,275,1.871,276,1.128,277,1.241,278,1.661,279,1.165,280,1.241,281,1.241,282,1.165,283,1.871,284,1.241,285,1.165,286,1.241,287,1.165,288,1.241,289,1.165,290,1.241,291,1.241,292,1.128,293,1.241,294,1.165,295,1.241,296,1.165,297,1.241,298,1.165,299,1.241,300,1.165,301,1.026,302,1.661,303,1.165,304,1.241,305,1.128,306,1.241,307,1.165,308,1.202,309,1.128,310,1.661,311,1.165,312,1.128,313,1.241,314,1.165,315,1.241,316,1.165,317,1.059,318,1.202,319,1.241,320,1.165,321,1.165,322,1.128,323,1.202,324,1.241,325,0.008,326,0.008,418,2.593,478,5.153,479,4.663,480,3.852,481,5.897,482,4.408,483,5.897,484,3.166,485,4.843,486,4.843,487,4.408,488,3.485,489,4.408,490,2.519,491,4.408,492,3.852,493,2.993,494,2.993,495,3.852,496,5.897,497,3.209]],["title/components/AppComponent.html",[0,0.39,270,1.083]],["body/components/AppComponent.html",[0,0.65,1,1.231,2,1.617,3,0.12,4,0.105,5,1.312,7,1.312,8,1.312,9,0.105,11,1.312,14,2.356,15,2.347,16,1.617,23,4.638,25,1.231,26,1.231,32,1.837,34,0.076,35,0.482,37,2.419,49,0.635,52,0.012,53,0.608,54,0.076,57,1.119,64,0.995,65,1.03,74,0.382,76,1.65,80,0.443,83,1.399,84,1.445,87,1.832,102,0.12,103,0.463,140,1.929,154,2.042,175,4.638,176,1.312,230,1.337,258,1.312,259,1.723,260,1.723,261,1.312,262,1.312,263,1.312,264,1.231,265,1.312,266,1.312,267,1.231,268,1.312,269,1.312,270,1.917,271,1.312,272,1.312,273,1.723,274,1.193,275,1.923,276,1.193,277,1.312,278,1.723,279,1.231,280,1.312,281,1.312,282,1.231,283,1.923,284,1.312,285,1.231,286,1.312,287,1.231,288,1.312,289,1.231,290,1.312,291,1.312,292,1.193,293,1.312,294,1.231,295,1.312,296,1.231,297,1.312,298,1.231,299,1.312,300,1.231,301,1.085,302,1.723,303,1.917,304,1.312,305,1.193,306,1.312,307,1.231,308,1.271,309,1.193,310,1.723,311,1.231,312,1.193,313,1.312,314,1.231,315,1.312,316,1.231,317,1.119,318,1.271,319,1.312,320,1.231,321,1.231,322,1.193,323,1.271,324,1.312,325,0.009,326,0.009,357,1.566,484,3.254,498,4.07,499,6.83,500,6.83,501,6.83,502,6.117,503,4.837,504,6.117,505,5.969,506,5.345,507,4.658,508,4.457,509,4.658,510,4.07,511,4.658]],["title/injectables/AuthProjRepositoryService.html",[327,0.373,512,2.782]],["body/injectables/AuthProjRepositoryService.html",[3,0.143,4,0.125,9,0.125,34,0.091,42,0.901,46,0.816,49,0.804,51,0.976,52,0.013,53,0.738,54,0.121,55,0.471,60,0.976,61,1.754,74,0.407,80,0.53,86,1.216,102,0.143,103,0.553,301,1.595,317,1.647,322,2.036,325,0.01,326,0.01,327,0.623,329,1.425,331,2.355,344,2.036,356,1.471,357,1.425,358,1.618,359,1.077,400,4.406,441,3.55,442,3.55,512,4.652,513,6.288,514,5.26,515,5.566,516,3.028,517,5.987,518,4.077,519,2.891,520,4.992,521,3.028,522,5.987,523,2.891,524,3.55,525,5.566,526,5.566,527,5.566]],["title/injectables/AuthProjService.html",[327,0.373,400,2.229]],["body/injectables/AuthProjService.html",[3,0.119,4,0.104,9,0.104,34,0.075,35,0.48,36,1.435,42,0.801,46,0.678,49,0.838,51,0.951,52,0.013,53,0.719,54,0.118,55,0.459,60,0.988,61,1.976,64,1.108,65,1.146,70,2.085,74,0.395,80,0.44,86,1.011,102,0.119,103,0.46,121,2.577,122,3.061,301,1.684,317,1.463,325,0.009,326,0.009,327,0.554,329,1.184,344,1.924,356,1.222,357,1.184,358,1.345,359,0.957,366,2.993,368,2.033,379,2.033,400,3.313,418,2.993,445,1.799,447,3.657,450,4.814,514,4.912,517,5.32,518,3.909,520,4.436,522,5.32,524,2.95,528,7.124,529,4.041,530,4.101,531,5.27,532,5.948,533,5.27,534,5.32,535,6.088,536,4.624,537,4.624,538,4.624,539,4.624,540,5.32,541,4.624,542,6.088,543,4.624,544,5.32,545,5.32,546,4.624,547,4.041,548,3.37,549,4.041,550,3.657,551,6.088,552,3.668,553,6.088,554,4.041,555,5.32,556,5.32,557,4.613,558,6.088,559,6.088,560,6.088,561,5.32,562,4.041,563,4.041,564,3.37,565,4.624,566,4.041,567,3.657,568,4.041,569,4.041]],["title/injectables/AuthRepositoryService.html",[327,0.373,570,2.782]],["body/injectables/AuthRepositoryService.html",[3,0.144,4,0.127,9,0.127,34,0.092,42,0.906,46,0.823,49,0.806,51,0.98,52,0.013,53,0.741,54,0.122,55,0.473,60,0.98,61,1.763,74,0.409,80,0.534,86,1.227,97,4.638,98,3.813,102,0.144,103,0.558,230,1.505,301,1.604,317,1.655,325,0.01,326,0.01,327,0.627,329,1.437,331,2.376,344,2.041,356,1.484,357,1.437,358,1.632,359,1.083,513,6.304,514,5.276,516,3.055,519,2.916,521,3.055,523,2.916,570,4.677,571,5.614,572,6.019,573,4.269,574,6.019,575,3.581,576,5.614,577,5.614,578,5.614]],["title/injectables/AuthService.html",[97,2.342,327,0.373]],["body/injectables/AuthService.html",[3,0.123,4,0.108,9,0.108,34,0.078,35,0.492,36,1.45,42,0.82,46,0.703,49,0.835,51,0.965,52,0.013,53,0.729,54,0.12,55,0.466,60,0.965,61,1.878,64,1.127,65,1.166,70,2.135,74,0.4,80,0.457,86,1.048,97,3.564,102,0.123,103,0.477,121,2.639,122,3.105,230,1.363,301,1.452,317,1.499,325,0.009,326,0.009,327,0.567,329,1.228,344,1.947,356,1.268,357,1.228,358,1.395,359,0.981,366,3.046,368,2.109,379,2.109,406,3.977,418,3.046,445,1.648,450,4.931,514,4.982,531,5.345,532,6.054,534,5.449,540,5.449,544,5.449,545,5.449,547,4.192,548,3.495,549,4.192,552,3.757,554,4.192,555,5.449,556,5.449,557,4.679,561,5.449,562,4.192,563,4.192,567,3.793,569,4.192,572,5.449,573,4.122,574,5.449,575,3.06,579,4.192,580,6.236,581,4.797,582,4.797,583,4.797,584,4.797,585,6.236,586,4.797,587,4.797,588,6.236,589,6.236,590,6.236,591,6.236,592,4.931,593,5.449]],["title/components/BackButtonComponent.html",[0,0.39,26,1.083]],["body/components/BackButtonComponent.html",[0,0.634,1,1.17,2,1.563,3,0.114,4,0.1,5,1.247,6,1.373,7,1.247,8,1.247,9,0.1,11,1.247,14,2.348,15,2.339,16,1.17,25,1.17,26,1.879,30,1.776,32,1.776,34,0.072,36,0.824,42,0.778,46,0.649,48,3.294,49,0.614,51,0.582,52,0.012,53,0.662,54,0.072,55,0.281,60,0.582,61,1.514,74,0.435,80,0.421,81,1.287,87,1.741,92,4.854,100,2.245,102,0.114,103,0.44,140,1.897,154,2.002,176,1.247,228,3.564,230,1.293,248,1.741,249,1.741,250,1.741,251,1.741,252,1.68,253,1.741,254,1.741,255,1.741,256,1.741,257,1.741,258,1.247,259,1.666,260,1.666,261,1.247,262,1.247,263,1.247,264,1.17,265,1.247,266,1.247,267,1.17,268,1.247,269,1.247,270,1.17,271,1.247,272,2.227,273,1.666,274,1.134,275,1.876,276,1.134,277,1.247,278,1.666,279,1.17,280,1.247,281,1.247,282,1.17,283,1.876,284,1.247,285,1.17,286,1.247,287,1.17,288,1.247,289,1.17,290,1.247,291,1.247,292,1.134,293,1.247,294,1.17,295,1.247,296,1.17,297,1.247,298,1.17,299,1.247,300,1.17,301,1.031,302,1.666,303,1.17,304,1.247,305,1.134,306,1.247,307,1.17,308,1.208,309,1.134,310,1.666,311,1.17,312,1.134,313,1.247,314,1.17,315,1.247,316,1.17,317,1.064,318,1.208,319,1.247,320,1.17,321,1.17,322,1.134,323,1.208,324,1.247,325,0.009,326,0.009,358,1.287,445,1.563,449,3.501,459,1.741,594,5.821,595,3.869,596,4.428,597,5.915,598,7.109,599,4.428,600,7.622,601,4.428,602,4.428,603,5.915,604,4.428,605,4.428,606,4.428,607,4.428,608,4.428,609,5.915,610,3.501]],["title/components/ButtonComponent.html",[0,0.39,274,1.049]],["body/components/ButtonComponent.html",[0,0.58,1,0.987,2,1.39,3,0.096,4,0.084,5,1.482,6,1.158,7,1.051,8,1.051,9,0.084,11,1.051,14,2.319,15,2.297,16,1.39,17,1.89,25,0.987,26,0.987,30,1.58,34,0.061,49,0.751,52,0.013,53,0.523,54,0.114,55,0.334,57,1.59,64,0.991,65,1.026,70,1.278,74,0.277,80,0.355,81,1.085,102,0.096,103,0.371,128,2.406,140,1.904,148,4.16,152,3.028,153,3.436,154,1.863,158,2.506,159,1.939,164,1.939,165,2.031,166,1.716,176,1.051,179,3.596,180,4.448,186,3.986,187,3.758,190,2.381,191,1.778,195,1.707,200,2.381,201,2.72,215,1.855,224,2.72,228,4.983,230,1.15,232,3.262,233,3.262,258,1.051,259,1.482,260,1.482,261,1.051,262,1.051,263,1.051,264,0.987,265,1.051,266,1.051,267,0.987,268,1.051,269,1.051,270,0.987,271,1.051,272,1.051,273,1.482,274,1.694,275,2.296,276,0.956,277,1.051,278,1.482,279,0.987,280,1.051,281,1.051,282,0.987,283,1.716,284,1.051,285,0.987,286,1.051,287,0.987,288,1.051,289,0.987,290,1.051,291,1.051,292,0.956,293,1.051,294,0.987,295,1.051,296,0.987,297,1.051,298,0.987,299,1.051,300,0.987,301,0.869,302,1.482,303,0.987,304,1.051,305,0.956,306,1.051,307,0.987,308,1.018,309,0.956,310,1.482,311,0.987,312,0.956,313,1.051,314,0.987,315,1.051,316,0.987,317,0.897,318,1.018,319,1.051,320,0.987,321,0.987,322,0.956,323,1.018,324,1.051,325,0.008,326,0.008,359,0.587,418,1.641,425,2.615,445,0.987,530,2.249,611,3.262,612,2.227,613,6.093,614,3.758,615,3.356,616,5.324,617,3.573,618,5.324,619,3.17,620,6.093,621,3.733,622,3.834,623,3.733,624,5.261,625,3.733,626,5.261,627,5.261,628,5.261,629,4.818,630,6.974,631,5.515,632,3.733,633,4.138,634,3.733,635,5.261,636,5.261,637,3.733,638,3.733,639,3.322,640,3.573,641,3.733,642,5.261,643,3.733,644,3.834,645,3.733,646,2.952,647,2.535,648,3.733,649,2.952,650,2.952,651,4.16,652,4.16,653,2.952,654,2.952,655,2.952,656,3.733,657,3.262,658,2.952,659,3.262,660,6.093,661,3.733,662,3.262,663,2.952,664,2.952,665,4.16,666,3.262,667,2.72,668,2.952,669,2.72]],["title/components/CardItemComponent.html",[0,0.39,276,1.049]],["body/components/CardItemComponent.html",[0,0.569,1,0.952,2,1.356,3,0.093,4,0.081,5,1.015,6,1.118,7,1.015,8,1.015,9,0.081,11,1.015,14,2.312,15,2.3,16,1.356,17,1.853,18,2.35,25,0.952,26,0.952,30,1.541,32,1.541,34,0.059,36,1.211,39,2.698,41,2.698,42,0.675,46,0.752,47,2.85,48,3.027,49,0.676,51,0.675,52,0.013,53,0.647,54,0.098,55,0.326,60,0.474,61,1.314,72,1.717,74,0.437,76,1.276,79,2.347,80,0.343,81,1.048,83,1.082,84,1.118,87,1.417,88,1.585,89,1.525,90,1.525,100,1.948,101,1.648,102,0.093,103,0.358,112,2.85,140,1.762,154,1.834,166,1.015,176,1.015,230,1.121,248,1.417,249,1.417,250,1.417,251,1.417,252,1.368,253,1.417,254,1.417,255,1.417,256,1.417,257,1.417,258,1.015,259,1.445,260,1.445,261,1.015,262,1.015,263,1.015,264,0.952,265,1.015,266,1.015,267,0.952,268,1.015,269,1.015,270,0.952,271,1.015,272,1.015,273,1.445,274,0.923,275,1.683,276,1.667,277,2.119,278,1.445,279,1.721,280,1.445,281,1.015,282,0.952,283,1.683,284,1.015,285,0.952,286,1.015,287,0.952,288,1.015,289,0.952,290,1.015,291,1.015,292,0.923,293,1.015,294,0.952,295,1.015,296,0.952,297,1.015,298,0.952,299,1.015,300,0.952,301,0.839,302,1.445,303,0.952,304,1.015,305,0.923,306,1.015,307,0.952,308,0.983,309,0.923,310,1.445,311,0.952,312,1.53,313,1.015,314,0.952,315,1.015,316,0.952,317,0.866,318,0.983,319,1.015,320,0.952,321,0.952,322,0.923,323,0.983,324,1.015,325,0.007,326,0.007,348,1.738,359,0.567,404,2.733,412,2.561,434,1.648,435,1.47,436,1.321,445,0.952,463,2.437,470,2.756,471,1.648,472,1.585,610,2.85,615,3.273,619,3.092,639,2.444,670,6.014,671,5.442,672,2.85,673,3.252,674,3.149,675,4.484,676,5.132,677,4.726,678,4.058,679,5.132,680,2.917,681,5.132,682,3.149,683,1.791,684,3.149,685,3.149,686,2.06,687,2.626,688,3.149,689,2.55,690,2.171,691,4.484,692,3.604,693,1.648,694,2.85,695,1.525,696,5.976,697,3.149,698,4.484,699,5.132,700,5.132,701,2.85,702,2.85]],["title/components/CarouselImgComponent.html",[0,0.39,279,1.083]],["body/components/CarouselImgComponent.html",[0,0.528,1,0.836,2,1.234,3,0.081,4,0.071,5,0.891,6,0.981,7,0.891,8,0.891,9,0.071,11,0.891,12,2.978,13,2.978,14,2.287,15,2.271,16,1.234,17,1.721,18,2.182,25,0.836,26,0.836,27,3.768,28,2.882,30,1.402,32,1.402,34,0.1,35,0.368,36,1.379,40,4.849,42,0.614,45,5.353,46,0.684,49,0.793,51,0.73,52,0.013,53,0.65,54,0.121,55,0.352,57,0.76,60,0.859,61,1.93,64,0.997,65,1.031,70,1.9,71,5.71,74,0.428,75,1.906,77,2.882,78,4.849,80,0.301,81,0.92,83,1.666,84,0.981,85,1.339,86,0.691,100,1.772,102,0.081,103,0.315,104,2.764,128,2.135,140,1.673,142,1.643,154,1.725,158,1.507,164,2.425,166,1.725,169,1.808,176,0.891,182,1.507,191,1.507,195,1.447,196,2.32,197,1.447,213,1.643,219,2.148,221,1.721,230,1.02,242,2.148,248,1.244,249,1.244,250,1.244,251,1.244,252,1.201,253,1.244,254,1.244,255,1.244,256,1.244,257,1.244,258,0.891,259,1.315,260,1.315,261,0.891,262,0.891,263,0.891,264,0.836,265,0.891,266,0.891,267,0.836,268,0.891,269,0.891,270,0.836,271,0.891,272,0.891,273,1.315,274,0.81,275,1.563,276,0.81,277,0.891,278,1.315,279,1.619,280,2.044,281,0.891,282,0.836,283,1.563,284,0.891,285,0.836,286,0.891,287,0.836,288,0.891,289,0.836,290,0.891,291,0.891,292,0.81,293,0.891,294,0.836,295,0.891,296,0.836,297,0.891,298,0.836,299,0.891,300,0.836,301,0.737,302,1.315,303,0.836,304,0.891,305,0.81,306,0.891,307,0.836,308,0.863,309,0.81,310,1.315,311,0.836,312,0.81,313,0.891,314,0.836,315,0.891,316,0.836,317,0.76,318,0.863,319,0.891,320,0.836,321,0.836,322,0.81,323,0.863,324,0.891,325,0.007,326,0.007,346,0.505,348,1.357,359,0.734,390,2.425,408,2.918,436,1.159,438,2.148,445,1.466,612,1.976,615,2.978,617,3.171,633,3.768,639,2.224,640,3.171,678,3.768,687,5.638,689,2.757,690,1.906,703,6.761,704,2.764,705,4.08,706,5.549,707,5.549,708,5.549,709,5.549,710,3.163,711,4.669,712,5.549,713,6.126,714,4.669,715,4.08,716,5.549,717,3.163,718,3.691,719,4.849,720,5.353,721,4.849,722,4.464,723,4.669,724,3.692,725,3.163,726,3.163,727,3.163,728,4.669,729,6.126,730,3.163,731,3.163,732,3.163,733,3.163,734,4.08,735,5.71,736,3.163,737,2.764,738,3.163,739,3.163,740,3.163,741,2.501,742,2.305,743,2.501,744,2.764,745,2.305,746,2.305,747,4.669,748,2.148,749,4.669,750,3.163,751,3.163,752,3.163,753,3.163,754,4.08,755,3.163,756,3.163,757,3.163,758,3.163,759,4.849,760,3.163,761,3.163,762,3.163,763,3.163,764,3.163,765,3.163,766,3.163,767,2.764,768,3.163,769,3.402,770,3.163,771,3.163,772,3.163,773,3.163,774,3.163,775,3.163,776,3.163,777,2.501,778,2.813,779,4.08]],["title/interfaces/CartItem.html",[780,0.667,781,2.985]],["body/interfaces/CartItem.html",[0,0.388,3,0.068,4,0.059,9,0.059,12,1.683,13,1.683,14,0.72,15,0.72,16,0.697,17,1.263,18,1.601,24,2.328,28,2.115,30,0.792,32,0.792,34,0.066,35,0.321,36,1.277,37,2.26,38,1.312,39,1.822,41,1.492,46,0.387,48,2.104,52,0.013,54,0.043,61,1.804,65,0.685,66,1.207,72,1.257,74,0.405,75,1.59,76,1.442,77,2.115,79,1.862,80,0.388,81,0.767,82,1.66,83,1.493,84,0.819,87,1.038,88,1.16,89,1.117,90,1.117,100,1.002,101,1.207,102,0.068,103,0.262,128,1.207,140,1.273,166,1.701,215,2.471,218,1.792,305,0.676,312,1.431,325,0.006,326,0.006,346,0.653,359,1.046,390,1.371,395,3.22,396,3.22,404,1.207,408,1.257,412,1.601,425,3.502,434,1.207,435,1.076,436,1.492,438,1.792,439,1.792,445,1.862,459,3.131,463,3.305,464,2.556,470,2.104,471,2.274,472,2.186,473,3.805,474,3.64,484,3.429,488,3.22,490,1.509,497,2.216,530,1.59,612,2.104,673,1.436,693,2.274,695,2.104,722,2.967,748,2.765,780,0.429,781,5.603,782,0.874,783,1.792,784,2.087,785,2.087,786,3.558,787,2.995,788,3.852,789,4.884,790,3.558,791,2.453,792,2.453,793,1.076,794,3.558,795,2.306,796,2.087,797,2.453,798,1.923,799,2.453,800,1.923,801,2.597,802,2.087,803,2.597,804,2.306,805,2.306,806,2.306,807,2.306,808,2.306,809,1.923,810,2.306,811,1.792,812,3.376,813,3.802,814,2.087,815,2.087,816,2.306,817,2.306,818,2.306,819,2.306,820,2.306,821,2.306,822,2.087,823,2.306,824,2.306,825,2.306,826,2.306,827,2.306,828,2.306,829,5.812,830,2.306,831,2.306,832,5.692,833,6.498,834,2.705,835,4.046,836,3.269,837,2.306,838,2.306,839,2.306,840,2.306,841,2.087,842,2.306,843,2.306,844,5.812,845,4.775,846,3.558,847,2.306,848,2.306,849,3.22,850,2.306,851,2.023,852,5.046,853,1.862,854,5.046,855,2.306,856,4.884,857,4.884,858,2.087,859,1.792,860,2.306,861,2.306,862,3.22,863,2.306,864,2.087,865,2.306,866,2.306,867,2.306,868,2.306,869,1.923,870,2.306,871,2.306,872,3.931,873,1.436,874,4.344,875,2.306,876,2.306,877,2.087,878,2.306,879,2.306,880,2.306,881,4.344,882,3.558,883,2.306,884,2.306]],["title/injectables/CategoriesRepositoryService.html",[327,0.373,885,2.782]],["body/injectables/CategoriesRepositoryService.html",[3,0.133,4,0.117,9,0.117,34,0.085,42,0.862,46,0.76,49,0.825,51,1.024,52,0.013,53,0.774,54,0.127,55,0.495,60,1.024,74,0.397,80,0.493,86,1.133,102,0.133,103,0.515,325,0.009,326,0.009,327,0.596,329,1.327,331,2.194,344,2.141,346,0.892,348,2.09,356,1.37,357,1.327,358,1.507,359,1.225,516,2.821,519,2.693,521,2.821,523,2.693,885,4.451,886,7.059,887,5.727,888,5.727,889,6.599,890,5.727,891,5.727,892,5.184,893,5.797,894,5.727,895,4.396,896,6.159,897,5.727,898,3.123,899,5.727,900,5.727,901,3.123,902,3.777,903,2.693,904,5.184,905,5.184,906,5.184,907,5.184,908,5.184,909,5.184]],["title/injectables/ConfigService.html",[39,1.501,327,0.373]],["body/injectables/ConfigService.html",[3,0.069,4,0.06,9,0.06,34,0.044,35,0.325,37,2.507,39,1.51,49,0.521,52,0.013,54,0.082,64,0.817,65,0.845,74,0.141,80,0.255,102,0.069,103,0.266,113,3.6,118,3.6,132,3.258,133,3.6,134,3.6,135,3.6,215,2.047,301,0.959,317,0.99,318,1.751,322,1.055,325,0.006,326,0.006,327,0.375,329,0.686,356,0.708,357,0.686,472,1.811,695,1.744,859,2.798,910,2.342,911,4.386,912,5.019,913,5.019,914,4.386,915,4.12,916,4.12,917,3.002,918,4.12,919,3.6,920,4.12,921,3.6,922,4.12,923,3.6,924,4.12,925,4.12,926,4.12,927,4.12,928,4.12,929,4.12,930,3.6,931,4.12,932,4.12,933,3.6,934,4.12,935,3.6,936,4.12,937,4.12,938,4.12,939,4.12,940,4.12,941,3.258,942,3.6,943,4.12,944,4.12,945,4.12,946,4.12,947,4.12,948,4.12,949,4.12,950,4.12,951,4.12,952,3.6,953,4.12,954,4.12,955,4.12,956,4.12,957,4.12,958,4.12,959,4.12,960,4.12,961,4.12,962,4.12,963,4.12,964,3.6,965,4.12,966,4.12,967,4.12,968,3.6,969,4.12,970,4.12,971,4.12,972,4.12,973,4.12,974,4.12,975,4.12,976,4.12,977,4.12,978,4.12,979,4.12,980,4.12,981,4.12,982,4.12,983,4.12,984,4.12,985,4.12,986,4.12,987,4.12,988,4.12,989,4.12,990,4.12,991,4.12,992,4.12,993,4.12,994,4.12,995,3.6,996,4.12,997,4.12,998,4.12,999,4.12,1000,4.12,1001,4.12,1002,4.12,1003,4.12,1004,4.12,1005,4.12,1006,4.12,1007,2.68,1008,4.12,1009,4.12,1010,2.628,1011,4.12,1012,4.12,1013,4.12,1014,4.12,1015,3.002,1016,4.12,1017,4.12,1018,4.12,1019,4.12,1020,4.12,1021,2.628,1022,4.12,1023,4.12,1024,4.12,1025,4.12,1026,3.002,1027,4.12,1028,4.12,1029,4.12,1030,3.6,1031,4.12,1032,3.6,1033,4.12,1034,3.6,1035,4.12,1036,4.12,1037,4.12,1038,3.258,1039,4.12,1040,2.68,1041,4.12,1042,4.12,1043,4.12,1044,4.12,1045,4.12,1046,4.12,1047,4.12,1048,4.12,1049,4.12,1050,4.12,1051,4.12,1052,4.12,1053,4.12,1054,4.12,1055,4.12,1056,4.12,1057,4.12,1058,4.12,1059,4.12,1060,4.12,1061,4.12,1062,4.12,1063,4.12,1064,2.68]],["title/components/DialogCategoryComponent.html",[0,0.39,282,1.083]],["body/components/DialogCategoryComponent.html",[0,0.429,1,0.599,2,0.955,3,0.058,4,0.051,5,0.638,6,0.703,7,0.638,8,0.638,9,0.051,11,0.638,14,2.207,15,2.184,16,0.955,17,1.398,18,1.772,25,0.599,26,0.599,30,1.085,32,1.085,34,0.037,35,0.285,36,1.532,37,2.811,39,1.884,41,1.884,42,0.475,49,0.811,51,0.884,52,0.013,53,0.699,54,0.112,55,0.427,57,1.77,60,0.906,61,1.961,64,1.094,65,1.184,66,1.653,68,2.177,70,2.049,72,1.721,74,0.382,76,0.803,77,2.341,80,0.216,81,0.659,82,0.924,83,1.686,84,0.703,85,0.959,88,0.997,89,0.959,90,0.959,102,0.058,103,0.225,128,1.653,132,1.792,137,3.06,140,1.438,154,1.448,166,1.018,176,0.638,230,0.79,243,2.576,258,0.638,259,1.018,260,1.018,261,0.638,262,0.638,263,0.638,264,0.599,265,0.638,266,0.638,267,0.599,268,0.638,269,0.638,270,0.599,271,0.638,272,0.638,273,1.018,274,0.58,275,1.269,276,0.58,277,0.638,278,1.018,279,0.599,280,0.638,281,0.638,282,1.359,283,1.94,284,0.638,285,0.599,286,0.638,287,0.599,288,0.638,289,0.599,290,0.638,291,0.638,292,0.58,293,0.638,294,0.599,295,0.638,296,0.599,297,0.638,298,0.599,299,0.638,300,0.599,301,0.528,302,1.018,303,0.599,304,0.638,305,0.58,306,0.638,307,0.599,308,0.618,309,0.58,310,1.018,311,0.599,312,0.58,313,0.638,314,0.599,315,0.638,316,0.599,317,0.545,318,0.618,319,0.638,320,0.599,321,0.599,322,0.58,323,0.618,324,0.638,325,0.005,326,0.005,346,0.774,359,0.941,390,1.877,404,2.061,408,2.449,412,0.891,418,0.997,429,2.305,434,1.037,435,0.924,436,1.325,445,1.659,459,2.354,463,2.809,464,1.653,470,3.154,471,1.653,472,1.589,473,3.262,474,1.796,484,3.509,485,3.284,486,3.284,490,1.296,493,1.539,530,2.715,612,1.529,614,2.341,619,2.177,639,1.08,693,1.653,695,0.959,793,0.924,834,1.966,836,1.981,853,1.653,885,3.492,895,3.749,902,1.652,941,2.858,1065,5.728,1066,6.216,1067,1.981,1068,2.858,1069,2.341,1070,2.875,1071,2.875,1072,3.06,1073,3.06,1074,2.452,1075,3.06,1076,4.507,1077,3.614,1078,3.284,1079,4.507,1080,4.507,1081,3.564,1082,3.158,1083,3.614,1084,3.614,1085,3.158,1086,2.858,1087,2.858,1088,3.158,1089,2.858,1090,3.614,1091,3.564,1092,3.158,1093,6.02,1094,4.493,1095,2.267,1096,3.614,1097,2.267,1098,5.142,1099,3.614,1100,5.156,1101,2.267,1102,2.267,1103,2.267,1104,3.158,1105,4.564,1106,2.267,1107,2.858,1108,2.267,1109,3.06,1110,2.858,1111,2.267,1112,3.158,1113,2.267,1114,2.858,1115,2.267,1116,1.652,1117,3.614,1118,2.267,1119,2.267,1120,3.614,1121,2.267,1122,2.452,1123,3.158,1124,2.452,1125,2.066,1126,2.858,1127,2.267,1128,1.652,1129,3.614,1130,2.633,1131,2.267,1132,2.267,1133,2.267,1134,2.633,1135,2.267,1136,2.267,1137,2.267,1138,1.792,1139,2.267,1140,1.792,1141,2.267,1142,1.792,1143,1.233,1144,1.792,1145,1.652,1146,1.366,1147,1.981,1148,2.267,1149,1.792,1150,3.384,1151,1.981,1152,1.792,1153,2.267,1154,1.652,1155,1.792,1156,2.267,1157,3.614,1158,2.267,1159,1.652,1160,2.267,1161,4.733,1162,3.938,1163,2.267,1164,2.267,1165,2.267,1166,2.858,1167,1.981,1168,2.267,1169,2.267,1170,2.267,1171,1.981,1172,1.981,1173,3.284,1174,3.564,1175,1.652,1176,3.284,1177,3.564,1178,1.792,1179,1.792,1180,1.981,1181,2.267,1182,1.981,1183,2.267,1184,2.267,1185,3.158,1186,1.981,1187,1.981,1188,2.267,1189,3.938,1190,1.981,1191,1.981,1192,2.267,1193,1.981]],["title/components/DialogImageComponent.html",[0,0.39,285,1.083]],["body/components/DialogImageComponent.html",[0,0.399,1,0.538,2,0.876,3,0.052,4,0.046,5,0.573,6,0.631,7,0.573,8,0.573,9,0.154,11,0.573,14,2.176,15,2.151,16,0.876,18,1.648,25,0.538,26,0.538,28,2.177,30,0.995,32,0.995,34,0.033,35,0.261,36,1.525,37,2.92,39,1.771,41,1.771,42,0.436,49,0.822,51,0.79,52,0.013,53,0.644,54,0.109,55,0.382,57,1.506,60,0.852,61,1.883,64,1.183,65,1.224,66,1.516,68,1.997,70,2.457,72,1.579,74,0.387,76,0.721,77,2.177,80,0.194,81,0.592,82,0.83,83,1.597,84,0.631,85,0.862,86,0.445,88,0.895,89,0.862,90,0.862,102,0.052,103,0.202,128,1.516,137,2.846,140,1.361,154,1.36,166,1.18,176,0.573,230,0.724,243,2.396,258,0.573,259,0.933,260,0.933,261,0.573,262,0.573,263,0.573,264,0.538,265,0.573,266,0.573,267,0.538,268,0.573,269,0.573,270,0.538,271,0.573,272,0.573,273,0.933,274,0.521,275,1.18,276,0.521,277,0.573,278,0.933,279,0.538,280,0.573,281,0.573,282,0.538,283,1.875,284,0.573,285,1.277,286,0.573,287,0.538,288,0.573,289,0.538,290,0.573,291,0.573,292,0.521,293,0.573,294,0.538,295,0.573,296,0.538,297,0.573,298,0.538,299,0.573,300,0.538,301,0.474,302,0.933,303,0.538,304,0.573,305,0.521,306,0.573,307,0.538,308,0.555,309,0.521,310,0.933,311,0.538,312,0.521,313,0.573,314,0.538,315,0.573,316,0.538,317,0.489,318,0.555,319,0.573,320,0.538,321,0.538,322,0.521,323,0.555,324,0.573,325,0.005,326,0.005,344,0.521,346,0.617,348,0.964,359,0.985,390,1.721,404,1.917,408,2.301,412,0.801,418,0.895,429,2.114,431,3.703,434,0.931,435,0.83,436,1.215,445,1.655,459,2.242,463,2.641,464,1.516,470,3.037,471,1.516,472,1.457,473,3.121,474,2.083,484,3.755,485,3.054,486,3.054,490,1.164,493,1.382,530,2.525,612,1.403,614,1.721,619,1.997,639,0.97,689,1.647,690,1.227,693,1.516,695,0.862,718,2.911,743,1.61,791,2.525,793,0.83,834,1.803,836,1.457,923,2.896,1021,2.114,1065,5.792,1069,2.177,1070,2.673,1071,2.673,1072,2.846,1073,2.846,1074,2.281,1075,2.846,1078,3.054,1081,3.314,1086,2.621,1087,2.621,1089,2.621,1091,3.314,1100,4.205,1105,4.399,1107,2.621,1109,2.251,1110,2.621,1114,2.621,1116,1.483,1122,2.281,1124,2.281,1125,3.258,1126,3.82,1128,1.483,1130,2.415,1134,2.415,1138,1.61,1140,1.61,1142,1.61,1143,1.108,1144,1.61,1145,1.483,1146,1.227,1149,1.61,1150,2.911,1152,1.61,1154,1.483,1155,1.61,1161,4.205,1166,2.621,1173,2.415,1174,2.621,1175,1.483,1176,2.415,1177,2.621,1178,1.61,1179,1.61,1194,6.286,1195,1.779,1196,3.314,1197,4.191,1198,3.314,1199,4.191,1200,4.191,1201,4.191,1202,4.191,1203,4.191,1204,4.191,1205,4.191,1206,3.663,1207,4.191,1208,3.314,1209,3.314,1210,4.831,1211,3.314,1212,3.314,1213,3.314,1214,3.392,1215,2.036,1216,4.191,1217,2.036,1218,3.314,1219,2.036,1220,2.036,1221,2.036,1222,2.036,1223,2.036,1224,3.314,1225,3.392,1226,2.036,1227,3.314,1228,2.036,1229,2.036,1230,3.314,1231,3.314,1232,2.036,1233,2.036,1234,2.036,1235,2.036,1236,6.01,1237,2.036,1238,2.036,1239,2.893,1240,3.611,1241,3.314,1242,2.036,1243,3.314,1244,2.036,1245,2.036,1246,2.036,1247,5.318,1248,2.036,1249,2.896,1250,2.036,1251,2.036,1252,2.036,1253,2.036,1254,2.036,1255,2.036,1256,2.036,1257,1.61,1258,1.61,1259,2.036,1260,2.036,1261,5.701,1262,1.779,1263,2.036,1264,1.779,1265,2.036,1266,3.314,1267,2.036,1268,2.036,1269,5.701,1270,2.036,1271,2.036,1272,2.036,1273,3.314,1274,2.036,1275,2.036,1276,2.036,1277,2.036,1278,2.036,1279,2.036,1280,3.314,1281,2.036,1282,2.036,1283,2.036,1284,2.036,1285,2.036,1286,2.036,1287,2.036,1288,2.036,1289,3.314,1290,3.314,1291,2.036,1292,2.036,1293,2.036,1294,2.896,1295,4.191,1296,2.036,1297,2.036,1298,2.036,1299,1.779,1300,3.314,1301,2.896,1302,2.036,1303,2.036,1304,2.036,1305,1.779]],["title/components/DialogProductComponent.html",[0,0.39,287,1.083]],["body/components/DialogProductComponent.html",[0,0.417,1,0.575,2,0.924,3,0.056,4,0.049,5,0.612,6,0.674,7,0.612,8,0.612,9,0.049,11,0.612,14,2.195,15,2.171,16,0.924,17,1.36,18,1.724,25,0.575,26,0.575,28,2.277,30,1.05,32,1.05,34,0.035,35,0.276,36,1.526,37,2.794,39,1.84,41,1.84,42,0.46,49,0.8,51,0.844,52,0.013,53,0.676,54,0.108,55,0.408,57,1.854,60,0.871,61,1.911,64,1.078,65,1.17,66,1.599,68,2.106,70,2.498,72,1.665,74,0.379,76,0.77,77,2.277,79,1.599,80,0.207,81,0.632,82,0.887,83,1.652,84,0.674,85,0.92,88,0.956,89,0.92,90,0.92,101,0.995,102,0.056,103,0.216,128,1.599,137,2.977,140,1.408,154,1.414,166,0.984,176,0.612,230,0.764,243,2.506,258,0.612,259,0.984,260,0.984,261,0.612,262,0.612,263,0.612,264,0.575,265,0.612,266,0.612,267,0.575,268,0.612,269,0.612,270,0.575,271,0.612,272,0.612,273,0.984,274,0.557,275,1.234,276,0.557,277,0.612,278,0.984,279,0.575,280,0.612,281,0.612,282,0.575,283,1.915,284,0.612,285,0.575,286,0.612,287,1.327,288,0.612,289,0.575,290,0.612,291,0.612,292,0.557,293,0.612,294,0.575,295,0.612,296,0.575,297,0.612,298,0.575,299,0.612,300,0.575,301,0.506,302,0.984,303,0.575,304,0.612,305,0.557,306,0.612,307,0.575,308,0.593,309,0.557,310,0.984,311,0.575,312,0.557,313,0.612,314,0.575,315,0.612,316,0.575,317,0.523,318,0.593,319,0.612,320,0.575,321,0.575,322,0.557,323,0.593,324,0.612,325,0.005,326,0.005,346,0.799,348,1.016,359,0.924,390,1.816,404,2.005,408,2.392,412,0.855,418,0.956,429,2.23,434,0.995,435,0.887,436,1.281,445,1.553,459,2.311,463,2.774,464,1.599,470,3.159,471,1.599,472,1.537,473,3.208,474,1.081,484,3.311,485,3.194,486,3.194,490,1.243,493,1.477,530,2.641,612,1.479,614,2.277,619,2.106,639,1.036,680,2.774,683,1.737,686,1.243,693,1.599,695,0.92,791,2.641,793,0.887,834,1.902,836,1.927,941,2.764,1015,2.547,1065,5.657,1069,2.277,1070,2.796,1071,2.796,1072,2.977,1073,2.977,1074,2.385,1075,2.977,1078,3.194,1081,3.466,1082,3.055,1085,3.055,1086,2.764,1087,2.764,1088,3.055,1089,2.764,1091,3.466,1092,3.055,1093,6.187,1094,4.388,1100,4.35,1104,3.055,1105,4.501,1107,2.764,1109,2.977,1110,2.764,1112,3.055,1114,2.764,1116,1.585,1122,2.385,1124,2.993,1125,3.358,1128,1.585,1130,2.547,1134,2.547,1138,1.72,1140,1.72,1142,1.72,1143,1.183,1144,1.72,1145,1.585,1146,1.31,1149,1.72,1150,3.54,1152,1.72,1154,1.585,1155,1.72,1159,2.547,1161,4.646,1166,2.764,1173,3.194,1174,3.466,1175,1.585,1176,3.194,1177,3.466,1178,1.72,1179,1.72,1180,1.9,1185,3.831,1186,1.9,1187,3.055,1189,3.831,1190,1.9,1191,1.9,1193,1.9,1206,3.831,1239,1.183,1249,3.055,1264,3.055,1306,6.139,1307,1.9,1308,4.384,1309,3.496,1310,4.384,1311,2.87,1312,2.764,1313,6.802,1314,2.175,1315,3.496,1316,2.175,1317,5.021,1318,2.175,1319,2.175,1320,2.175,1321,2.175,1322,2.175,1323,2.175,1324,3.496,1325,2.175,1326,2.175,1327,2.175,1328,2.175,1329,2.175,1330,2.764,1331,3.055,1332,2.764,1333,6.422,1334,5.876,1335,2.764,1336,3.055,1337,3.496,1338,2.175,1339,2.175,1340,3.496,1341,2.175,1342,2.175,1343,2.175,1344,2.175,1345,2.175,1346,1.585,1347,2.175,1348,1.9,1349,2.175,1350,2.175,1351,2.175,1352,2.175,1353,3.055,1354,2.175,1355,2.175,1356,2.175,1357,1.9,1358,3.055,1359,2.175,1360,2.175,1361,2.175,1362,1.9,1363,2.175]],["title/injectables/DpCategoriesService.html",[327,0.373,893,2.985]],["body/injectables/DpCategoriesService.html",[3,0.13,4,0.114,9,0.114,34,0.083,35,0.509,36,1.323,42,0.849,46,0.743,49,0.834,51,1.017,52,0.013,53,0.769,54,0.126,55,0.491,60,1.017,64,0.825,65,0.853,74,0.394,80,0.482,86,1.108,102,0.13,103,0.504,121,2.734,122,3.169,325,0.009,326,0.009,327,0.588,329,1.298,344,2.134,346,0.889,348,2.068,356,1.339,357,1.298,358,1.474,359,1.216,366,3.127,368,2.228,379,2.228,380,2.414,381,2.632,382,2.632,383,2.632,384,2.632,887,5.645,888,5.645,889,6.544,890,5.645,891,5.645,893,4.708,894,5.645,895,4.373,896,6.254,897,5.645,899,5.645,900,5.645,902,3.693,1364,4.044,1365,4.429,1366,6.461,1367,5.068,1368,5.068,1369,5.068,1370,5.068,1371,5.068,1372,6.461]],["title/injectables/DpImagesService.html",[327,0.373,1373,2.985]],["body/injectables/DpImagesService.html",[3,0.116,4,0.101,9,0.101,34,0.073,35,0.471,36,1.248,42,0.786,46,0.659,49,0.833,51,1.027,52,0.013,53,0.777,54,0.128,55,0.496,60,1.027,64,0.731,65,0.757,70,2.046,74,0.403,80,0.428,86,0.982,102,0.116,103,0.447,121,3.027,122,3.027,325,0.009,326,0.009,327,0.544,329,1.151,344,2.14,346,0.904,348,2.08,356,1.188,357,1.151,358,1.307,359,1.228,366,2.951,368,1.976,379,1.976,380,2.141,381,2.335,382,2.335,383,2.335,384,2.335,445,1.579,689,2.234,690,2.708,769,3.275,851,2.969,873,3.892,1214,4.562,1225,4.562,1257,3.554,1258,3.554,1364,4.031,1373,4.354,1374,3.928,1375,5.221,1376,5.221,1377,6.25,1378,5.221,1379,5.221,1380,5.221,1381,5.221,1382,5.975,1383,5.221,1384,4.495,1385,5.221,1386,4.495,1387,4.495,1388,5.221,1389,4.495,1390,5.221,1391,4.495,1392,5.221,1393,4.495,1394,5.221,1395,4.495,1396,5.975,1397,4.495,1398,4.495,1399,4.495,1400,4.495,1401,3.928,1402,7.655,1403,5.975,1404,5.975,1405,5.975,1406,5.975,1407,5.975,1408,6.711]],["title/injectables/DpOrderCompositionsService.html",[327,0.373,1409,2.985]],["body/injectables/DpOrderCompositionsService.html",[3,0.129,4,0.113,9,0.113,34,0.082,35,0.506,36,1.316,42,0.844,46,0.735,49,0.832,51,1.014,52,0.013,53,0.767,54,0.126,55,0.49,60,1.014,64,0.816,65,0.844,74,0.392,80,0.477,86,1.096,102,0.129,103,0.499,121,2.716,122,3.157,325,0.009,326,0.009,327,0.584,329,1.284,344,2.13,346,0.887,348,2.058,356,1.325,357,1.284,358,1.458,359,1.212,366,3.112,368,2.205,379,2.205,380,2.389,381,2.605,382,2.605,383,2.605,384,2.605,1364,4.035,1409,4.676,1410,6.421,1411,4.383,1412,5.608,1413,5.608,1414,6.519,1415,5.608,1416,5.608,1417,6.418,1418,5.608,1419,5.445,1420,5.016,1421,6.892,1422,5.608,1423,5.016,1424,5.016,1425,5.608,1426,5.016,1427,5.608,1428,5.016,1429,6.418,1430,4.383]],["title/injectables/DpOrdersService.html",[327,0.373,1431,2.985]],["body/injectables/DpOrdersService.html",[3,0.13,4,0.114,9,0.114,34,0.083,35,0.509,36,1.323,42,0.849,46,0.743,49,0.834,51,1.017,52,0.013,53,0.769,54,0.126,55,0.491,60,1.017,64,0.825,65,0.853,74,0.394,80,0.482,86,1.108,102,0.13,103,0.504,121,2.734,122,3.169,325,0.009,326,0.009,327,0.588,329,1.298,344,2.134,346,0.889,348,2.068,356,1.339,357,1.298,358,1.474,359,1.216,366,3.127,368,2.228,379,2.228,380,2.414,381,2.632,382,2.632,383,2.632,384,2.632,1364,4.044,1431,4.708,1432,4.429,1433,5.645,1434,5.645,1435,6.544,1436,5.645,1437,5.645,1438,6.461,1439,5.645,1440,4.843,1441,5.068,1442,6.254,1443,5.645,1444,5.068,1445,5.068,1446,5.645,1447,5.068,1448,5.645,1449,5.068,1450,6.461,1451,4.429]],["title/injectables/DpProductAttributesService.html",[327,0.373,1452,2.985]],["body/injectables/DpProductAttributesService.html",[3,0.129,4,0.113,9,0.113,34,0.082,35,0.506,36,1.316,42,0.844,46,0.735,49,0.832,51,1.014,52,0.013,53,0.767,54,0.126,55,0.49,60,1.014,64,0.816,65,0.844,74,0.392,80,0.477,86,1.096,102,0.129,103,0.499,121,2.716,122,3.157,325,0.009,326,0.009,327,0.584,329,1.284,344,2.13,346,0.887,348,2.058,356,1.325,357,1.284,358,1.458,359,1.212,366,3.112,368,2.205,379,2.205,380,2.389,381,2.605,382,2.605,383,2.605,384,2.605,683,4.035,1364,4.035,1452,4.676,1453,4.383,1454,5.608,1455,5.608,1456,6.519,1457,5.608,1458,5.608,1459,6.418,1460,5.608,1461,4.583,1462,5.016,1463,6.892,1464,5.608,1465,5.016,1466,5.016,1467,5.608,1468,5.016,1469,5.608,1470,5.016,1471,6.418,1472,4.383]],["title/injectables/DpSizesService.html",[327,0.373,1473,2.985]],["body/injectables/DpSizesService.html",[3,0.13,4,0.114,9,0.114,34,0.083,35,0.509,36,1.323,42,0.849,46,0.743,49,0.834,51,1.017,52,0.013,53,0.769,54,0.126,55,0.491,60,1.017,64,0.825,65,0.853,74,0.394,80,0.482,86,1.108,102,0.13,103,0.504,121,2.734,122,3.169,325,0.009,326,0.009,327,0.588,329,1.298,344,2.134,346,0.889,348,2.068,356,1.339,357,1.298,358,1.474,359,1.216,366,3.127,368,2.228,379,2.228,380,2.414,381,2.632,382,2.632,383,2.632,384,2.632,1364,4.044,1473,4.708,1474,4.429,1475,5.645,1476,5.645,1477,6.544,1478,5.645,1479,5.645,1480,6.461,1481,5.645,1482,4.843,1483,5.068,1484,6.254,1485,5.645,1486,5.068,1487,5.068,1488,5.645,1489,5.068,1490,5.645,1491,5.068,1492,6.461,1493,4.429]],["title/injectables/DpUserProjsService.html",[327,0.373,1494,2.985]],["body/injectables/DpUserProjsService.html",[3,0.129,4,0.113,9,0.113,34,0.082,35,0.506,36,1.316,42,0.844,46,0.735,49,0.832,51,1.014,52,0.013,53,0.767,54,0.126,55,0.49,60,1.014,64,0.816,65,0.844,74,0.392,80,0.477,86,1.096,102,0.129,103,0.499,121,2.716,122,3.157,230,1.774,325,0.009,326,0.009,327,0.584,329,1.284,344,2.13,346,0.887,348,2.058,356,1.325,357,1.284,358,1.458,359,1.212,366,3.112,368,2.205,379,2.205,380,2.389,381,2.605,382,2.605,383,2.605,384,2.605,518,3.985,524,3.199,1364,4.035,1494,4.676,1495,4.383,1496,5.608,1497,5.608,1498,6.519,1499,5.608,1500,5.608,1501,6.418,1502,5.608,1503,5.016,1504,6.237,1505,5.608,1506,5.016,1507,5.016,1508,5.608,1509,5.016,1510,5.608,1511,5.016,1512,6.418]],["title/injectables/DpUsersService.html",[327,0.373,1513,2.985]],["body/injectables/DpUsersService.html",[3,0.13,4,0.114,9,0.114,34,0.083,35,0.509,36,1.323,42,0.849,46,0.743,49,0.834,51,1.017,52,0.013,53,0.769,54,0.126,55,0.491,60,1.017,64,0.825,65,0.853,74,0.394,80,0.482,86,1.108,102,0.13,103,0.504,121,2.734,122,3.169,325,0.009,326,0.009,327,0.588,329,1.298,344,2.134,346,0.889,348,2.068,356,1.339,357,1.298,358,1.474,359,1.216,366,3.127,368,2.228,379,2.228,380,2.414,381,2.632,382,2.632,383,2.632,384,2.632,573,4.175,575,3.233,1364,4.044,1513,4.708,1514,4.429,1515,5.645,1516,5.645,1517,6.544,1518,5.645,1519,5.645,1520,6.461,1521,5.645,1522,5.068,1523,6.254,1524,5.645,1525,5.068,1526,5.068,1527,5.645,1528,5.068,1529,5.645,1530,5.068,1531,6.461]],["title/components/FilterByInputComponent.html",[0,0.39,289,1.083]],["body/components/FilterByInputComponent.html",[0,0.529,1,0.839,2,1.237,3,0.082,4,0.072,5,0.894,6,0.984,7,0.894,8,0.894,9,0.072,11,0.894,12,2.985,13,2.985,14,2.287,15,2.272,16,1.237,25,0.839,26,0.839,30,1.405,32,1.405,34,0.052,35,0.369,36,1.034,42,0.615,46,0.815,49,0.819,51,0.86,52,0.013,53,0.704,54,0.121,55,0.45,57,1.813,60,0.86,61,1.932,64,1.114,65,1.288,70,2.24,74,0.415,75,1.912,80,0.302,83,1.405,85,1.343,100,1.776,102,0.082,103,0.316,128,2.14,140,1.675,154,1.728,166,1.566,176,0.894,197,2.543,230,1.023,248,1.248,249,1.248,250,1.248,251,1.248,252,1.204,253,1.248,254,1.248,255,1.248,256,1.248,257,1.248,258,0.894,259,1.318,260,1.318,261,0.894,262,0.894,263,0.894,264,0.839,265,0.894,266,0.894,267,0.839,268,0.894,269,0.894,270,0.839,271,0.894,272,0.894,273,1.318,274,0.813,275,1.566,276,0.813,277,0.894,278,1.318,279,0.839,280,0.894,281,0.894,282,0.839,283,1.566,284,0.894,285,0.839,286,0.894,287,0.839,288,0.894,289,1.809,290,2.046,291,0.894,292,0.813,293,0.894,294,0.839,295,0.894,296,0.839,297,0.894,298,0.839,299,0.894,300,0.839,301,0.739,302,1.318,303,0.839,304,0.894,305,0.813,306,0.894,307,0.839,308,0.866,309,0.813,310,1.318,311,0.839,312,0.813,313,0.894,314,0.839,315,0.894,316,0.839,317,0.763,318,0.866,319,0.894,320,0.839,321,0.839,322,0.813,323,0.866,324,0.894,325,0.007,326,0.007,359,0.499,390,2.431,418,2.444,425,1.577,445,1.622,612,2.597,614,3.399,615,2.985,617,3.178,619,2.82,633,3.776,639,3.117,640,3.178,793,1.294,930,4.858,1069,2.888,1070,3.546,1071,3.546,1105,2.155,1122,3.025,1124,3.025,1143,1.727,1146,1.912,1154,2.313,1182,4.858,1532,6.947,1533,6.947,1534,2.773,1535,5.56,1536,4.09,1537,4.09,1538,5.56,1539,4.68,1540,5.56,1541,4.68,1542,3.174,1543,4.68,1544,3.546,1545,5.56,1546,5.56,1547,5.56,1548,4.68,1549,4.68,1550,4.68,1551,4.68,1552,4.68,1553,5.56,1554,5.56,1555,3.174,1556,3.174,1557,6.136,1558,3.174,1559,3.174,1560,4.68,1561,5.56,1562,3.174,1563,4.68,1564,3.174,1565,5.362,1566,4.68,1567,3.174,1568,3.174,1569,3.174,1570,4.68,1571,4.68,1572,3.174,1573,4.68,1574,5.56,1575,3.174,1576,3.174,1577,3.174,1578,3.174,1579,3.174,1580,3.174,1581,4.68,1582,3.174,1583,3.174,1584,3.174,1585,3.174,1586,3.174,1587,3.174,1588,3.174,1589,3.174,1590,3.174,1591,3.174,1592,3.174,1593,3.174,1594,3.174,1595,3.174,1596,3.174,1597,3.174,1598,3.174,1599,3.174,1600,3.174,1601,3.174,1602,3.174,1603,3.174]],["title/components/HeaderComponent.html",[0,0.39,292,1.049]],["body/components/HeaderComponent.html",[0,0.603,1,1.063,2,1.464,3,0.103,4,0.091,5,1.56,6,1.247,7,1.132,8,1.132,9,0.091,11,1.132,14,2.332,15,2.313,16,1.464,17,1.966,25,1.063,26,1.063,30,1.664,34,0.066,49,0.709,52,0.013,53,0.551,54,0.117,64,0.654,65,0.677,70,2.171,74,0.359,80,0.383,81,1.169,93,3.18,102,0.103,103,0.4,128,2.534,140,1.835,149,4.044,152,1.998,154,1.924,158,1.916,166,1.785,176,1.132,177,2.93,179,1.998,181,4.382,182,3.02,185,2.731,186,3.905,187,2.878,190,2.565,191,1.916,194,6.002,195,2.899,196,1.998,197,1.839,198,2.089,200,2.565,201,2.93,213,2.089,215,1.998,216,4.038,221,2.188,224,2.93,225,3.18,228,3.339,230,1.715,231,2.93,252,2.406,258,1.132,259,1.56,260,1.56,261,1.132,262,1.132,263,1.132,264,1.063,265,1.132,266,1.132,267,1.063,268,1.132,269,1.132,270,1.063,271,1.132,272,1.132,273,1.56,274,1.749,275,2.237,276,1.03,277,1.132,278,1.56,279,1.063,280,1.132,281,1.132,282,1.063,283,1.785,284,1.132,285,1.063,286,1.132,287,1.063,288,1.132,289,1.063,290,1.132,291,1.132,292,1.749,293,1.132,294,1.063,295,1.132,296,1.063,297,1.132,298,1.063,299,1.132,300,1.063,301,0.936,302,1.56,303,1.063,304,1.132,305,1.03,306,1.132,307,1.063,308,1.097,309,1.03,310,1.56,311,1.063,312,1.03,313,1.132,314,1.063,315,1.132,316,1.063,317,0.967,318,1.097,319,1.132,320,1.063,321,1.063,322,1.03,323,1.097,324,1.132,325,0.008,326,0.008,431,3.905,612,2.345,615,3.534,617,3.763,633,5.154,639,2.639,640,4.64,646,4.382,647,3.763,649,3.18,650,3.18,651,4.382,652,4.382,653,3.18,654,3.18,655,3.18,658,3.18,663,3.18,664,5.013,667,4.038,668,3.18,1604,3.514,1605,6.34,1606,6.832,1607,6.34,1608,5.54,1609,4.62,1610,5.54,1611,4.021,1612,4.021,1613,4.021,1614,4.021,1615,3.514,1616,3.514,1617,4.021,1618,4.021,1619,3.18,1620,3.514,1621,4.842]],["title/interfaces/IAchievement.html",[341,2.128,780,0.667]],["body/interfaces/IAchievement.html",[3,0.157,4,0.138,9,0.138,34,0.1,35,0.572,52,0.012,54,0.131,55,0.508,57,1.99,74,0.322,102,0.157,175,5.432,325,0.01,326,0.01,341,3.769,346,0.837,417,5.102,518,4.057,780,0.996,782,2.028,1622,5.35,1623,7.998,1624,7.998,1625,6.123]],["title/interfaces/IAddToCartRequest.html",[780,0.667,1626,2.468]],["body/interfaces/IAddToCartRequest.html",[3,0.162,4,0.142,9,0.142,34,0.103,35,0.582,52,0.012,54,0.128,55,0.469,102,0.162,325,0.011,326,0.011,346,0.921,780,1.026,782,2.087,813,4.615,851,4.012,853,3.692,1626,4.448,1627,5.508]],["title/interfaces/ICartItem.html",[780,0.667,787,2.468]],["body/interfaces/ICartItem.html",[3,0.156,4,0.137,9,0.137,34,0.099,35,0.57,52,0.012,54,0.133,55,0.459,57,1.854,102,0.156,325,0.01,326,0.01,346,0.928,780,0.99,782,2.015,787,4.356,811,5.42,812,5.42,813,4.562,851,3.966,853,3.728,1628,5.317,1629,5.317,1630,6.084]],["title/interfaces/ICartViewModel.html",[780,0.667,797,2.468]],["body/interfaces/ICartViewModel.html",[3,0.162,4,0.142,9,0.142,34,0.103,35,0.581,52,0.012,54,0.12,74,0.388,102,0.162,325,0.011,326,0.011,680,3.353,780,1.024,782,2.084,787,4.955,797,4.444,809,5.88,1631,5.499,1632,5.48,1633,6.293]],["title/interfaces/ICreateDpImageRequest.html",[780,0.667,1214,2.613]],["body/interfaces/ICreateDpImageRequest.html",[3,0.163,4,0.143,9,0.191,34,0.103,35,0.583,52,0.012,54,0.128,57,1.884,102,0.163,325,0.011,326,0.011,346,0.848,780,1.029,782,2.094,1214,4.718,1239,4.398,1240,5.488,1634,5.526]],["title/interfaces/IDpCategory.html",[780,0.667,895,2.229]],["body/interfaces/IDpCategory.html",[3,0.154,4,0.135,9,0.135,34,0.098,35,0.566,52,0.012,54,0.133,55,0.456,57,1.844,74,0.378,102,0.154,187,4.128,325,0.01,326,0.01,346,0.892,680,3.312,780,0.978,782,1.99,853,3.635,895,3.905,1123,6.946,1159,5.792,1482,4.894,1635,5.25,1636,7.949,1637,6.008]],["title/interfaces/IDpImage.html",[689,2.036,780,0.667]],["body/interfaces/IDpImage.html",[3,0.156,4,0.136,9,0.136,34,0.099,35,0.568,52,0.012,54,0.133,55,0.458,57,1.85,74,0.319,102,0.156,325,0.01,326,0.01,346,0.893,680,3.319,689,3.583,780,0.985,782,2.005,1239,4.336,1240,5.412,1638,5.291,1639,6.964,1640,6.964,1641,7.969,1642,7.699,1643,6.055]],["title/interfaces/IDpOrder.html",[780,0.667,1440,2.468]],["body/interfaces/IDpOrder.html",[3,0.156,4,0.136,9,0.136,34,0.099,35,0.568,52,0.012,54,0.133,55,0.458,57,1.85,74,0.319,102,0.156,325,0.01,326,0.01,346,0.893,573,4.228,780,0.985,782,2.005,788,4.911,1440,4.344,1523,6.301,1644,5.291,1645,7.969,1646,6.964,1647,7.969,1648,5.807,1649,6.055]],["title/interfaces/IDpOrderComposition.html",[780,0.667,1419,2.782]],["body/interfaces/IDpOrderComposition.html",[3,0.153,4,0.134,9,0.134,34,0.097,35,0.562,52,0.012,54,0.134,74,0.375,102,0.153,325,0.01,326,0.01,346,0.925,780,0.967,782,1.968,1419,4.842,1440,4.88,1442,6.263,1461,4.63,1646,6.921,1650,5.194,1651,7.92,1652,6.921,1653,7.92,1654,7.92,1655,5.943]],["title/interfaces/IDpOrderDetail.html",[780,0.667,1656,2.985]],["body/interfaces/IDpOrderDetail.html",[3,0.155,4,0.136,9,0.136,34,0.098,35,0.566,52,0.012,54,0.135,55,0.505,57,1.982,102,0.155,325,0.01,326,0.01,346,0.926,780,0.979,782,1.993,811,5.401,813,4.546,814,6.288,853,3.637,1656,5.234,1657,5.258,1658,7.953,1659,7.953]],["title/interfaces/IDpProduct.html",[680,1.671,780,0.667]],["body/interfaces/IDpProduct.html",[3,0.141,4,0.124,9,0.124,34,0.09,35,0.536,52,0.012,54,0.137,55,0.538,57,1.94,74,0.388,102,0.141,325,0.01,326,0.01,346,0.925,680,2.771,689,3.937,780,0.894,782,1.82,895,4.311,896,6.097,1159,5.618,1239,4.195,1330,6.097,1331,6.737,1332,6.097,1335,6.097,1336,6.737,1461,4.529,1660,4.801,1661,6.097,1662,6.737,1663,5.494]],["title/interfaces/IDpProductAttribute.html",[780,0.667,1461,2.342]],["body/interfaces/IDpProductAttribute.html",[3,0.152,4,0.133,9,0.133,34,0.096,35,0.56,52,0.012,54,0.134,55,0.502,74,0.374,102,0.152,325,0.01,326,0.01,346,0.924,680,3.297,780,0.961,782,1.956,1239,4.301,1461,4.06,1482,4.872,1484,6.25,1640,6.907,1652,6.907,1664,5.162,1665,7.904,1666,7.904,1667,5.907]],["title/interfaces/IDpSize.html",[780,0.667,1482,2.468]],["body/interfaces/IDpSize.html",[3,0.156,4,0.137,9,0.137,34,0.099,35,0.569,52,0.012,54,0.13,55,0.507,57,1.853,74,0.38,102,0.156,187,4.143,325,0.01,326,0.01,346,0.834,780,0.988,782,2.012,853,3.648,895,4.433,1461,4.657,1482,4.352,1662,6.971,1668,5.308,1669,7.977,1670,6.075]],["title/interfaces/IDpUser.html",[573,2.128,780,0.667]],["body/interfaces/IDpUser.html",[3,0.148,4,0.13,9,0.13,34,0.094,35,0.551,52,0.012,54,0.136,55,0.529,57,2.065,74,0.303,102,0.148,325,0.01,326,0.01,346,0.815,573,3.633,780,0.937,782,1.907,788,4.805,1440,4.837,1648,5.709,1671,5.031,1672,7.836,1673,7.836,1674,7.836,1675,6.196,1676,6.196,1677,6.196,1678,6.196,1679,5.757]],["title/interfaces/IDpUserProj.html",[518,2.036,780,0.667]],["body/interfaces/IDpUserProj.html",[3,0.156,4,0.136,9,0.136,34,0.099,35,0.568,52,0.012,54,0.133,55,0.506,57,2.034,74,0.319,102,0.156,301,1.856,325,0.01,326,0.01,341,4.228,346,0.833,435,3.25,518,3.583,552,4.801,780,0.985,782,2.005,1680,5.291,1681,5.807,1682,7.969]],["title/interfaces/IRemoveFromCartRequest.html",[780,0.667,1683,2.782]],["body/interfaces/IRemoveFromCartRequest.html",[3,0.164,4,0.144,9,0.144,34,0.104,35,0.587,52,0.012,54,0.122,55,0.473,102,0.164,325,0.011,326,0.011,346,0.904,780,1.041,782,2.118,851,4.031,853,3.71,1683,5.057,1684,5.59]],["title/interfaces/IUpdateCartRequest.html",[780,0.667,799,2.468]],["body/interfaces/IUpdateCartRequest.html",[3,0.162,4,0.142,9,0.142,34,0.103,35,0.582,52,0.012,54,0.128,55,0.469,102,0.162,325,0.011,326,0.011,346,0.921,780,1.026,782,2.087,799,4.448,813,4.615,851,4.012,853,3.692,1685,5.508]],["title/interfaces/IUpdateDpImageRequest.html",[780,0.667,1225,2.613]],["body/interfaces/IUpdateDpImageRequest.html",[3,0.162,4,0.142,9,0.191,34,0.103,35,0.582,52,0.012,54,0.128,55,0.469,57,1.882,102,0.162,325,0.011,326,0.011,346,0.847,780,1.026,782,2.087,1225,4.709,1239,4.393,1240,5.483,1686,5.508]],["title/interfaces/IUserHasAchievement.html",[780,0.667,1687,2.782]],["body/interfaces/IUserHasAchievement.html",[3,0.148,4,0.13,9,0.13,34,0.094,35,0.552,52,0.013,54,0.131,55,0.498,74,0.369,102,0.148,325,0.01,326,0.01,341,4.294,343,6.202,346,0.884,417,5.003,418,3.317,518,4.108,780,0.94,782,1.912,1504,6.202,1681,5.715,1687,4.758,1688,5.046,1689,7.844]],["title/components/IconTrashComponent.html",[0,0.39,294,1.083]],["body/components/IconTrashComponent.html",[0,0.598,1,1.044,2,1.447,3,0.102,4,0.089,5,1.113,6,1.225,7,1.113,8,1.113,9,0.089,11,1.113,14,2.329,15,2.318,16,1.447,17,1.948,24,3.59,25,1.044,26,1.044,29,4.266,30,1.644,32,1.644,34,0.064,36,1.018,42,0.72,46,0.803,48,3.197,49,0.704,51,0.52,52,0.013,53,0.625,54,0.103,55,0.251,60,0.52,61,1.402,70,1.353,74,0.438,80,0.376,81,1.149,82,2.765,83,1.644,84,1.225,86,0.863,87,1.554,100,2.078,102,0.102,103,0.393,140,1.823,154,1.91,166,1.113,176,2.168,230,1.196,248,1.554,249,1.554,250,1.554,251,1.554,252,1.5,253,1.554,254,1.554,255,1.554,256,1.554,257,1.554,258,1.113,259,1.542,260,1.542,261,1.113,262,1.113,263,1.113,264,1.044,265,1.113,266,1.113,267,1.447,268,1.542,269,1.113,270,1.044,271,1.113,272,1.113,273,1.542,274,1.012,275,1.769,276,1.012,277,1.113,278,1.542,279,1.044,280,1.113,281,1.113,282,1.044,283,1.769,284,1.113,285,1.044,286,1.113,287,1.044,288,1.113,289,1.044,290,1.113,291,1.113,292,1.012,293,1.113,294,1.792,295,1.113,296,1.044,297,1.113,298,1.044,299,1.113,300,1.044,301,0.92,302,1.542,303,1.044,304,1.113,305,1.012,306,1.113,307,1.044,308,1.078,309,1.012,310,1.542,311,1.044,312,1.736,313,1.113,314,1.044,315,1.113,316,1.044,317,0.95,318,1.078,319,1.113,320,1.044,321,1.044,322,1.012,323,1.078,324,1.113,325,0.008,326,0.008,359,0.861,445,1.044,479,3.124,484,2.992,492,3.453,493,2.683,494,2.683,495,3.453,497,2.15,614,3.262,615,3.492,617,3.718,633,4.266,639,2.608,640,3.718,787,3.784,796,3.124,836,1.737,1078,3.989,1173,2.879,1175,2.879,1176,2.879,1690,6.223,1691,6.223,1692,3.453,1693,5.474,1694,3.951,1695,5.474,1696,6.781,1697,6.281,1698,3.951,1699,5.474,1700,3.951,1701,3.951,1702,3.951,1703,5.474,1704,3.951,1705,3.951,1706,3.951,1707,3.453,1708,3.951,1709,3.951,1710,3.453,1711,6.281,1712,5.474,1713,3.951,1714,3.951]],["title/injectables/ImagesRepositoryService.html",[327,0.373,718,2.468]],["body/injectables/ImagesRepositoryService.html",[3,0.1,4,0.088,9,0.088,34,0.064,35,0.428,36,1.365,42,0.714,46,0.573,49,0.828,51,0.99,52,0.013,53,0.749,54,0.127,55,0.478,60,1.01,64,0.884,65,0.914,70,1.86,74,0.386,80,0.372,86,0.854,102,0.1,103,0.388,325,0.008,326,0.008,327,0.494,329,1,331,1.654,344,2.143,346,0.888,348,1.962,350,3.414,351,4.747,356,1.033,357,1,358,1.136,359,1.255,431,4.304,445,1.65,494,2.653,519,2.029,548,4.917,689,3.648,690,2.354,718,3.273,745,2.847,746,5.168,767,3.414,769,5.168,851,2.699,873,3.672,903,2.029,1021,4.803,1214,4.304,1225,4.304,1257,3.09,1258,3.09,1373,5.35,1375,4.747,1376,4.747,1377,5.897,1378,4.747,1379,4.747,1380,4.747,1381,4.747,1383,4.747,1385,4.747,1388,4.747,1390,4.747,1392,4.747,1394,4.747,1715,7.034,1716,6.244,1717,6.244,1718,6.748,1719,3.907,1720,3.907,1721,3.907,1722,3.907,1723,3.414,1724,3.907,1725,3.907,1726,3.907,1727,3.907,1728,3.907,1729,7.342,1730,3.907,1731,5.432,1732,5.432,1733,3.907,1734,3.907,1735,3.907,1736,3.907,1737,3.907,1738,3.907,1739,3.907,1740,3.907,1741,4.747,1742,3.414,1743,3.907,1744,3.907,1745,3.907,1746,6.244,1747,3.907,1748,3.907,1749,3.907,1750,3.907,1751,3.907,1752,3.907,1753,3.907,1754,5.432,1755,3.907]],["title/components/LoadingComponent.html",[0,0.39,296,1.083]],["body/components/LoadingComponent.html",[0,0.669,1,1.307,2,1.681,3,0.127,4,0.111,5,1.392,7,1.392,8,1.392,9,0.111,11,1.392,14,2.364,15,2.357,16,1.307,25,1.307,26,1.307,32,1.909,34,0.081,35,0.501,49,0.513,52,0.012,53,0.632,54,0.081,57,1.528,59,4.484,64,0.805,65,0.832,74,0.26,80,0.471,102,0.127,103,0.492,140,1.966,154,2.09,176,1.392,230,1.39,258,1.392,259,1.791,260,1.791,261,1.392,262,1.392,263,1.392,264,1.307,265,1.392,266,1.392,267,1.307,268,1.392,269,1.392,270,1.307,271,1.392,272,1.392,273,1.791,274,1.266,275,1.98,276,1.266,277,1.392,278,1.791,279,1.307,280,1.392,281,1.392,282,1.307,283,1.98,284,1.392,285,1.307,286,1.392,287,1.307,288,1.392,289,1.307,290,1.392,291,1.392,292,1.266,293,1.392,294,1.307,295,1.392,296,1.961,297,1.392,298,1.307,299,1.392,300,1.307,301,1.151,302,1.791,303,1.307,304,1.392,305,1.266,306,1.392,307,1.307,308,1.349,309,1.266,310,1.791,311,1.307,312,1.266,313,1.392,314,1.307,315,1.392,316,1.307,317,1.188,318,1.349,319,1.392,320,1.307,321,1.307,322,1.266,323,1.349,324,1.392,325,0.009,326,0.009,503,5.029,1756,4.321,1757,5.557,1758,6.359,1759,6.359,1760,6.359,1761,4.945]],["title/components/LoginComponent.html",[0,0.39,298,1.083]],["body/components/LoginComponent.html",[0,0.508,1,0.783,2,1.175,3,0.076,4,0.067,5,0.834,6,0.919,7,0.834,8,0.834,9,0.067,11,0.834,14,2.272,15,2.256,16,1.175,17,1.655,18,2.098,19,3.624,25,0.783,26,0.783,30,1.335,32,1.335,34,0.048,35,0.35,36,1.287,37,2.1,38,2.652,39,2.537,41,2.537,42,0.585,46,0.652,48,2.93,49,0.615,51,0.389,52,0.013,53,0.531,54,0.048,55,0.188,60,0.585,61,1.138,64,0.482,65,0.499,66,1.354,70,2.37,72,1.411,74,0.432,76,1.574,79,2.033,80,0.282,81,0.861,82,2.418,83,1.781,84,1.379,85,1.253,87,1.165,88,1.302,89,1.253,90,1.253,97,3.957,98,2.011,100,1.687,101,1.354,102,0.076,103,0.294,140,1.627,141,2.904,142,3.08,143,1.889,147,3.05,152,2.209,153,2.309,154,2.005,155,3.227,156,2.541,157,1.693,158,2.117,159,1.538,160,2.541,164,3.08,165,3.227,166,1.879,167,2.835,169,1.693,170,1.693,171,2.011,176,0.834,182,1.411,191,1.411,195,1.354,196,1.472,197,1.354,198,2.309,213,1.538,221,1.611,230,1.166,245,1.889,247,2.678,248,1.165,249,1.165,250,1.165,251,1.165,252,1.124,253,1.165,254,1.165,255,1.165,256,1.165,257,1.165,258,0.834,259,1.252,260,1.252,261,0.834,262,0.834,263,0.834,264,0.783,265,0.834,266,0.834,267,0.783,268,0.834,269,0.834,270,0.783,271,0.834,272,0.834,273,1.252,274,0.758,275,1.503,276,0.758,277,0.834,278,1.252,279,0.783,280,0.834,281,0.834,282,0.783,283,1.503,284,0.834,285,0.783,286,0.834,287,0.783,288,0.834,289,0.783,290,0.834,291,0.834,292,0.758,293,0.834,294,0.783,295,0.834,296,0.783,297,0.834,298,1.567,299,0.834,300,0.783,301,1.243,302,1.252,303,0.783,304,0.834,305,0.758,306,0.834,307,0.783,308,0.808,309,0.758,310,1.252,311,0.783,312,0.758,313,0.834,314,0.783,315,0.834,316,0.783,317,0.712,318,1.456,319,0.834,320,0.783,321,0.783,322,0.758,323,0.808,324,0.834,325,0.006,326,0.006,359,0.466,404,2.44,406,2.835,412,2.332,434,1.354,435,1.208,436,1.629,445,1.567,459,2.332,463,2.722,464,1.354,470,2.258,471,2.44,472,2.346,473,2.772,474,2.652,484,2.542,497,2.419,552,2.678,557,2.835,570,4.028,573,2.309,575,1.889,592,2.342,593,2.588,673,2.904,693,1.354,695,1.253,778,1.784,788,1.889,793,1.208,835,2.419,836,2.346,1069,2.772,1074,2.904,1122,2.904,1124,3.458,1125,3.39,1143,1.611,1544,4.257,1609,4.322,1648,2.158,1675,2.342,1676,2.342,1677,2.342,1678,2.342,1762,2.588,1763,3.888,1764,3.888,1765,3.888,1766,3.888,1767,3.888,1768,3.888,1769,2.962,1770,4.445,1771,5.183,1772,2.588,1773,2.962,1774,3.884,1775,2.962,1776,2.962,1777,3.884,1778,3.884,1779,2.962,1780,2.158,1781,2.011,1782,4.445,1783,2.158,1784,2.588,1785,2.158,1786,3.884,1787,2.962,1788,2.588,1789,2.158,1790,2.158,1791,4.22,1792,3.515,1793,2.962,1794,2.962,1795,2.342,1796,2.588,1797,3.404,1798,1.784,1799,2.011,1800,3.888,1801,2.158,1802,3.239]],["title/components/LoginProjComponent.html",[0,0.39,300,1.083]],["body/components/LoginProjComponent.html",[0,0.541,1,0.872,2,1.272,3,0.085,4,0.074,5,0.929,6,1.023,7,0.929,8,0.929,9,0.074,11,0.929,14,2.295,15,2.281,16,1.272,17,1.763,18,2.236,19,3.861,25,0.872,26,0.872,30,1.446,32,1.446,34,0.054,35,0.38,36,1.057,37,2.214,38,2.825,42,0.633,46,0.706,48,3.033,49,0.649,51,0.434,52,0.013,53,0.565,54,0.054,55,0.21,60,0.633,61,1.233,64,0.537,65,0.555,66,1.509,70,2.376,74,0.434,76,1.168,79,2.202,80,0.314,81,0.959,82,2.549,83,1.877,84,1.493,85,1.396,87,1.297,100,1.827,101,1.509,102,0.085,103,0.328,140,1.702,141,3.093,142,3.247,143,2.104,147,3.25,152,2.392,153,2.501,154,2.069,155,3.401,156,2.752,157,1.886,158,2.293,159,1.713,160,2.752,164,3.247,165,3.401,166,1.601,167,3.071,169,1.886,170,1.886,171,2.24,176,0.929,182,1.571,191,1.571,195,1.509,196,1.639,197,1.509,198,2.501,213,1.713,221,1.795,230,1.052,245,2.104,247,2.901,248,1.297,249,1.297,250,1.297,251,1.297,252,1.252,253,1.297,254,1.297,255,1.297,256,1.297,257,1.297,258,0.929,259,1.356,260,1.356,261,0.929,262,0.929,263,0.929,264,0.872,265,0.929,266,0.929,267,0.872,268,0.929,269,0.929,270,0.872,271,0.929,272,0.929,273,1.356,274,0.845,275,1.601,276,0.845,277,0.929,278,1.356,279,0.872,280,0.929,281,0.929,282,0.872,283,1.601,284,0.929,285,0.872,286,0.929,287,0.872,288,0.929,289,0.872,290,0.929,291,0.929,292,0.845,293,0.929,294,0.872,295,0.929,296,0.872,297,0.929,298,0.872,299,0.929,300,1.652,301,1.796,302,1.356,303,0.872,304,0.929,305,0.845,306,0.929,307,0.872,308,0.9,309,0.845,310,1.356,311,0.872,312,0.845,313,0.929,314,0.872,315,0.929,316,0.872,317,0.793,318,1.551,319,0.929,320,0.872,321,0.872,322,1.702,323,0.9,324,0.929,325,0.007,326,0.007,400,1.795,436,1.209,441,2.104,442,2.104,445,0.872,459,2.458,463,1.963,464,1.509,484,2.708,497,3.093,512,4.245,518,2.392,520,2.404,524,2.104,552,3.425,557,2.104,673,3.093,695,1.396,778,1.987,793,1.345,835,2.62,836,2.117,1069,2.953,1074,3.093,1122,3.093,1124,3.617,1125,3.573,1143,1.795,1544,4.427,1609,4.555,1681,2.404,1763,4.143,1764,4.143,1765,4.143,1766,4.143,1767,4.143,1768,4.143,1771,5.462,1780,2.404,1781,2.24,1783,2.404,1785,2.404,1790,2.404,1796,2.883,1797,3.626,1798,1.987,1799,2.24,1800,4.143,1801,2.404,1802,3.508,1803,5.809,1804,5.809,1805,2.404,1806,2.883,1807,3.807,1808,2.883,1809,2.608,1810,4.207,1811,3.299,1812,2.883,1813,2.883,1814,3.807,1815,2.883,1816,3.299,1817,3.299,1818,2.883,1819,3.299,1820,2.883]],["title/components/NavbarComponent.html",[0,0.39,303,1.083]],["body/components/NavbarComponent.html",[0,0.558,1,0.921,2,1.324,3,0.09,4,0.079,5,0.982,6,1.081,7,0.982,8,0.982,9,0.079,11,0.982,14,2.306,15,2.293,16,1.324,17,1.82,18,2.307,23,3.984,24,3.354,25,1.695,26,1.695,27,3.984,28,3.047,29,3.984,30,1.505,32,1.505,34,0.057,35,0.395,36,1.091,41,2.671,42,0.659,43,3.652,46,0.735,47,2.757,48,2.994,49,0.774,51,0.659,52,0.013,53,0.638,54,0.096,55,0.318,56,3.652,57,1.41,59,2.224,60,0.893,61,1.945,64,0.816,65,0.844,72,1.661,74,0.435,76,1.235,79,2.292,80,0.332,81,1.014,83,1.505,84,1.081,85,1.476,87,1.371,89,1.476,90,1.476,92,2.541,93,2.757,95,2.368,96,2.757,97,4.166,98,2.368,100,1.902,101,1.595,102,0.09,103,0.347,105,2.757,140,1.74,154,1.992,155,2.727,176,0.982,179,3.515,229,6.182,230,1.546,243,3.354,244,4.275,248,1.371,249,1.371,250,1.371,251,1.371,252,1.323,253,1.371,254,1.371,255,1.371,256,1.371,257,1.371,258,0.982,259,1.411,260,1.411,261,0.982,262,0.982,263,0.982,264,0.921,265,0.982,266,0.982,267,0.921,268,0.982,269,0.982,270,0.921,271,0.982,272,1.411,273,1.411,274,0.893,275,1.652,276,0.893,277,0.982,278,1.411,279,0.921,280,0.982,281,0.982,282,0.921,283,1.652,284,0.982,285,0.921,286,0.982,287,0.921,288,0.982,289,0.921,290,0.982,291,0.982,292,0.893,293,0.982,294,0.921,295,0.982,296,0.921,297,0.982,298,0.921,299,0.982,300,0.921,301,0.812,302,1.411,303,1.695,304,0.982,305,0.893,306,0.982,307,0.921,308,0.951,309,0.893,310,1.411,311,0.921,312,0.893,313,0.982,314,0.921,315,0.982,316,0.921,317,0.838,318,1.367,319,0.982,320,0.921,321,0.921,322,0.893,323,0.951,324,0.982,325,0.007,326,0.007,408,3.055,418,2.204,425,3.187,445,0.921,514,4.356,531,4.674,533,4.674,550,2.757,564,3.652,567,2.757,614,2.603,693,1.595,791,3.535,792,3.535,793,1.422,1619,5.072,1790,2.541,1821,3.047,1822,5.012,1823,3.487,1824,5.012,1825,4.639,1826,5.605,1827,5.012,1828,3.487,1829,3.487,1830,3.487,1831,3.487,1832,3.487,1833,3.487,1834,5.012,1835,3.487,1836,5.012,1837,3.047,1838,3.487,1839,3.487,1840,3.487,1841,3.487,1842,5.012,1843,3.963,1844,6.414,1845,5.012,1846,5.012]],["title/injectables/OrderCompositionsRepositoryService.html",[327,0.373,1847,3.239]],["body/injectables/OrderCompositionsRepositoryService.html",[3,0.132,4,0.116,9,0.116,34,0.084,42,0.856,46,0.752,49,0.823,51,1.021,52,0.013,53,0.772,54,0.127,55,0.493,60,1.021,74,0.396,80,0.488,86,1.121,102,0.132,103,0.51,325,0.009,326,0.009,327,0.592,329,1.313,331,2.171,344,2.137,346,0.891,348,2.079,356,1.355,357,1.313,358,1.491,359,1.221,516,2.791,519,2.664,521,2.791,523,2.664,898,3.09,901,3.09,903,2.664,1409,5.781,1410,4.056,1412,5.688,1413,5.688,1414,6.573,1415,5.688,1416,5.688,1418,5.688,1419,5.473,1421,6.784,1422,5.688,1425,5.688,1427,5.688,1430,4.482,1847,5.147,1848,6.373,1849,7.043,1850,5.129,1851,5.129,1852,5.129,1853,5.129,1854,5.129,1855,5.129,1856,5.129]],["title/injectables/OrderRepositoryService.html",[327,0.373,1857,3.239]],["body/injectables/OrderRepositoryService.html",[3,0.133,4,0.117,9,0.117,34,0.085,42,0.862,46,0.76,49,0.825,51,1.024,52,0.013,53,0.774,54,0.127,55,0.495,60,1.024,74,0.397,80,0.493,86,1.133,102,0.133,103,0.515,325,0.009,326,0.009,327,0.596,329,1.327,331,2.194,344,2.141,346,0.892,348,2.09,356,1.37,357,1.327,358,1.507,359,1.225,516,2.821,519,2.693,521,2.821,523,2.693,898,3.123,901,3.123,903,2.693,1431,5.797,1433,5.727,1434,5.727,1435,6.599,1436,5.727,1437,5.727,1439,5.727,1440,4.867,1442,6.159,1443,5.727,1446,5.727,1448,5.727,1451,4.53,1848,6.388,1857,5.182,1858,5.184,1859,5.184,1860,5.184,1861,5.184,1862,5.184,1863,5.184,1864,5.184]],["title/components/PageCartComponent.html",[0,0.39,305,1.049]],["body/components/PageCartComponent.html",[0,0.359,1,0.463,2,0.774,3,0.045,4,0.039,5,0.494,6,0.544,7,0.494,8,0.494,9,0.039,11,0.494,12,1.868,13,1.868,14,2.13,15,2.1,16,0.774,17,1.17,18,1.484,24,2.157,25,0.463,26,0.463,28,1.96,30,0.879,32,0.879,34,0.062,35,0.231,36,1.283,37,2.442,38,1.875,39,2.062,41,1.616,42,0.385,46,0.429,48,2.677,49,0.768,51,0.832,52,0.013,53,0.646,54,0.111,55,0.389,60,0.874,61,1.859,64,0.863,65,1.032,66,0.801,72,1.395,74,0.403,75,1.056,76,1.037,77,1.96,79,1.339,80,0.279,81,0.51,82,1.798,83,1.133,84,0.544,87,0.689,88,0.771,89,0.742,90,0.742,100,1.112,101,0.801,102,0.045,103,0.174,128,1.339,140,1.702,141,0.954,142,1.521,147,1.674,149,2.407,150,1.19,152,1.455,153,0.91,154,1.584,155,2.053,156,1.002,157,1.674,158,0.835,159,0.91,160,1.002,163,1.19,164,0.91,165,1.594,166,1.661,176,0.494,179,1.455,182,2.525,184,1.531,185,1.989,186,1.002,194,1.386,195,0.801,196,0.871,197,0.801,198,2.29,199,1.277,200,1.118,215,1.875,218,1.989,222,2.559,230,0.64,231,2.134,246,3.862,248,0.689,249,0.689,250,0.689,251,0.689,252,0.665,253,0.689,254,0.689,255,0.689,256,0.689,257,0.689,258,0.494,259,0.825,260,0.825,261,0.494,262,0.494,263,0.494,264,0.463,265,0.494,266,0.494,267,0.463,268,0.494,269,0.494,270,0.463,271,0.494,272,0.494,273,0.825,274,0.449,275,1.062,276,0.449,277,0.494,278,0.825,279,0.463,280,0.494,281,0.494,282,0.463,283,1.062,284,0.494,285,0.463,286,0.494,287,0.463,288,0.494,289,0.463,290,0.494,291,0.494,292,0.449,293,0.494,294,0.463,295,0.494,296,0.463,297,0.494,298,0.463,299,0.494,300,0.463,301,0.408,302,0.825,303,0.463,304,0.494,305,1.129,306,0.494,307,0.463,308,0.478,309,0.449,310,0.825,311,0.463,312,1.569,313,0.494,314,0.463,315,0.494,316,0.463,317,0.421,318,0.478,319,0.494,320,0.463,321,0.463,322,0.449,323,0.478,324,0.494,325,0.004,326,0.004,346,0.733,359,0.885,390,1.521,395,2.983,396,2.983,404,1.725,408,2.1,412,1.733,425,3.143,434,0.801,435,0.715,436,1.073,438,1.19,439,1.19,445,1.717,459,2.909,463,3.104,464,2.016,470,1.597,471,1.725,472,1.659,473,3.374,474,3.228,484,3.735,488,2.983,490,1.002,497,1.594,530,2.273,612,1.866,614,0.91,639,0.835,673,0.954,693,1.725,695,1.597,701,2.983,702,2.983,722,3.212,748,2.994,780,0.285,781,5.69,783,5.065,784,5.897,785,1.386,786,1.531,787,1.765,788,1.868,789,2.559,790,3.297,791,2.273,792,2.273,793,0.715,794,3.297,795,1.531,796,1.386,797,1.765,798,1.277,799,1.765,800,1.277,801,2.812,802,1.386,803,3.128,804,2.559,805,2.559,806,3.297,807,2.559,808,2.559,809,2.749,810,3.297,811,1.989,812,2.994,813,3.615,814,2.316,815,2.983,816,3.297,817,1.531,818,1.531,819,1.531,820,1.531,821,1.531,822,2.316,823,3.297,824,1.531,825,3.852,826,1.531,827,1.531,828,1.531,829,4.916,830,1.531,831,1.531,832,5.002,833,5.808,834,2.053,835,3.616,836,2.922,837,2.559,838,3.297,839,4.632,840,1.531,841,1.386,842,1.531,843,2.559,844,5.355,845,3.877,846,2.559,847,2.559,848,2.559,849,2.316,850,1.531,851,1.455,852,4.191,853,1.339,854,4.191,855,1.531,856,3.852,857,3.852,858,1.386,859,2.994,860,1.531,861,1.531,862,2.316,863,1.531,864,1.386,865,1.531,866,1.531,867,1.531,868,1.531,869,1.277,870,1.531,871,2.559,872,2.983,873,0.954,874,3.297,875,1.531,876,1.531,877,1.386,878,3.297,879,1.531,880,3.852,881,4.285,882,2.559,883,1.531,884,2.559,1026,2.134,1105,1.19,1797,1.868,1865,1.753,1866,2.929,1867,2.929,1868,2.929,1869,2.929,1870,2.929,1871,1.753,1872,1.753,1873,1.753,1874,1.753,1875,1.753,1876,1.753,1877,1.753,1878,1.753,1879,1.753,1880,1.753,1881,1.753,1882,1.753,1883,1.753,1884,1.753,1885,1.753,1886,1.753,1887,1.753,1888,1.753,1889,1.753,1890,1.753,1891,1.753,1892,1.753,1893,1.753,1894,2.929,1895,2.929,1896,2.929,1897,1.753,1898,2.929,1899,1.753,1900,1.753,1901,1.753,1902,1.753]],["title/components/PageCatalogItemComponent.html",[0,0.39,307,1.083]],["body/components/PageCatalogItemComponent.html",[0,0.527,1,0.833,2,1.23,3,0.081,4,0.071,5,0.887,6,0.977,7,0.887,8,0.887,9,0.071,11,0.887,12,2.969,13,2.969,14,2.286,15,2.27,16,1.23,17,1.717,25,0.833,26,0.833,28,2.875,30,1.398,32,1.398,34,0.076,35,0.367,36,1.377,37,1.116,38,2.751,39,2.589,41,2.589,42,0.612,46,0.682,49,0.733,51,0.728,52,0.013,53,0.649,54,0.1,55,0.352,60,0.804,61,1.748,64,0.513,65,0.53,66,1.441,74,0.431,75,1.898,76,1.116,77,2.875,80,0.443,81,0.916,82,2.493,83,0.946,84,0.977,86,0.688,88,1.385,89,1.333,90,1.333,100,1.766,102,0.081,103,0.313,128,2.129,140,1.979,154,1.722,166,1.559,176,0.887,179,1.566,182,1.501,186,1.801,187,1.636,191,1.501,195,1.441,196,2.313,197,1.441,198,2.418,213,1.636,219,2.139,221,1.714,230,1.017,242,2.139,248,1.239,249,1.239,250,1.239,251,1.239,252,1.196,253,1.239,254,1.239,255,1.239,256,1.239,257,1.239,258,0.887,259,1.311,260,1.311,261,0.887,262,0.887,263,0.887,264,0.833,265,0.887,266,0.887,267,0.833,268,0.887,269,0.887,270,0.833,271,0.887,272,0.887,273,1.311,274,0.807,275,1.559,276,1.565,277,0.887,278,1.311,279,0.833,280,0.887,281,0.887,282,0.833,283,1.559,284,0.887,285,0.833,286,0.887,287,0.833,288,0.887,289,0.833,290,0.887,291,0.887,292,0.807,293,0.887,294,0.833,295,0.887,296,0.833,297,0.887,298,0.833,299,0.887,300,0.833,301,0.734,302,1.311,303,0.833,304,0.887,305,0.807,306,0.887,307,1.616,308,2.258,309,0.807,310,1.311,311,0.833,312,1.417,313,0.887,314,0.833,315,0.887,316,0.833,317,0.757,318,0.859,319,0.887,320,0.833,321,0.833,322,0.807,323,0.859,324,0.887,325,0.007,326,0.007,344,1.417,346,0.784,359,0.732,390,2.418,404,2.532,408,2.912,412,2.404,425,3.242,434,1.441,435,1.285,436,1.706,445,1.23,459,2.404,463,2.257,464,1.441,470,2.588,471,1.441,472,1.385,473,2.418,612,2.343,671,2.491,672,2.491,674,2.753,675,4.067,680,2.66,682,2.753,683,2.751,685,2.753,686,1.801,691,4.067,693,1.441,694,2.491,721,4.837,722,4.455,759,5.343,783,4.924,815,4.377,832,4.835,834,1.714,835,1.714,836,1.385,841,2.491,1030,4.067,1150,2.804,1311,3.495,1346,2.296,1632,3.759,1757,2.753,1798,1.898,1903,6.336,1904,6.114,1905,4.655,1906,2.753,1907,4.655,1908,4.067,1909,4.655,1910,3.15,1911,4.655,1912,3.15,1913,3.15,1914,3.15,1915,3.15,1916,3.15,1917,5.536,1918,3.15,1919,3.15,1920,3.15,1921,3.15,1922,4.655,1923,3.15,1924,2.491,1925,3.15,1926,4.655,1927,3.15,1928,2.753,1929,2.753,1930,2.753,1931,2.753,1932,3.15,1933,3.15,1934,3.15]],["title/components/PageComponent.html",[0,0.39,309,1.049]],["body/components/PageComponent.html",[0,0.766,1,0.806,2,1.701,3,0.078,4,0.069,5,1.28,6,0.946,7,0.859,8,0.859,9,0.069,11,0.859,14,2.279,15,2.268,16,1.201,17,1.685,25,0.806,26,0.806,30,1.365,34,0.05,35,0.358,42,0.598,49,0.625,52,0.012,53,0.598,54,0.074,59,1.946,60,0.714,61,1.391,64,0.496,65,0.514,74,0.317,80,0.29,81,0.887,102,0.078,103,0.303,128,2.079,140,2.124,141,1.66,142,3.343,149,4.767,150,2.072,152,2.699,153,1.585,154,1.695,158,1.453,159,1.585,163,2.072,166,1.812,168,4.295,176,0.859,177,2.223,179,2.699,181,4.295,182,2.587,185,3.086,186,3.996,187,3.126,190,3.839,191,3.066,195,2.484,200,2.899,201,3.312,210,2.666,215,1.516,216,4.69,230,1.604,231,3.312,243,4.389,258,0.859,259,1.28,260,1.28,261,0.859,262,0.859,263,0.859,264,0.806,265,0.859,266,0.859,267,0.806,268,0.859,269,0.859,270,0.806,271,0.859,272,0.859,273,1.28,274,0.781,275,2.357,276,0.781,277,0.859,278,1.28,279,0.806,280,0.859,281,0.859,282,0.806,283,1.53,284,0.859,285,0.806,286,0.859,287,0.806,288,0.859,289,0.806,290,0.859,291,0.859,292,1.541,293,0.859,294,0.806,295,0.859,296,0.806,297,0.859,298,0.806,299,0.859,300,0.806,301,0.71,302,1.28,303,0.806,304,0.859,305,0.781,306,0.859,307,0.806,308,0.832,309,1.541,310,1.28,311,0.806,312,0.781,313,0.859,314,0.806,315,0.859,316,0.806,317,0.733,318,0.832,319,0.859,320,0.806,321,0.806,322,0.781,323,0.832,324,0.859,325,0.007,326,0.007,431,3.679,612,1.923,622,3.958,646,4.295,647,3.689,649,2.412,650,2.412,651,3.594,652,3.594,653,2.412,654,2.412,655,2.412,663,2.412,664,2.412,665,4.759,666,2.666,667,3.312,668,2.412,669,2.223,777,4.295,1130,3.958,1619,3.594,1843,2.412,1924,2.412,1935,2.666,1936,5.432,1937,7.342,1938,5.432,1939,5.432,1940,5.432,1941,6.748,1942,5.432,1943,5.432,1944,5.432,1945,5.432,1946,5.432,1947,6.748,1948,5.432,1949,5.432,1950,4.746,1951,5.432,1952,5.432,1953,5.432,1954,5.432,1955,4.746,1956,5.432,1957,5.432,1958,5.432,1959,5.432,1960,5.432,1961,5.432,1962,5.432,1963,5.432,1964,5.432,1965,4.746,1966,4.746,1967,5.432,1968,4.746,1969,5.432,1970,6.748,1971,4.746,1972,4.746,1973,5.432,1974,5.432,1975,4.746,1976,5.432,1977,4.295,1978,5.432,1979,6.99,1980,5.432,1981,4.746,1982,5.432,1983,5.432,1984,5.432,1985,6.019,1986,6.019,1987,6.019,1988,3.051,1989,3.051,1990,3.051,1991,3.051,1992,3.051,1993,5.432,1994,3.971,1995,3.971,1996,3.051,1997,3.051,1998,3.051,1999,3.051,2000,5.432,2001,3.051,2002,3.051,2003,3.051,2004,3.051,2005,3.051,2006,4.545,2007,3.051,2008,3.051,2009,3.051]],["title/components/PageItemFromCatalogComponent.html",[0,0.39,311,1.083]],["body/components/PageItemFromCatalogComponent.html",[0,0.371,1,0.485,2,0.804,3,0.047,4,0.041,5,0.517,6,0.569,7,0.517,8,0.517,9,0.041,11,0.517,14,2.145,15,2.126,16,0.804,17,1.209,18,1.533,25,0.485,26,0.485,30,0.913,32,0.913,34,0.03,35,0.24,36,1.227,37,0.65,38,1.937,39,2.105,41,2.105,42,0.4,46,0.446,49,0.667,51,0.512,52,0.013,53,0.5,54,0.089,55,0.248,60,0.661,61,1.646,64,0.495,65,0.512,66,0.839,74,0.378,76,0.65,77,2.024,79,1.391,80,0.29,81,0.533,82,1.849,83,0.551,84,0.569,87,0.721,88,0.806,89,0.776,90,0.776,101,0.839,102,0.047,103,0.182,112,4.288,139,1.45,140,1.726,141,3.27,142,3.81,143,2.486,147,3.099,149,3.834,150,2.066,152,1.937,153,2.983,154,2.173,155,3.393,156,1.739,157,2.228,158,3.272,159,3.122,160,3.099,163,2.066,164,2.983,165,3.125,166,2.103,168,1.45,169,1.048,170,1.739,175,3.08,176,0.517,177,1.337,179,3.47,180,1.94,182,2.395,185,1.246,186,3.77,187,3.239,190,1.17,191,2.97,192,1.45,195,2.749,196,3.645,197,2.3,198,2.983,199,2.217,200,1.94,203,2.658,209,1.603,213,2.356,214,2.405,215,2.499,216,2.217,218,2.066,219,3.682,220,3.406,221,2.468,223,2.405,224,1.337,225,1.45,228,3.03,230,0.665,236,3.406,238,5.019,241,1.603,242,3.415,243,3.435,244,4.38,245,1.94,246,3.664,258,0.517,259,0.857,260,0.857,261,0.517,262,0.517,263,0.517,264,0.485,265,0.517,266,0.517,267,0.485,268,0.517,269,0.517,270,0.485,271,0.517,272,0.517,273,0.857,274,0.47,275,1.098,276,0.47,277,1.617,278,0.857,279,1.199,280,1.277,281,0.517,282,0.485,283,1.098,284,0.517,285,0.485,286,0.517,287,0.485,288,0.517,289,0.485,290,0.517,291,0.517,292,0.47,293,0.517,294,0.485,295,0.517,296,0.485,297,0.517,298,0.485,299,0.517,300,0.485,301,0.427,302,0.857,303,0.485,304,0.517,305,0.47,306,0.517,307,0.485,308,1.063,309,0.47,310,0.857,311,1.199,312,2.054,313,0.517,314,0.485,315,0.517,316,0.485,317,0.441,318,0.5,319,0.517,320,0.485,321,0.485,322,0.47,323,0.5,324,0.517,325,0.004,326,0.004,346,0.491,359,0.478,390,1.58,404,1.782,408,2.16,412,1.783,434,0.839,435,0.748,436,1.428,445,1.518,459,2.594,463,2.749,464,1.391,470,1.287,471,1.391,472,1.338,473,2.983,474,2.854,497,0.998,619,1.833,639,1.449,644,1.337,647,1.246,657,1.603,658,2.405,659,2.658,662,1.603,669,2.217,673,2.121,677,3.082,678,2.647,680,2.211,683,3.95,684,1.603,686,1.048,687,1.337,688,1.603,689,1.512,690,1.105,693,0.839,695,0.776,701,1.45,702,1.45,705,3.963,715,2.658,719,3.406,720,3.963,734,2.658,735,5.019,737,3.406,741,1.45,742,1.337,754,3.406,777,1.45,778,4.499,779,3.406,783,4.479,792,2.348,793,0.748,801,2.893,802,1.45,803,2.486,812,3.08,813,3.099,822,3.082,834,0.998,835,2.468,836,2.211,851,0.912,853,0.839,873,0.998,914,1.603,919,3.406,921,2.658,1010,2.893,1021,3.459,1032,3.963,1068,3.082,1239,1.655,1311,3.283,1346,1.337,1615,2.658,1616,1.603,1629,2.658,1741,2.658,1797,3.208,1798,2.348,1843,2.405,1931,1.603,1971,1.603,2010,5.763,2011,1.603,2012,3.898,2013,3.042,2014,3.898,2015,3.042,2016,1.834,2017,4.535,2018,3.042,2019,3.042,2020,1.834,2021,1.834,2022,1.834,2023,1.834,2024,3.042,2025,1.834,2026,1.834,2027,1.834,2028,1.834,2029,1.834,2030,1.834,2031,1.834,2032,1.834,2033,1.834,2034,1.834,2035,3.042,2036,1.603,2037,1.603,2038,1.603,2039,1.603,2040,2.658,2041,1.834,2042,1.834,2043,1.834,2044,1.834,2045,1.603,2046,1.834,2047,1.834,2048,1.834,2049,1.834,2050,1.834,2051,1.834,2052,1.834,2053,1.834,2054,1.834,2055,1.834,2056,1.834,2057,1.834,2058,1.834,2059,1.834,2060,1.834,2061,1.834,2062,1.603,2063,1.834,2064,1.834,2065,1.834,2066,1.834,2067,1.834,2068,1.834,2069,1.834,2070,1.834,2071,1.834,2072,3.042,2073,3.042,2074,3.042,2075,3.042,2076,5.744,2077,5.029,2078,3.898,2079,5.029,2080,3.042,2081,1.834,2082,3.406,2083,3.042,2084,3.042,2085,3.042,2086,1.834,2087,1.834,2088,3.898,2089,3.042,2090,1.834,2091,1.834,2092,1.834,2093,3.042,2094,1.834,2095,1.834,2096,2.658,2097,3.042,2098,3.042,2099,1.834,2100,1.834,2101,2.658,2102,3.082,2103,1.834,2104,1.834,2105,3.042,2106,1.834,2107,3.042,2108,1.834,2109,3.042,2110,1.603,2111,1.603,2112,1.834,2113,1.834,2114,3.042,2115,1.834,2116,1.834,2117,1.834]],["title/injectables/ProductAttributesRepositoryService.html",[327,0.373,2118,3.239]],["body/injectables/ProductAttributesRepositoryService.html",[3,0.132,4,0.116,9,0.116,34,0.084,42,0.856,46,0.752,49,0.823,51,1.021,52,0.013,53,0.772,54,0.127,55,0.493,60,1.021,74,0.396,80,0.488,86,1.121,102,0.132,103,0.51,325,0.009,326,0.009,327,0.592,329,1.313,331,2.171,344,2.137,346,0.891,348,2.079,356,1.355,357,1.313,358,1.491,359,1.221,516,2.791,519,2.664,521,2.791,523,2.664,683,2.549,898,3.09,901,3.09,903,2.664,1452,5.781,1454,5.688,1455,5.688,1456,6.573,1457,5.688,1458,5.688,1460,5.688,1461,4.607,1463,6.784,1464,5.688,1467,5.688,1469,5.688,1472,4.482,2118,5.147,2119,7.043,2120,7.043,2121,5.129,2122,5.129,2123,5.129,2124,5.129,2125,5.129,2126,5.129,2127,5.129]],["title/injectables/ProductsRepositoryService.html",[327,0.373,1311,2.342]],["body/injectables/ProductsRepositoryService.html",[3,0.118,4,0.104,9,0.104,34,0.075,36,0.857,42,0.799,46,0.676,49,0.816,51,1.014,52,0.013,53,0.766,54,0.126,55,0.49,60,1.014,74,0.406,80,0.439,86,1.007,102,0.118,103,0.458,325,0.009,326,0.009,327,0.553,329,1.18,331,1.95,344,2.128,346,0.873,348,1.975,356,1.218,357,1.18,358,1.34,359,1.236,436,1.689,494,3.129,523,2.393,678,4.905,680,3.253,683,3.906,686,2.634,718,4.352,724,5.372,745,4.426,746,4.426,873,2.507,903,2.393,1010,3.874,1015,4.426,1311,3.472,1312,4.803,1626,4.352,1632,4.125,1661,4.803,1707,4.026,1742,4.026,1930,4.026,2128,6.971,2129,5.307,2130,6.311,2131,5.307,2132,4.608,2133,5.617,2134,4.608,2135,4.426,2136,4.608,2137,5.307,2138,4.608,2139,5.307,2140,4.608,2141,5.307,2142,4.026,2143,5.307,2144,4.608,2145,3.358,2146,4.608,2147,4.608,2148,4.608,2149,4.608,2150,4.608,2151,4.608,2152,4.608,2153,4.608,2154,4.608,2155,4.608,2156,4.608,2157,4.608,2158,4.608]],["title/injectables/ProductsService.html",[327,0.373,2133,2.985]],["body/injectables/ProductsService.html",[3,0.125,4,0.11,9,0.11,34,0.08,35,0.497,36,1.299,42,0.829,46,0.715,49,0.838,51,1.029,52,0.013,53,0.778,54,0.128,55,0.497,60,1.029,64,0.793,65,0.821,74,0.402,80,0.464,86,1.066,102,0.125,103,0.485,121,2.667,122,3.124,325,0.009,326,0.009,327,0.573,329,1.248,344,2.144,346,0.882,348,2.03,356,1.289,357,1.248,358,1.418,359,1.231,366,3.07,368,2.144,379,2.144,380,2.323,381,2.533,382,2.533,383,2.533,384,2.533,680,3.248,683,3.89,686,2.787,873,3.429,1010,4.02,1015,4.592,1312,4.983,1364,4.054,1626,4.447,2129,5.507,2130,6.45,2131,5.507,2133,4.592,2135,4.592,2137,5.507,2139,5.507,2141,5.507,2143,5.507,2145,3.553,2159,4.261,2160,6.302,2161,4.876,2162,4.876,2163,4.876,2164,4.876,2165,4.876,2166,4.876,2167,6.302,2168,4.261]],["title/components/RegisterComponent.html",[0,0.39,314,1.083]],["body/components/RegisterComponent.html",[0,0.504,1,0.773,2,1.164,3,0.075,4,0.066,5,0.824,6,0.907,7,0.824,8,0.824,9,0.066,11,0.824,14,2.27,15,2.253,16,1.164,17,1.643,18,2.083,19,3.597,25,0.773,26,0.773,30,1.322,32,1.322,34,0.048,35,0.347,36,1.236,37,2.088,38,2.632,39,2.527,41,2.527,42,0.579,46,0.646,48,2.918,49,0.612,51,0.385,52,0.013,53,0.527,54,0.048,55,0.186,57,0.703,60,0.579,61,1.128,64,0.476,65,0.493,66,1.338,70,2.36,72,1.394,74,0.43,76,1.56,79,2.014,80,0.278,81,0.851,82,2.404,83,1.77,84,1.366,85,1.238,87,1.15,88,1.286,89,1.238,90,1.238,100,1.672,101,1.338,102,0.075,103,0.291,140,1.619,141,2.882,142,3.062,143,1.866,147,3.028,152,2.189,153,2.288,154,1.998,155,3.207,156,2.518,157,1.672,158,2.098,159,1.52,160,2.518,164,3.062,165,3.207,166,1.871,167,2.809,169,1.672,170,1.672,171,1.987,176,0.824,182,1.394,191,1.394,195,1.338,196,1.454,197,1.338,198,2.288,213,1.52,221,1.592,230,1.158,245,1.866,247,2.654,248,1.15,249,1.15,250,1.15,251,1.15,252,1.11,253,1.15,254,1.15,255,1.15,256,1.15,257,1.15,258,0.824,259,1.24,260,1.24,261,0.824,262,0.824,263,0.824,264,0.773,265,0.824,266,0.824,267,0.773,268,0.824,269,0.824,270,0.773,271,0.824,272,0.824,273,1.24,274,0.749,275,1.492,276,0.749,277,0.824,278,1.24,279,0.773,280,0.824,281,0.824,282,0.773,283,1.492,284,0.824,285,0.773,286,0.824,287,0.773,288,0.824,289,0.773,290,0.824,291,0.824,292,0.749,293,0.824,294,0.773,295,0.824,296,0.773,297,0.824,298,0.773,299,0.824,300,0.773,301,0.681,302,1.24,303,0.773,304,0.824,305,0.749,306,0.824,307,0.773,308,0.798,309,0.749,310,1.24,311,0.773,312,0.749,313,0.824,314,1.558,315,0.824,316,0.773,317,1.273,318,1.445,319,0.824,320,0.773,321,0.773,322,0.749,323,0.798,324,0.824,325,0.006,326,0.006,346,0.316,359,0.46,404,2.423,406,2.809,412,2.318,434,1.338,435,1.193,436,1.614,445,1.558,459,2.486,463,2.811,464,1.338,470,2.495,471,2.423,472,2.329,473,2.751,474,2.632,484,2.523,497,1.592,552,2.654,557,1.866,564,2.132,570,4.003,573,2.288,575,1.866,592,2.313,673,2.882,693,1.338,695,1.238,778,1.763,788,1.866,793,1.193,835,2.882,836,2.592,1069,2.751,1074,2.882,1122,2.882,1124,3.44,1125,3.369,1143,1.592,1544,4.238,1648,2.132,1675,2.313,1676,2.313,1677,2.313,1678,2.313,1763,3.86,1764,3.86,1765,3.86,1766,3.86,1767,3.86,1768,3.86,1772,2.557,1774,3.849,1777,3.849,1778,3.849,1780,2.132,1781,1.987,1783,2.132,1784,2.557,1785,2.132,1789,2.132,1791,4.189,1792,3.483,1795,2.313,1797,3.379,1798,1.763,1799,1.987,1800,3.86,1801,2.132,1802,3.21,2169,2.557,2170,2.926,2171,4.405,2172,5.151,2173,5.151,2174,2.926,2175,2.926,2176,2.926,2177,2.926,2178,4.405,2179,3.849,2180,2.926,2181,2.926,2182,2.557,2183,2.926,2184,3.849,2185,2.926,2186,2.926,2187,2.926]],["title/components/RegisterProjComponent.html",[0,0.39,316,1.083]],["body/components/RegisterProjComponent.html",[0,0.539,1,0.865,2,1.265,3,0.084,4,0.074,5,0.922,6,1.015,7,0.922,8,0.922,9,0.074,11,0.922,14,2.294,15,2.279,16,1.265,17,1.755,18,2.226,19,3.844,25,0.865,26,0.865,30,1.437,32,1.437,34,0.053,35,0.377,36,1.053,37,2.206,38,2.813,42,0.63,46,0.702,48,3.026,49,0.646,51,0.43,52,0.013,53,0.563,54,0.053,55,0.208,60,0.63,61,1.226,64,0.533,65,0.551,66,1.497,70,2.37,74,0.433,76,1.159,79,2.19,80,0.312,81,0.952,82,2.54,83,1.87,84,1.485,85,1.385,87,1.287,100,1.817,101,1.497,102,0.084,103,0.325,140,1.697,141,3.08,142,3.235,143,2.088,147,3.235,152,2.379,153,2.487,154,2.064,155,3.389,156,2.737,157,1.871,158,2.281,159,1.7,160,2.737,164,3.235,165,3.389,166,1.594,167,3.054,169,1.871,170,1.871,171,2.223,176,0.922,182,1.559,191,1.559,195,1.497,196,1.627,197,1.497,198,2.487,213,1.7,221,1.781,230,1.046,245,2.088,247,2.885,248,1.287,249,1.287,250,1.287,251,1.287,252,1.242,253,1.287,254,1.287,255,1.287,256,1.287,257,1.287,258,0.922,259,1.348,260,1.348,261,0.922,262,0.922,263,0.922,264,0.865,265,0.922,266,0.922,267,0.865,268,0.922,269,0.922,270,0.865,271,0.922,272,0.922,273,1.348,274,0.838,275,1.594,276,0.838,277,0.922,278,1.348,279,0.865,280,0.922,281,0.922,282,0.865,283,1.594,284,0.922,285,0.865,286,0.922,287,0.865,288,0.922,289,0.865,290,0.922,291,0.922,292,0.838,293,0.922,294,0.865,295,0.922,296,0.865,297,0.922,298,0.865,299,0.922,300,0.865,301,1.45,302,1.348,303,0.865,304,0.922,305,0.838,306,0.922,307,0.865,308,0.893,309,0.838,310,1.348,311,0.865,312,0.838,313,0.922,314,0.865,315,0.922,316,1.646,317,1.762,318,1.544,319,0.922,320,0.865,321,0.865,322,1.772,323,0.893,324,0.922,325,0.007,326,0.007,400,1.781,436,1.2,441,2.088,442,2.088,445,1.265,459,2.449,463,1.952,464,1.497,484,2.696,497,3.08,512,4.229,518,2.379,520,2.385,524,2.088,552,3.41,557,2.088,673,3.08,695,1.385,778,1.972,793,1.335,835,1.781,836,2.105,1069,2.94,1074,3.08,1122,3.08,1124,3.606,1125,3.56,1143,1.781,1544,4.415,1681,2.385,1763,4.124,1764,4.124,1765,4.124,1766,4.124,1767,4.124,1768,4.124,1780,2.385,1781,2.223,1783,2.385,1785,2.385,1791,2.588,1795,2.588,1797,3.61,1798,1.972,1799,2.223,1800,4.124,1801,2.385,1802,3.489,1805,2.385,1806,2.861,1807,3.786,1808,2.861,1809,2.588,1810,4.184,1812,2.861,1813,2.861,1814,3.786,1815,2.861,1818,2.861,1820,2.861,2172,5.442,2173,5.442,2184,4.184,2188,5.791,2189,5.791,2190,3.274,2191,3.274,2192,3.274,2193,3.274,2194,3.274]],["title/injectables/ShopCartRepositoryService.html",[327,0.373,801,2.613]],["body/injectables/ShopCartRepositoryService.html",[3,0.088,4,0.077,9,0.077,34,0.081,35,0.389,36,1.254,42,0.649,46,0.724,49,0.796,51,0.924,52,0.013,53,0.698,54,0.118,55,0.446,57,0.821,60,0.975,61,1.264,64,0.556,65,0.575,74,0.398,80,0.325,86,0.746,102,0.088,103,0.34,166,1.789,197,1.562,215,1.697,312,1.264,325,0.007,326,0.007,327,0.449,329,0.875,331,1.446,344,2.06,346,0.83,356,0.903,357,0.875,359,1.235,425,1.697,431,2.822,436,1.252,445,2.028,449,2.701,459,1.942,610,2.701,612,2.09,680,2.013,686,1.952,695,2.454,745,2.489,746,2.489,797,2.058,798,2.489,799,3.828,800,2.489,801,3.15,803,5.216,809,4.911,811,2.32,812,2.32,813,2.822,845,4.586,851,3.157,852,5.555,853,3.213,854,5.33,859,4.315,869,3.598,873,3.156,903,1.774,1010,3.15,1026,3.598,1109,3.938,1116,2.489,1311,4.015,1626,4.682,1632,4.577,1683,4.315,1723,2.985,2135,3.598,2145,2.489,2195,6.791,2196,5.799,2197,6.354,2198,4.315,2199,5.552,2200,4.315,2201,4.315,2202,3.416,2203,5.278,2204,4.315,2205,3.416,2206,3.416,2207,3.416,2208,4.315,2209,3.416,2210,3.416,2211,4.315,2212,3.416,2213,4.315,2214,3.416,2215,4.315,2216,4.938,2217,2.985,2218,2.701,2219,3.416,2220,7.025,2221,3.416,2222,3.416,2223,3.416,2224,3.416,2225,4.938,2226,3.416,2227,3.416,2228,3.416,2229,3.416,2230,4.938,2231,3.416,2232,3.416,2233,3.416,2234,3.416,2235,4.938,2236,3.416,2237,5.799,2238,5.799,2239,3.416,2240,4.938,2241,5.799,2242,5.799,2243,4.938,2244,4.938,2245,3.416,2246,3.416,2247,4.938,2248,3.416,2249,3.416,2250,3.416,2251,3.416,2252,3.416,2253,3.416,2254,3.416,2255,3.416,2256,3.416]],["title/injectables/ShopCartService.html",[327,0.373,2203,2.985]],["body/injectables/ShopCartService.html",[3,0.118,4,0.103,9,0.103,34,0.075,35,0.477,36,1.259,42,0.795,46,0.671,49,0.836,51,1.032,52,0.013,53,0.78,54,0.128,55,0.498,60,1.032,64,0.744,65,0.77,74,0.419,80,0.435,86,1,102,0.118,103,0.455,121,2.558,122,3.048,325,0.009,326,0.009,327,0.55,329,1.171,344,2.145,346,0.872,356,1.209,357,1.171,358,1.33,359,1.234,366,2.977,368,2.012,379,2.012,380,2.179,769,3.334,797,2.756,798,3.334,799,4.339,800,3.334,803,3.856,851,2.273,853,3.096,859,4.105,869,3.334,873,4.186,1010,3.856,1026,4.405,1364,4.043,1401,3.998,1626,4.339,1656,3.334,1683,4.891,2135,4.405,2145,3.334,2168,3.998,2198,5.282,2199,6.294,2200,5.282,2201,5.282,2203,4.405,2208,5.282,2211,5.282,2213,5.282,2215,5.282,2217,3.998,2218,6.434,2257,3.998,2258,6.045,2259,4.575,2260,6.045,2261,4.575,2262,4.575,2263,4.575,2264,4.575,2265,4.575,2266,4.575,2267,6.045,2268,4.575,2269,4.575,2270,4.575,2271,4.575,2272,4.575,2273,4.575]],["title/injectables/SizesRepositoryService.html",[327,0.373,2274,3.239]],["body/injectables/SizesRepositoryService.html",[3,0.133,4,0.117,9,0.117,34,0.085,42,0.862,46,0.76,49,0.825,51,1.024,52,0.013,53,0.774,54,0.127,55,0.495,60,1.024,74,0.397,80,0.493,86,1.133,102,0.133,103,0.515,325,0.009,326,0.009,327,0.596,329,1.327,331,2.194,344,2.141,346,0.892,348,2.09,356,1.37,357,1.327,358,1.507,359,1.225,516,2.821,519,2.693,521,2.821,523,2.693,898,3.123,901,3.123,903,2.693,1473,5.797,1475,5.727,1476,5.727,1477,6.599,1478,5.727,1479,5.727,1481,5.727,1482,4.867,1484,6.159,1485,5.727,1488,5.727,1490,5.727,1493,4.53,2274,5.182,2275,7.059,2276,5.184,2277,5.184,2278,5.184,2279,5.184,2280,5.184,2281,5.184,2282,5.184]],["title/components/ThemeToggleComponent.html",[0,0.39,25,1.083]],["body/components/ThemeToggleComponent.html",[0,0.496,1,0.754,2,1.142,3,0.073,4,0.064,5,0.803,6,0.885,7,0.803,8,0.803,9,0.064,11,0.803,14,2.264,15,2.246,16,1.142,17,1.618,25,1.538,26,0.754,30,1.297,32,1.297,34,0.047,35,0.341,36,1.547,37,2.898,38,2.592,39,2.133,41,2.133,42,0.568,46,0.765,49,0.803,51,0.375,52,0.013,53,0.519,54,0.071,55,0.181,57,1.254,60,0.686,61,1.684,64,1.196,65,1.237,66,1.976,68,2.603,72,2.058,74,0.422,76,1.01,79,1.976,80,0.271,81,0.829,82,1.163,83,1.297,84,0.885,85,1.207,88,1.254,89,1.207,90,1.207,95,5.299,100,1.64,101,1.304,102,0.073,103,0.284,128,1.976,140,1.601,154,1.639,166,1.853,170,2.981,176,0.803,179,2.147,230,0.944,247,2.603,248,1.122,249,1.122,250,1.122,251,1.122,252,1.082,253,1.122,254,1.122,255,1.122,256,1.122,257,1.122,258,0.803,259,1.217,260,1.217,261,0.803,262,0.803,263,0.803,264,0.754,265,0.803,266,0.803,267,0.754,268,0.803,269,0.803,270,0.754,271,0.803,272,0.803,273,1.217,274,0.73,275,1.469,276,0.73,277,0.803,278,1.217,279,0.754,280,0.803,281,0.803,282,0.754,283,1.469,284,0.803,285,0.754,286,0.803,287,0.754,288,0.803,289,0.754,290,0.803,291,0.803,292,0.73,293,0.803,294,0.754,295,0.803,296,0.754,297,0.803,298,0.754,299,0.803,300,0.754,301,0.664,302,1.217,303,0.754,304,0.803,305,0.73,306,0.803,307,0.754,308,0.778,309,0.73,310,1.217,311,0.754,312,0.73,313,0.803,314,0.754,315,0.803,316,0.754,317,0.685,318,2.037,319,0.803,320,0.754,321,0.754,322,0.73,323,0.778,324,0.803,325,0.006,326,0.006,346,0.739,359,0.448,404,2.385,412,1.122,417,4.597,429,2.756,434,1.304,435,1.163,436,1.045,445,1.806,459,1.699,460,2.255,463,2.373,470,2.646,471,1.976,472,1.9,505,4.558,506,3.776,510,2.492,612,2.207,693,1.304,695,1.829,748,3.542,792,3.143,793,1.163,834,1.552,835,3.166,836,2.558,917,2.078,1034,5.085,1109,3.542,2283,6.819,2284,2.492,2285,6.253,2286,5.216,2287,2.852,2288,4.321,2289,5.216,2290,5.216,2291,4.321,2292,5.819,2293,4.321,2294,4.321,2295,2.852,2296,2.852,2297,2.852,2298,2.852,2299,2.852,2300,2.852,2301,4.321,2302,2.852,2303,4.321,2304,4.321,2305,2.852,2306,4.321,2307,2.852,2308,4.321,2309,2.852,2310,2.852,2311,2.852,2312,2.852,2313,2.852,2314,2.852,2315,2.492,2316,2.852,2317,2.852,2318,4.321,2319,5.216,2320,2.852,2321,7.803,2322,4.321,2323,4.321,2324,2.852,2325,2.852,2326,2.852,2327,5.216,2328,3.776,2329,3.776,2330,5.216,2331,2.492,2332,2.492,2333,4.321,2334,2.852,2335,2.852,2336,2.852,2337,2.852,2338,2.492]],["title/interfaces/User.html",[230,0.895,780,0.667]],["body/interfaces/User.html",[3,0.167,4,0.147,9,0.147,34,0.106,35,0.593,52,0.012,53,0.811,54,0.106,57,1.907,102,0.167,230,1.645,325,0.011,326,0.011,780,1.06,782,2.158,2339,5.694]],["title/injectables/UserAchievementsRepositoryService.html",[327,0.373,412,1.611]],["body/injectables/UserAchievementsRepositoryService.html",[3,0.116,4,0.102,9,0.102,34,0.074,36,0.84,41,2.809,42,0.788,46,0.879,49,0.812,51,1.008,52,0.013,53,0.762,54,0.125,55,0.487,57,1.842,60,1.028,74,0.392,80,0.43,86,0.987,89,1.911,90,1.911,102,0.116,103,0.449,325,0.009,326,0.009,327,0.545,329,1.156,331,1.911,339,3.946,341,2.346,344,2.142,346,0.926,354,3.067,356,1.193,357,1.156,359,1.205,406,2.881,412,2.357,417,5.374,435,3.239,470,3.244,474,2.244,1150,4.053,1687,3.067,2102,3.571,2142,3.946,2204,3.946,2340,6.28,2341,5.237,2342,6.262,2343,5.237,2344,5.237,2345,5.237,2346,4.516,2347,5.237,2348,4.516,2349,5.237,2350,5.237,2351,4.516,2352,6.516,2353,4.516,2354,5.237,2355,4.516,2356,3.946,2357,4.516,2358,4.516,2359,4.516,2360,4.516,2361,4.516,2362,5.878,2363,4.516]],["title/injectables/UserAchievementsService.html",[41,1.501,327,0.373]],["body/injectables/UserAchievementsService.html",[3,0.133,4,0.052,9,0.052,34,0.037,35,0.288,36,1.39,37,2.389,38,2.257,39,2.312,41,1.337,42,0.48,46,0.535,49,0.766,51,0.887,52,0.013,53,0.671,54,0.115,55,0.428,57,1.574,60,1.017,61,0.587,64,0.594,65,0.871,70,2.06,74,0.332,80,0.218,82,2.111,83,0.689,84,0.711,86,0.501,102,0.059,103,0.228,120,2.004,121,1.544,122,2.191,166,1.777,215,1.813,325,0.005,326,0.005,327,0.332,329,0.587,341,1.191,344,2.074,346,0.894,348,1.749,354,1.558,356,0.606,357,0.587,359,1.274,366,1.997,368,1.009,379,1.009,380,1.093,406,2.327,417,5.072,418,2.774,431,2.596,445,0.964,459,2.775,460,1.814,463,2.573,470,3.223,474,1.14,475,5.257,494,1.558,548,3.772,695,1.544,697,2.004,698,2.004,748,1.558,834,2.816,836,2.774,849,1.814,858,1.814,862,1.814,864,1.814,872,1.814,877,1.814,1150,2.737,1151,2.004,1162,2.004,1167,2.004,1171,2.004,1172,2.004,1262,2.004,1294,2.004,1299,2.004,1301,2.004,1305,2.004,1348,2.004,1353,2.004,1357,2.004,1358,2.004,1362,2.004,1687,1.558,1710,2.004,1786,2.004,1788,2.004,1792,1.814,1825,2.885,1928,2.004,1929,2.004,2036,2.004,2037,2.004,2038,2.004,2039,2.004,2040,2.004,2045,2.004,2102,4.989,2179,2.004,2182,2.004,2328,2.004,2329,2.004,2331,2.004,2332,2.004,2338,2.004,2341,3.188,2342,4.523,2343,3.188,2344,3.188,2345,3.188,2347,3.188,2349,3.188,2350,3.188,2352,4.523,2354,3.188,2356,2.004,2362,6.371,2364,6.529,2365,2.004,2366,4.542,2367,4.542,2368,3.648,2369,4.523,2370,3.648,2371,3.648,2372,5.176,2373,3.648,2374,3.648,2375,2.294,2376,2.294,2377,2.294,2378,2.294,2379,2.294,2380,3.648,2381,2.294,2382,3.648,2383,2.294,2384,2.294,2385,3.648,2386,2.294,2387,2.294,2388,2.294,2389,3.648,2390,2.294,2391,2.294,2392,6.309,2393,2.294,2394,2.294,2395,2.294,2396,2.294,2397,6.016,2398,2.294,2399,4.542,2400,2.294,2401,2.294,2402,2.294,2403,2.294,2404,4.542,2405,2.294,2406,2.004,2407,3.648,2408,4.542,2409,6.016,2410,5.257,2411,6.016,2412,4.542,2413,5.65,2414,3.648,2415,2.294,2416,3.648,2417,2.294,2418,2.294,2419,3.648,2420,3.648,2421,2.294,2422,2.294,2423,2.294,2424,2.294,2425,2.294,2426,2.294,2427,2.294,2428,2.294,2429,2.294,2430,2.294,2431,2.294]],["title/components/UserPageComponent.html",[0,0.39,320,1.083]],["body/components/UserPageComponent.html",[0,0.464,1,0.459,2,0.768,3,0.045,4,0.039,5,0.489,6,0.538,7,0.489,8,0.489,9,0.039,11,0.489,14,2.127,15,2.097,16,0.768,17,1.162,18,1.474,23,2.545,24,2.142,25,1.158,26,0.459,27,2.545,28,1.946,29,2.545,30,0.872,32,0.872,34,0.028,35,0.229,36,1.384,37,2.566,42,0.382,43,2.117,46,0.426,48,1.854,49,0.778,51,0.694,52,0.013,53,0.584,54,0.103,55,0.335,56,2.117,57,1.268,59,1.107,60,0.772,61,1.813,64,1.1,65,1.138,70,2.269,74,0.415,76,0.615,79,1.329,80,0.165,81,0.505,83,1.682,84,0.901,85,0.735,87,0.683,94,1.517,95,1.179,96,1.373,97,0.992,98,1.179,100,1.103,101,0.794,102,0.045,103,0.173,105,1.373,108,2.539,137,2.545,139,1.373,140,1.697,141,2.654,142,2.533,146,1.517,147,2.505,148,2.963,149,2.795,150,1.179,152,2.621,153,3.171,154,2.096,155,3.605,156,1.661,157,3.015,158,2.323,159,1.946,160,3.015,163,2.976,164,1.946,165,1.581,166,1.234,167,1.107,169,0.992,170,0.992,176,0.489,179,3.418,180,1.853,182,0.827,186,2.142,187,1.946,190,1.107,191,1.384,192,1.373,195,2.231,196,3.034,197,0.794,198,0.902,199,4.28,213,2.533,214,2.963,219,2.545,223,3.465,226,1.517,228,2.64,230,1.503,242,2.545,243,4.182,244,4.082,246,3.844,247,1.046,248,1.474,249,0.683,250,0.683,251,0.683,252,0.659,253,0.683,254,0.683,255,0.683,256,0.683,257,0.683,258,0.489,259,0.818,260,0.818,261,0.489,262,0.489,263,0.489,264,0.459,265,0.489,266,0.489,267,0.459,268,0.489,269,0.489,270,0.459,271,0.489,272,0.489,273,0.818,274,0.444,275,1.055,276,0.444,277,1.055,278,0.818,279,0.459,280,0.489,281,0.489,282,1.158,283,1.719,284,0.489,285,1.158,286,0.489,287,1.158,288,0.489,289,0.459,290,0.489,291,0.489,292,0.444,293,0.489,294,0.459,295,0.489,296,0.459,297,0.489,298,0.459,299,0.489,300,0.459,301,0.404,302,0.818,303,0.459,304,0.489,305,0.444,306,0.489,307,0.459,308,0.474,309,0.444,310,0.818,311,0.459,312,0.444,313,0.489,314,0.459,315,0.489,316,0.459,317,0.417,318,0.474,319,0.489,320,1.158,321,0.459,322,0.444,323,0.474,324,0.489,325,0.004,326,0.004,346,0.66,348,2.164,359,0.589,400,2.384,402,2.963,408,2.087,418,1.278,422,2.298,425,1.444,427,2.298,431,3.992,436,1.373,441,1.107,442,1.107,445,0.459,446,1.517,447,1.373,459,1.474,464,2.792,490,0.992,531,1.265,533,3.193,550,1.373,564,2.117,566,1.517,568,1.517,612,2.233,614,2.74,639,1.785,647,1.179,665,2.963,667,1.265,669,1.265,678,2.545,680,1.528,683,2.178,686,0.992,689,1.862,690,1.046,718,2.64,724,2.963,743,1.373,778,1.751,791,2.258,792,2.258,793,0.708,885,2.976,895,2.039,902,1.265,917,2.731,1021,2.795,1038,3.465,1066,1.373,1068,3.465,1069,1.946,1070,2.39,1071,2.39,1072,2.545,1073,2.545,1074,2.039,1075,2.545,1122,3.048,1124,0.945,1125,3.015,1126,4.171,1134,2.117,1143,0.945,1145,1.265,1146,1.046,1147,1.517,1194,1.373,1196,2.963,1306,1.373,1311,2.505,1346,1.265,1544,1.853,1620,3.275,1621,1.517,1632,2.545,1789,3.844,1790,1.265,1798,1.046,1799,1.179,1906,1.517,1908,2.539,1924,2.298,2096,3.275,2101,2.539,2110,1.517,2111,1.517,2406,3.275,2432,5.971,2433,6.599,2434,1.517,2435,1.736,2436,2.906,2437,3.747,2438,3.747,2439,3.747,2440,3.747,2441,3.747,2442,3.747,2443,3.747,2444,3.747,2445,2.906,2446,2.906,2447,2.906,2448,2.906,2449,3.747,2450,1.736,2451,1.736,2452,2.906,2453,1.736,2454,2.906,2455,1.736,2456,2.906,2457,1.736,2458,1.736,2459,1.736,2460,1.736,2461,2.906,2462,1.736,2463,1.736,2464,1.736,2465,2.906,2466,5.275,2467,1.736,2468,1.736,2469,1.736,2470,1.736,2471,1.736,2472,2.906,2473,1.736,2474,1.736,2475,1.736,2476,2.906,2477,1.736,2478,1.736,2479,1.736,2480,3.747,2481,1.736,2482,1.736,2483,1.736,2484,1.736,2485,2.906,2486,1.736,2487,2.906,2488,1.736,2489,1.736,2490,1.736,2491,3.747,2492,1.736,2493,1.736,2494,2.906,2495,3.747,2496,1.736,2497,2.906,2498,5.275,2499,3.747,2500,1.736,2501,1.736,2502,2.906,2503,1.736,2504,1.736,2505,1.736,2506,2.906,2507,1.736,2508,1.736,2509,3.747,2510,3.747,2511,1.736,2512,1.736,2513,1.736,2514,1.736,2515,3.747,2516,1.736,2517,2.906,2518,2.906,2519,2.906,2520,1.736,2521,1.736]],["title/components/UserPageProjComponent.html",[0,0.39,321,1.083]],["body/components/UserPageProjComponent.html",[0,0.542,1,0.873,2,1.274,3,0.085,4,0.074,5,0.931,7,0.931,8,0.931,9,0.074,11,0.931,14,2.296,15,2.281,16,1.274,17,1.765,18,2.238,23,3.865,24,1.889,25,0.873,26,0.873,27,2.244,28,2.956,29,2.244,32,1.447,34,0.054,35,0.38,36,1.478,37,2.697,39,2.545,41,2.628,42,0.634,43,3.513,46,0.707,48,2.647,49,0.81,51,0.634,52,0.013,53,0.622,54,0.102,55,0.306,56,2.408,57,1.159,59,2.108,60,0.875,61,1.778,64,1.13,65,1.169,68,1.991,72,1.574,74,0.411,76,1.17,80,0.314,81,0.961,83,1.709,84,1.025,85,1.398,87,1.299,88,1.453,89,1.398,90,1.398,102,0.085,103,0.329,140,2.186,154,1.762,166,1.603,176,0.931,230,1.606,258,0.931,259,1.357,260,1.357,261,0.931,262,0.931,263,0.931,264,1.653,265,1.357,266,0.931,267,0.873,268,0.931,269,0.931,270,0.873,271,0.931,272,0.931,273,1.357,274,0.846,275,1.603,276,0.846,277,0.931,278,1.357,279,0.873,280,0.931,281,0.931,282,0.873,283,1.603,284,0.931,285,0.873,286,0.931,287,0.873,288,0.931,289,0.873,290,0.931,291,0.931,292,0.846,293,0.931,294,0.873,295,0.931,296,0.873,297,0.931,298,0.873,299,0.931,300,0.873,301,0.769,302,1.357,303,0.873,304,0.931,305,0.846,306,0.931,307,0.873,308,0.901,309,0.846,310,1.357,311,0.873,312,0.846,313,0.931,314,0.873,315,0.931,316,0.873,317,0.794,318,0.901,319,0.931,320,0.873,321,1.653,322,1.457,323,0.901,324,0.931,325,0.007,326,0.007,346,0.357,388,2.613,400,3.404,402,4.5,403,4.973,404,2.603,408,2.98,410,2.888,412,1.299,418,2.119,422,3.812,425,3.109,427,3.812,429,3.075,434,1.511,435,1.347,436,1.211,441,2.108,442,2.108,445,1.274,470,1.398,471,1.511,472,1.453,503,3.812,533,4.147,693,1.511,694,2.613,791,3.429,792,3.429,793,1.347,1038,4.5,1069,2.956,1070,3.63,1071,3.63,1072,3.865,1073,3.865,1074,3.097,1075,3.865,1146,1.991,1196,4.5,1805,2.408,1807,3.812,1809,2.613,1814,3.812,1825,4.5,1826,4.973,1837,2.888,2432,6.231,2522,6.886,2523,4.821,2524,3.304,2525,3.304,2526,3.304,2527,3.304,2528,3.304,2529,3.304,2530,3.304,2531,3.304,2532,3.304,2533,3.304,2534,3.304,2535,3.304]],["title/injectables/UserProjsRepositoryService.html",[327,0.373,2536,3.239]],["body/injectables/UserProjsRepositoryService.html",[3,0.132,4,0.116,9,0.116,34,0.084,42,0.856,46,0.752,49,0.823,51,1.021,52,0.013,53,0.772,54,0.127,55,0.493,60,1.021,74,0.396,80,0.488,86,1.121,102,0.132,103,0.51,230,1.121,325,0.009,326,0.009,327,0.592,329,1.313,331,2.171,344,2.137,346,0.891,348,2.079,356,1.355,357,1.313,358,1.491,359,1.221,516,2.791,518,4.005,519,2.664,521,2.791,523,2.664,524,3.271,898,3.09,901,3.09,903,2.664,1494,5.781,1496,5.688,1497,5.688,1498,6.573,1499,5.688,1500,5.688,1502,5.688,1504,6.139,1505,5.688,1508,5.688,1510,5.688,2340,6.373,2536,5.147,2537,7.043,2538,5.129,2539,5.129,2540,5.129,2541,5.129,2542,5.129,2543,5.129,2544,5.129]],["title/injectables/UsersRepositoryService.html",[327,0.373,2545,3.239]],["body/injectables/UsersRepositoryService.html",[3,0.133,4,0.117,9,0.117,34,0.085,42,0.862,46,0.76,49,0.825,51,1.024,52,0.013,53,0.774,54,0.127,55,0.495,60,1.024,74,0.397,80,0.493,86,1.133,102,0.133,103,0.515,325,0.009,326,0.009,327,0.596,329,1.327,331,2.194,344,2.141,346,0.892,348,2.09,356,1.37,357,1.327,358,1.507,359,1.225,516,2.821,519,2.693,521,2.821,523,2.693,573,4.196,575,3.307,898,3.123,901,3.123,903,2.693,1513,5.797,1515,5.727,1516,5.727,1517,6.599,1518,5.727,1519,5.727,1521,5.727,1523,6.159,1524,5.727,1527,5.727,1529,5.727,2545,5.182,2546,7.059,2547,5.184,2548,5.184,2549,5.184,2550,5.184,2551,5.184,2552,5.184,2553,5.184]],["title/coverage.html",[2554,4.904]],["body/coverage.html",[0,0.792,1,0.811,9,0.069,10,2.681,25,0.811,26,0.811,39,1.124,41,1.124,52,0.013,54,0.105,64,0.499,70,1.05,92,2.235,95,2.083,97,1.753,140,1.545,166,2.459,180,1.957,230,0.997,264,0.811,267,0.811,270,0.811,274,0.785,276,0.785,279,0.811,282,0.811,285,0.811,287,0.811,289,0.811,292,0.785,294,0.811,296,0.811,298,0.811,300,0.811,303,0.811,305,0.785,307,0.811,308,1.245,309,0.785,311,0.811,312,1.168,314,0.811,316,0.811,320,0.811,321,0.811,322,0.785,325,0.007,326,0.007,327,0.76,328,2.235,330,2.681,331,3.318,338,2.083,341,1.593,365,2.681,387,2.681,388,2.426,389,2.681,400,1.669,412,1.206,435,1.251,439,2.083,478,2.681,479,2.426,480,2.681,498,2.681,508,2.235,512,2.083,513,3.609,518,1.524,528,2.681,529,2.681,570,2.083,573,1.593,579,2.681,594,2.681,595,2.681,611,2.681,629,2.426,631,2.426,644,2.235,670,2.681,671,2.426,672,3.609,680,1.251,683,1.524,687,2.235,689,1.524,703,2.681,704,2.681,718,1.848,780,1.329,781,2.235,783,4.099,784,3.609,785,3.609,787,1.848,797,1.848,799,1.848,801,1.957,803,1.957,885,2.083,886,2.681,893,2.235,895,1.669,910,2.681,933,2.681,935,2.681,1065,3.971,1066,2.426,1067,2.681,1194,2.426,1195,2.681,1214,1.957,1225,1.957,1306,2.426,1307,2.681,1311,1.753,1364,3.719,1365,2.681,1373,2.235,1374,2.681,1409,2.235,1410,2.426,1411,2.681,1419,2.083,1431,2.235,1432,2.681,1440,1.848,1452,2.235,1453,2.681,1461,1.753,1473,2.235,1474,2.681,1482,1.848,1494,2.235,1495,2.681,1513,2.235,1514,2.681,1532,2.681,1533,2.681,1534,2.681,1604,2.681,1622,2.681,1626,1.848,1627,2.681,1628,2.681,1631,2.681,1634,2.681,1635,2.681,1638,2.681,1644,2.681,1650,2.681,1656,2.235,1657,2.681,1660,2.681,1664,2.681,1668,2.681,1671,2.681,1680,2.681,1683,2.083,1684,2.681,1685,2.681,1686,2.681,1687,2.083,1688,2.681,1690,2.681,1691,2.681,1692,2.681,1715,2.681,1756,2.681,1762,2.681,1803,2.681,1804,2.681,1805,3.971,1821,2.681,1847,2.426,1848,3.609,1849,2.681,1857,2.426,1903,2.681,1935,2.681,2010,2.681,2011,2.681,2118,2.426,2119,2.681,2120,2.681,2128,2.681,2133,2.235,2159,2.681,2169,2.681,2188,2.681,2189,2.681,2195,2.681,2203,2.235,2218,2.426,2257,2.681,2274,2.426,2275,2.681,2283,2.681,2284,2.681,2339,2.681,2340,3.609,2364,2.681,2365,2.681,2432,3.609,2433,2.681,2434,2.681,2522,2.681,2536,2.426,2537,2.681,2545,2.426,2546,2.681,2554,2.681,2555,3.068,2556,3.068,2557,3.068,2558,6.035,2559,2.681,2560,8.011,2561,2.681,2562,8.167,2563,6.035,2564,6.762,2565,4.564,2566,3.068,2567,3.068,2568,3.068,2569,4.564,2570,7.593,2571,6.451,2572,3.068,2573,3.068,2574,3.068,2575,7.352,2576,6.035,2577,3.068,2578,3.068,2579,6.762,2580,7.593,2581,4.564,2582,3.068,2583,3.068,2584,3.068,2585,3.068,2586,3.068,2587,5.538,2588,5.274,2589,6.035,2590,4.772,2591,5.101,2592,5.101,2593,2.681,2594,2.681,2595,4.772,2596,3.988,2597,3.988,2598,4.772,2599,3.068]],["title/dependencies.html",[2600,2.981,2601,4.311]],["body/dependencies.html",[52,0.013,80,0.555,81,1.694,83,2.54,84,1.807,85,2.466,86,1.273,87,2.291,325,0.01,326,0.01,438,4.784,439,3.957,490,3.33,741,5.571,742,5.133,744,5.092,793,2.376,1146,3.511,1781,3.957,2601,5.092,2602,5.827,2603,7.045,2604,8.282,2605,5.827,2606,5.827,2607,5.827,2608,5.827,2609,5.827,2610,5.827,2611,7.573,2612,7.045,2613,7.573,2614,5.827,2615,5.827,2616,5.827,2617,7.045,2618,5.827,2619,5.827,2620,5.827,2621,5.827,2622,5.827,2623,5.827,2624,5.827,2625,5.827,2626,5.827,2627,5.827,2628,5.827]],["title/index.html",[34,0.056,2629,3.411,2630,3.411]],["body/index.html",[0,0.7,2,1.442,4,0.123,52,0.01,64,1.101,70,1.868,107,6.721,124,6.909,130,4.767,140,1.397,207,4.767,211,4.767,323,1.488,325,0.01,326,0.01,508,3.975,622,3.975,742,3.975,1789,3.975,1950,6.428,1955,4.767,1965,4.767,1972,5.913,1975,5.913,1977,4.314,2315,7.041,2410,4.767,2631,7.356,2632,4.767,2633,4.767,2634,5.456,2635,7.356,2636,5.456,2637,7.907,2638,8.058,2639,5.456,2640,6.767,2641,5.456,2642,6.767,2643,4.767,2644,5.456,2645,5.456,2646,5.456,2647,5.456,2648,6.767,2649,6.767,2650,5.456,2651,5.456,2652,5.456,2653,7.356,2654,5.456,2655,5.456,2656,5.456,2657,5.456,2658,5.456,2659,5.456,2660,5.456,2661,5.456,2662,5.456,2663,5.456,2664,5.456,2665,5.456,2666,5.456,2667,5.456,2668,5.456,2669,6.767,2670,7.356,2671,5.456,2672,5.456,2673,5.456,2674,5.456,2675,5.456,2676,7.356,2677,5.456,2678,8.058,2679,5.456,2680,6.767,2681,5.456,2682,5.456,2683,5.456,2684,5.456,2685,5.456,2686,5.456,2687,5.456,2688,5.456,2689,5.456,2690,5.456,2691,5.456,2692,5.456,2693,5.456,2694,4.314,2695,5.456]],["title/modules.html",[2696,4.904]],["body/modules.html",[52,0.011,325,0.011,326,0.011,2696,5.914]],["title/overview.html",[2694,4.438]],["body/overview.html",[2,1.77,52,0.011,325,0.011,326,0.011,329,1.715,782,2.218,952,5.852,964,5.852,968,5.852,2694,5.296]],["title/properties.html",[35,0.389,2600,2.981]],["body/properties.html",[35,0.531,52,0.012,325,0.011,326,0.011,2633,5.883,2697,6.732]],["title/miscellaneous/typealiases.html",[2698,2.485,2699,4.933]],["body/miscellaneous/typealiases.html",[34,0.106,52,0.011,54,0.106,325,0.011,326,0.011,2587,5.126,2590,6.729,2591,5.126,2592,5.934,2595,5.126,2598,5.126,2698,4.724,2700,6.483,2701,5.665,2702,5.665,2703,5.665,2704,5.665,2705,8.146]],["title/miscellaneous/variables.html",[2698,2.485,2706,4.311]],["body/miscellaneous/variables.html",[0,0.646,16,0.919,17,1.078,18,1.367,24,1.988,34,0.057,39,1.274,41,1.274,48,1.472,51,0.658,52,0.013,53,0.582,54,0.133,64,1.339,65,1.373,166,1.409,175,4.351,179,1.728,180,4.086,187,2.598,215,3.876,218,2.361,228,4.09,230,0.76,274,0.89,276,0.89,292,0.89,309,0.89,325,0.007,326,0.007,338,2.361,412,1.367,425,2.486,445,1.548,463,1.418,508,3.645,612,2.117,614,3.525,616,3.039,618,4.371,622,2.534,629,4.632,631,4.632,644,3.645,673,1.892,677,4.632,680,2.389,683,3.512,911,3.039,917,4.269,942,3.039,995,3.039,1021,3.737,1128,2.534,1150,2.095,1239,3.846,1240,3.978,1330,4.632,1332,4.632,1335,4.632,1536,5.119,1537,5.119,1565,5.931,1608,3.039,1609,2.534,1610,3.039,1639,5.119,1661,4.632,1966,6.887,1968,4.371,1977,3.955,1981,3.039,1994,3.039,1995,3.039,2062,4.371,2082,4.371,2369,3.039,2559,3.039,2561,4.371,2587,2.75,2588,6.887,2590,6.232,2591,2.75,2592,5.367,2593,4.371,2594,4.371,2595,2.75,2596,5.598,2597,5.598,2598,2.75,2632,3.039,2643,3.039,2698,2.534,2701,6.176,2702,5.598,2703,5.119,2704,5.119,2706,3.039,2707,3.477,2708,3.477,2709,3.477,2710,3.477,2711,3.477,2712,3.477,2713,3.477,2714,3.477,2715,5.858,2716,5.002,2717,3.477,2718,5.858,2719,6.406,2720,3.477,2721,3.477,2722,3.477,2723,3.477,2724,5.858,2725,3.477,2726,3.477,2727,3.477,2728,3.477,2729,3.477,2730,3.477,2731,3.477,2732,3.477,2733,3.477,2734,3.477,2735,3.477,2736,3.477,2737,3.477,2738,3.477,2739,5.002,2740,6.406,2741,5.002,2742,3.477,2743,3.477,2744,3.477,2745,3.477,2746,3.477,2747,5.002,2748,5.002,2749,3.477,2750,6.406,2751,3.477,2752,3.477,2753,3.477,2754,3.477,2755,3.477,2756,3.477,2757,3.477]]],"invertedIndex":[["",{"_index":52,"title":{},"body":{"components/AboutComponent.html":{},"injectables/AchievementsRepositoryService.html":{},"injectables/AchievementsService.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"injectables/AuthProjRepositoryService.html":{},"injectables/AuthProjService.html":{},"injectables/AuthRepositoryService.html":{},"injectables/AuthService.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"interfaces/CartItem.html":{},"injectables/CategoriesRepositoryService.html":{},"injectables/ConfigService.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"injectables/DpCategoriesService.html":{},"injectables/DpImagesService.html":{},"injectables/DpOrderCompositionsService.html":{},"injectables/DpOrdersService.html":{},"injectables/DpProductAttributesService.html":{},"injectables/DpSizesService.html":{},"injectables/DpUserProjsService.html":{},"injectables/DpUsersService.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IAchievement.html":{},"interfaces/IAddToCartRequest.html":{},"interfaces/ICartItem.html":{},"interfaces/ICartViewModel.html":{},"interfaces/ICreateDpImageRequest.html":{},"interfaces/IDpCategory.html":{},"interfaces/IDpImage.html":{},"interfaces/IDpOrder.html":{},"interfaces/IDpOrderComposition.html":{},"interfaces/IDpOrderDetail.html":{},"interfaces/IDpProduct.html":{},"interfaces/IDpProductAttribute.html":{},"interfaces/IDpSize.html":{},"interfaces/IDpUser.html":{},"interfaces/IDpUserProj.html":{},"interfaces/IRemoveFromCartRequest.html":{},"interfaces/IUpdateCartRequest.html":{},"interfaces/IUpdateDpImageRequest.html":{},"interfaces/IUserHasAchievement.html":{},"components/IconTrashComponent.html":{},"injectables/ImagesRepositoryService.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"injectables/OrderCompositionsRepositoryService.html":{},"injectables/OrderRepositoryService.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"injectables/ProductAttributesRepositoryService.html":{},"injectables/ProductsRepositoryService.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"injectables/ShopCartRepositoryService.html":{},"injectables/ShopCartService.html":{},"injectables/SizesRepositoryService.html":{},"components/ThemeToggleComponent.html":{},"interfaces/User.html":{},"injectables/UserAchievementsRepositoryService.html":{},"injectables/UserAchievementsService.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{},"injectables/UserProjsRepositoryService.html":{},"injectables/UsersRepositoryService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":166,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"interfaces/CartItem.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"injectables/ShopCartRepositoryService.html":{},"components/ThemeToggleComponent.html":{},"injectables/UserAchievementsService.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0.0",{"_index":2697,"title":{},"body":{"properties.html":{}}}],["0.1",{"_index":1617,"title":{},"body":{"components/HeaderComponent.html":{}}}],["0.125rem",{"_index":217,"title":{},"body":{"components/AboutComponent.html":{}}}],["0.15",{"_index":659,"title":{},"body":{"components/ButtonComponent.html":{},"components/PageItemFromCatalogComponent.html":{}}}],["0.15.0",{"_index":2628,"title":{},"body":{"dependencies.html":{}}}],["0.25rem",{"_index":167,"title":{},"body":{"components/AboutComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/UserPageComponent.html":{}}}],["0.2s",{"_index":237,"title":{},"body":{"components/AboutComponent.html":{}}}],["0.3s",{"_index":2078,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{}}}],["0.5rem",{"_index":160,"title":{},"body":{"components/AboutComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/PageCartComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/UserPageComponent.html":{}}}],["0.5s",{"_index":2089,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{}}}],["0.75rem",{"_index":2096,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{},"components/UserPageComponent.html":{}}}],["0.8",{"_index":2057,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{}}}],["0.875rem",{"_index":2105,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{}}}],["0/1",{"_index":2562,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2576,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2581,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":2565,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2577,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":2569,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":2572,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":2568,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2563,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":2566,"title":{},"body":{"coverage.html":{}}}],["0/21",{"_index":2574,"title":{},"body":{"coverage.html":{}}}],["0/23",{"_index":2578,"title":{},"body":{"coverage.html":{}}}],["0/26",{"_index":2567,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2558,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2564,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2570,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2579,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2580,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2575,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2571,"title":{},"body":{"coverage.html":{}}}],["0000000000",{"_index":592,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["01",{"_index":157,"title":{},"body":{"components/AboutComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/PageCartComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/UserPageComponent.html":{}}}],["02",{"_index":245,"title":{},"body":{"components/AboutComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{}}}],["03",{"_index":226,"title":{},"body":{"components/AboutComponent.html":{},"components/UserPageComponent.html":{}}}],["0px",{"_index":660,"title":{},"body":{"components/ButtonComponent.html":{}}}],["1",{"_index":215,"title":{},"body":{"components/AboutComponent.html":{},"components/ButtonComponent.html":{},"interfaces/CartItem.html":{},"injectables/ConfigService.html":{},"components/HeaderComponent.html":{},"components/PageCartComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"injectables/ShopCartRepositoryService.html":{},"injectables/UserAchievementsService.html":{},"miscellaneous/variables.html":{}}}],["1.125rem",{"_index":203,"title":{},"body":{"components/AboutComponent.html":{},"components/PageItemFromCatalogComponent.html":{}}}],["1.25rem",{"_index":2101,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{},"components/UserPageComponent.html":{}}}],["1.2rem",{"_index":1933,"title":{},"body":{"components/PageCatalogItemComponent.html":{}}}],["1.5",{"_index":192,"title":{},"body":{"components/AboutComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/UserPageComponent.html":{}}}],["1.5rem",{"_index":214,"title":{},"body":{"components/AboutComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/UserPageComponent.html":{}}}],["1.75rem",{"_index":2516,"title":{},"body":{"components/UserPageComponent.html":{}}}],["1/8",{"_index":2582,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":2573,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":472,"title":{},"body":{"components/AchievmentsPageForUserComponent.html":{},"components/CardItemComponent.html":{},"interfaces/CartItem.html":{},"injectables/ConfigService.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/LoginComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageProjComponent.html":{}}}],["100",{"_index":778,"title":{},"body":{"components/CarouselImgComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/UserPageComponent.html":{}}}],["1000",{"_index":2062,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{},"miscellaneous/variables.html":{}}}],["100vh",{"_index":1799,"title":{},"body":{"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/UserPageComponent.html":{}}}],["1024",{"_index":1247,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["1024}mb",{"_index":1281,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["10px",{"_index":664,"title":{},"body":{"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/PageComponent.html":{}}}],["11",{"_index":933,"title":{},"body":{"injectables/ConfigService.html":{},"coverage.html":{}}}],["11px",{"_index":666,"title":{},"body":{"components/ButtonComponent.html":{},"components/PageComponent.html":{}}}],["12",{"_index":935,"title":{},"body":{"injectables/ConfigService.html":{},"coverage.html":{}}}],["1200px",{"_index":1897,"title":{},"body":{"components/PageCartComponent.html":{}}}],["12px",{"_index":665,"title":{},"body":{"components/ButtonComponent.html":{},"components/PageComponent.html":{},"components/UserPageComponent.html":{}}}],["13",{"_index":937,"title":{},"body":{"injectables/ConfigService.html":{}}}],["13px",{"_index":2007,"title":{},"body":{"components/PageComponent.html":{}}}],["14",{"_index":939,"title":{},"body":{"injectables/ConfigService.html":{}}}],["14px",{"_index":668,"title":{},"body":{"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/PageComponent.html":{}}}],["15",{"_index":941,"title":{},"body":{"injectables/ConfigService.html":{},"components/DialogCategoryComponent.html":{},"components/DialogProductComponent.html":{}}}],["15px",{"_index":1618,"title":{},"body":{"components/HeaderComponent.html":{}}}],["16",{"_index":943,"title":{},"body":{"injectables/ConfigService.html":{}}}],["16px",{"_index":148,"title":{},"body":{"components/AboutComponent.html":{},"components/ButtonComponent.html":{},"components/UserPageComponent.html":{}}}],["17",{"_index":945,"title":{},"body":{"injectables/ConfigService.html":{}}}],["18",{"_index":113,"title":{},"body":{"components/AboutComponent.html":{},"injectables/ConfigService.html":{}}}],["18px",{"_index":205,"title":{},"body":{"components/AboutComponent.html":{}}}],["19",{"_index":948,"title":{},"body":{"injectables/ConfigService.html":{}}}],["19.1.2",{"_index":2623,"title":{},"body":{"dependencies.html":{}}}],["19.2.0",{"_index":2604,"title":{},"body":{"dependencies.html":{}}}],["19.2.10",{"_index":2603,"title":{},"body":{"dependencies.html":{}}}],["19.2.8",{"_index":2634,"title":{},"body":{"index.html":{}}}],["1ea7fd",{"_index":2009,"title":{},"body":{"components/PageComponent.html":{}}}],["1em",{"_index":2000,"title":{},"body":{"components/PageComponent.html":{}}}],["1px",{"_index":224,"title":{},"body":{"components/AboutComponent.html":{},"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/PageItemFromCatalogComponent.html":{}}}],["1rem",{"_index":147,"title":{},"body":{"components/AboutComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/PageCartComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/UserPageComponent.html":{}}}],["2",{"_index":917,"title":{},"body":{"injectables/ConfigService.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"miscellaneous/variables.html":{}}}],["2.3.0",{"_index":2626,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":950,"title":{},"body":{"injectables/ConfigService.html":{}}}],["200",{"_index":132,"title":{},"body":{"components/AboutComponent.html":{},"injectables/ConfigService.html":{},"components/DialogCategoryComponent.html":{}}}],["2000",{"_index":2185,"title":{},"body":{"components/RegisterComponent.html":{}}}],["200px",{"_index":2111,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{},"components/UserPageComponent.html":{}}}],["201",{"_index":1043,"title":{},"body":{"injectables/ConfigService.html":{}}}],["204",{"_index":1045,"title":{},"body":{"injectables/ConfigService.html":{}}}],["20px",{"_index":667,"title":{},"body":{"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/PageComponent.html":{},"components/UserPageComponent.html":{}}}],["21",{"_index":952,"title":{},"body":{"injectables/ConfigService.html":{},"overview.html":{}}}],["212529",{"_index":1842,"title":{},"body":{"components/NavbarComponent.html":{}}}],["22",{"_index":954,"title":{},"body":{"injectables/ConfigService.html":{}}}],["23",{"_index":956,"title":{},"body":{"injectables/ConfigService.html":{}}}],["24",{"_index":958,"title":{},"body":{"injectables/ConfigService.html":{}}}],["24px",{"_index":669,"title":{},"body":{"components/ButtonComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/UserPageComponent.html":{}}}],["25",{"_index":960,"title":{},"body":{"injectables/ConfigService.html":{}}}],["255",{"_index":2109,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{}}}],["26",{"_index":962,"title":{},"body":{"injectables/ConfigService.html":{}}}],["27",{"_index":964,"title":{},"body":{"injectables/ConfigService.html":{},"overview.html":{}}}],["28",{"_index":966,"title":{},"body":{"injectables/ConfigService.html":{}}}],["280px",{"_index":2086,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{}}}],["29",{"_index":968,"title":{},"body":{"injectables/ConfigService.html":{},"overview.html":{}}}],["2px",{"_index":234,"title":{},"body":{"components/AboutComponent.html":{}}}],["2rem",{"_index":222,"title":{},"body":{"components/AboutComponent.html":{},"components/PageCartComponent.html":{}}}],["2xx",{"_index":1041,"title":{},"body":{"injectables/ConfigService.html":{}}}],["3",{"_index":919,"title":{},"body":{"injectables/ConfigService.html":{},"components/PageItemFromCatalogComponent.html":{}}}],["30",{"_index":970,"title":{},"body":{"injectables/ConfigService.html":{}}}],["300px",{"_index":1932,"title":{},"body":{"components/PageCatalogItemComponent.html":{}}}],["301",{"_index":1048,"title":{},"body":{"injectables/ConfigService.html":{}}}],["302",{"_index":1050,"title":{},"body":{"injectables/ConfigService.html":{}}}],["30px",{"_index":2003,"title":{},"body":{"components/PageComponent.html":{}}}],["31",{"_index":972,"title":{},"body":{"injectables/ConfigService.html":{}}}],["32",{"_index":974,"title":{},"body":{"injectables/ConfigService.html":{}}}],["32px",{"_index":1999,"title":{},"body":{"components/PageComponent.html":{}}}],["32rem",{"_index":1801,"title":{},"body":{"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{}}}],["33",{"_index":976,"title":{},"body":{"injectables/ConfigService.html":{}}}],["333",{"_index":663,"title":{},"body":{"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/PageComponent.html":{}}}],["34",{"_index":978,"title":{},"body":{"injectables/ConfigService.html":{}}}],["35",{"_index":980,"title":{},"body":{"injectables/ConfigService.html":{}}}],["357a14",{"_index":2005,"title":{},"body":{"components/PageComponent.html":{}}}],["36",{"_index":982,"title":{},"body":{"injectables/ConfigService.html":{}}}],["37",{"_index":984,"title":{},"body":{"injectables/ConfigService.html":{}}}],["38",{"_index":986,"title":{},"body":{"injectables/ConfigService.html":{}}}],["39",{"_index":988,"title":{},"body":{"injectables/ConfigService.html":{}}}],["3em",{"_index":648,"title":{},"body":{"components/ButtonComponent.html":{}}}],["3px",{"_index":2008,"title":{},"body":{"components/PageComponent.html":{}}}],["3xx",{"_index":1046,"title":{},"body":{"injectables/ConfigService.html":{}}}],["4",{"_index":921,"title":{},"body":{"injectables/ConfigService.html":{},"components/PageItemFromCatalogComponent.html":{}}}],["4.0.2",{"_index":2616,"title":{},"body":{"dependencies.html":{}}}],["4.34.0",{"_index":2613,"title":{},"body":{"dependencies.html":{}}}],["4.35.0",{"_index":2611,"title":{},"body":{"dependencies.html":{}}}],["4.36.0",{"_index":2612,"title":{},"body":{"dependencies.html":{}}}],["4.37.0",{"_index":2619,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":990,"title":{},"body":{"injectables/ConfigService.html":{}}}],["400",{"_index":1053,"title":{},"body":{"injectables/ConfigService.html":{}}}],["400px",{"_index":2087,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{}}}],["401",{"_index":133,"title":{},"body":{"components/AboutComponent.html":{},"injectables/ConfigService.html":{}}}],["403",{"_index":1056,"title":{},"body":{"injectables/ConfigService.html":{}}}],["404",{"_index":134,"title":{},"body":{"components/AboutComponent.html":{},"injectables/ConfigService.html":{}}}],["409",{"_index":1059,"title":{},"body":{"injectables/ConfigService.html":{}}}],["40px",{"_index":2006,"title":{},"body":{"components/PageComponent.html":{}}}],["41",{"_index":992,"title":{},"body":{"injectables/ConfigService.html":{}}}],["42",{"_index":994,"title":{},"body":{"injectables/ConfigService.html":{}}}],["43",{"_index":996,"title":{},"body":{"injectables/ConfigService.html":{}}}],["44",{"_index":998,"title":{},"body":{"injectables/ConfigService.html":{}}}],["45",{"_index":1000,"title":{},"body":{"injectables/ConfigService.html":{}}}],["46",{"_index":1002,"title":{},"body":{"injectables/ConfigService.html":{}}}],["47",{"_index":1004,"title":{},"body":{"injectables/ConfigService.html":{}}}],["47.9375rem",{"_index":171,"title":{},"body":{"components/AboutComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{}}}],["48",{"_index":1006,"title":{},"body":{"injectables/ConfigService.html":{}}}],["480px",{"_index":2112,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{}}}],["48px",{"_index":1996,"title":{},"body":{"components/PageComponent.html":{}}}],["4px",{"_index":168,"title":{},"body":{"components/AboutComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{}}}],["4xx",{"_index":1051,"title":{},"body":{"injectables/ConfigService.html":{}}}],["5",{"_index":923,"title":{},"body":{"injectables/ConfigService.html":{},"components/DialogImageComponent.html":{}}}],["5/6",{"_index":2586,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":112,"title":{},"body":{"components/AboutComponent.html":{},"components/CardItemComponent.html":{},"components/PageItemFromCatalogComponent.html":{}}}],["50/50",{"_index":2534,"title":{},"body":{"components/UserPageProjComponent.html":{}}}],["500",{"_index":135,"title":{},"body":{"components/AboutComponent.html":{},"injectables/ConfigService.html":{}}}],["5000",{"_index":1177,"title":{},"body":{"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{}}}],["503",{"_index":1063,"title":{},"body":{"injectables/ConfigService.html":{}}}],["53",{"_index":2583,"title":{},"body":{"coverage.html":{}}}],["555ab9",{"_index":656,"title":{},"body":{"components/ButtonComponent.html":{}}}],["5mb",{"_index":1259,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["5xx",{"_index":1060,"title":{},"body":{"injectables/ConfigService.html":{}}}],["6",{"_index":925,"title":{},"body":{"injectables/ConfigService.html":{}}}],["6.7.2",{"_index":2610,"title":{},"body":{"dependencies.html":{}}}],["600",{"_index":2098,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{}}}],["600px",{"_index":1997,"title":{},"body":{"components/PageComponent.html":{}}}],["60px",{"_index":1900,"title":{},"body":{"components/PageCartComponent.html":{}}}],["6px",{"_index":1621,"title":{},"body":{"components/HeaderComponent.html":{},"components/UserPageComponent.html":{}}}],["6rem",{"_index":2106,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{}}}],["7",{"_index":927,"title":{},"body":{"injectables/ConfigService.html":{}}}],["7.8.0",{"_index":2624,"title":{},"body":{"dependencies.html":{}}}],["700",{"_index":201,"title":{},"body":{"components/AboutComponent.html":{},"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/PageComponent.html":{}}}],["767px",{"_index":173,"title":{},"body":{"components/AboutComponent.html":{}}}],["768px",{"_index":2110,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{},"components/UserPageComponent.html":{}}}],["8",{"_index":118,"title":{},"body":{"components/AboutComponent.html":{},"injectables/ConfigService.html":{}}}],["8/15",{"_index":2584,"title":{},"body":{"coverage.html":{}}}],["800px",{"_index":146,"title":{},"body":{"components/AboutComponent.html":{},"components/UserPageComponent.html":{}}}],["83",{"_index":2585,"title":{},"body":{"coverage.html":{}}}],["888",{"_index":1934,"title":{},"body":{"components/PageCatalogItemComponent.html":{}}}],["8px",{"_index":163,"title":{},"body":{"components/AboutComponent.html":{},"components/PageCartComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/UserPageComponent.html":{}}}],["9",{"_index":930,"title":{},"body":{"injectables/ConfigService.html":{},"components/FilterByInputComponent.html":{}}}],["90",{"_index":143,"title":{},"body":{"components/AboutComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{}}}],["900",{"_index":2716,"title":{},"body":{"miscellaneous/variables.html":{}}}],["90vw",{"_index":145,"title":{},"body":{"components/AboutComponent.html":{}}}],["9]/g",{"_index":1184,"title":{},"body":{"components/DialogCategoryComponent.html":{}}}],["a.achievementid",{"_index":467,"title":{},"body":{"components/AchievmentsPageForUserComponent.html":{}}}],["a.quantity",{"_index":819,"title":{},"body":{"interfaces/CartItem.html":{},"components/PageCartComponent.html":{}}}],["about'},{'name",{"_index":263,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{}}}],["about.component.css",{"_index":99,"title":{},"body":{"components/AboutComponent.html":{}}}],["about.component.css,../../../styles/root.css",{"_index":31,"title":{},"body":{"components/AboutComponent.html":{}}}],["about.component.html",{"_index":33,"title":{},"body":{"components/AboutComponent.html":{}}}],["aboutcomponent",{"_index":1,"title":{"components/AboutComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{},"coverage.html":{}}}],["absolute",{"_index":2092,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{}}}],["accessors",{"_index":619,"title":{},"body":{"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/PageItemFromCatalogComponent.html":{}}}],["accordion",{"_index":193,"title":{},"body":{"components/AboutComponent.html":{}}}],["ach.textachievement",{"_index":477,"title":{},"body":{"components/AchievmentsPageForUserComponent.html":{}}}],["ach.title",{"_index":476,"title":{},"body":{"components/AchievmentsPageForUserComponent.html":{}}}],["achievement",{"_index":343,"title":{},"body":{"injectables/AchievementsRepositoryService.html":{},"injectables/AchievementsService.html":{},"interfaces/IUserHasAchievement.html":{}}}],["achievement.ts",{"_index":1625,"title":{},"body":{"interfaces/IAchievement.html":{}}}],["achievementid",{"_index":417,"title":{},"body":{"components/AchievmentsPageForUserComponent.html":{},"interfaces/IAchievement.html":{},"interfaces/IUserHasAchievement.html":{},"components/ThemeToggleComponent.html":{},"injectables/UserAchievementsRepositoryService.html":{},"injectables/UserAchievementsService.html":{}}}],["achievementid).pipe",{"_index":2416,"title":{},"body":{"injectables/UserAchievementsService.html":{}}}],["achievementids",{"_index":911,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["achievements",{"_index":435,"title":{},"body":{"components/AchievmentsPageForUserComponent.html":{},"components/CardItemComponent.html":{},"interfaces/CartItem.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"interfaces/IDpUserProj.html":{},"components/LoginComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/ThemeToggleComponent.html":{},"injectables/UserAchievementsRepositoryService.html":{},"components/UserPageProjComponent.html":{},"coverage.html":{}}}],["achievements.filter(a",{"_index":457,"title":{},"body":{"components/AchievmentsPageForUserComponent.html":{}}}],["achievements.map(a",{"_index":466,"title":{},"body":{"components/AchievmentsPageForUserComponent.html":{}}}],["achievements.service",{"_index":90,"title":{},"body":{"components/AboutComponent.html":{},"components/CardItemComponent.html":{},"interfaces/CartItem.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/ThemeToggleComponent.html":{},"injectables/UserAchievementsRepositoryService.html":{},"components/UserPageProjComponent.html":{}}}],["achievements.service.ts",{"_index":2365,"title":{},"body":{"injectables/UserAchievementsService.html":{},"coverage.html":{}}}],["achievements.service.ts:108",{"_index":2375,"title":{},"body":{"injectables/UserAchievementsService.html":{}}}],["achievements.service.ts:13",{"_index":2390,"title":{},"body":{"injectables/UserAchievementsService.html":{}}}],["achievements.service.ts:131",{"_index":2384,"title":{},"body":{"injectables/UserAchievementsService.html":{}}}],["achievements.service.ts:14",{"_index":2373,"title":{},"body":{"injectables/UserAchievementsService.html":{}}}],["achievements.service.ts:22",{"_index":2386,"title":{},"body":{"injectables/UserAchievementsService.html":{}}}],["achievements.service.ts:238",{"_index":2381,"title":{},"body":{"injectables/UserAchievementsService.html":{}}}],["achievements.service.ts:26",{"_index":2378,"title":{},"body":{"injectables/UserAchievementsService.html":{}}}],["achievements.service.ts:30",{"_index":2387,"title":{},"body":{"injectables/UserAchievementsService.html":{}}}],["achievements.service.ts:38",{"_index":2377,"title":{},"body":{"injectables/UserAchievementsService.html":{}}}],["achievements.service.ts:52",{"_index":2383,"title":{},"body":{"injectables/UserAchievementsService.html":{}}}],["achievements.service.ts:66",{"_index":2376,"title":{},"body":{"injectables/UserAchievementsService.html":{}}}],["achievements.service.ts:80",{"_index":2388,"title":{},"body":{"injectables/UserAchievementsService.html":{}}}],["achievements.service.ts:94",{"_index":2379,"title":{},"body":{"injectables/UserAchievementsService.html":{}}}],["achievementsrepo",{"_index":413,"title":{},"body":{"components/AchievmentsPageForUserComponent.html":{}}}],["achievementsrepositoryservice",{"_index":328,"title":{"injectables/AchievementsRepositoryService.html":{}},"body":{"injectables/AchievementsRepositoryService.html":{},"components/AchievmentsPageForUserComponent.html":{},"coverage.html":{}}}],["achievementsservice",{"_index":338,"title":{"injectables/AchievementsService.html":{}},"body":{"injectables/AchievementsRepositoryService.html":{},"injectables/AchievementsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["achievementtitle",{"_index":376,"title":{},"body":{"injectables/AchievementsService.html":{}}}],["achievments",{"_index":265,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{}}}],["achievmentspageforusercomponent",{"_index":264,"title":{"components/AchievmentsPageForUserComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{},"coverage.html":{}}}],["acme",{"_index":1605,"title":{},"body":{"components/HeaderComponent.html":{}}}],["action",{"_index":628,"title":{},"body":{"components/ButtonComponent.html":{}}}],["actions",{"_index":218,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/CartItem.html":{},"components/PageCartComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"miscellaneous/variables.html":{}}}],["activatedroute",{"_index":2017,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{}}}],["actual_component",{"_index":324,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{}}}],["add",{"_index":1629,"title":{},"body":{"interfaces/ICartItem.html":{},"components/PageItemFromCatalogComponent.html":{}}}],["addcategory",{"_index":1022,"title":{},"body":{"injectables/ConfigService.html":{}}}],["addcategoryfailed",{"_index":977,"title":{},"body":{"injectables/ConfigService.html":{}}}],["addcategorysuccess",{"_index":929,"title":{},"body":{"injectables/ConfigService.html":{}}}],["addimage",{"_index":1019,"title":{},"body":{"injectables/ConfigService.html":{}}}],["addimagefailed",{"_index":975,"title":{},"body":{"injectables/ConfigService.html":{}}}],["addimagesuccess",{"_index":928,"title":{},"body":{"injectables/ConfigService.html":{}}}],["additional",{"_index":2687,"title":{},"body":{"index.html":{}}}],["addon",{"_index":1983,"title":{},"body":{"components/PageComponent.html":{}}}],["addtocart",{"_index":1010,"title":{},"body":{"injectables/ConfigService.html":{},"components/PageItemFromCatalogComponent.html":{},"injectables/ProductsRepositoryService.html":{},"injectables/ProductsService.html":{},"injectables/ShopCartRepositoryService.html":{},"injectables/ShopCartService.html":{}}}],["addtocart(request",{"_index":2135,"title":{},"body":{"injectables/ProductsRepositoryService.html":{},"injectables/ProductsService.html":{},"injectables/ShopCartRepositoryService.html":{},"injectables/ShopCartService.html":{}}}],["addtocartfailed",{"_index":965,"title":{},"body":{"injectables/ConfigService.html":{}}}],["addtocartsuccess",{"_index":918,"title":{},"body":{"injectables/ConfigService.html":{}}}],["adjust",{"_index":1980,"title":{},"body":{"components/PageComponent.html":{}}}],["alert",{"_index":268,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{}}}],["alertdeletecomponent",{"_index":267,"title":{"components/AlertDeleteComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{},"coverage.html":{}}}],["alerts",{"_index":1078,"title":{},"body":{"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/IconTrashComponent.html":{}}}],["alertservice",{"_index":38,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/CartItem.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"injectables/UserAchievementsService.html":{}}}],["alias",{"_index":2589,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":2700,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":182,"title":{},"body":{"components/AboutComponent.html":{},"components/CarouselImgComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/UserPageComponent.html":{}}}],["allachievements",{"_index":399,"title":{},"body":{"components/AchievmentsPageForUserComponent.html":{}}}],["allowedchars",{"_index":1592,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["allowedchars.test(inputchar",{"_index":1593,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["allowedtypes",{"_index":1199,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["always_fail_key",{"_index":2367,"title":{},"body":{"injectables/UserAchievementsService.html":{}}}],["alwaysfailmode",{"_index":1825,"title":{},"body":{"components/NavbarComponent.html":{},"injectables/UserAchievementsService.html":{},"components/UserPageProjComponent.html":{}}}],["angular",{"_index":107,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["angular/cdk",{"_index":2602,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/scrolling",{"_index":440,"title":{},"body":{"components/AchievmentsPageForUserComponent.html":{}}}],["angular/common",{"_index":81,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"interfaces/CartItem.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":379,"title":{},"body":{"injectables/AchievementsService.html":{},"injectables/AuthProjService.html":{},"injectables/AuthService.html":{},"injectables/DpCategoriesService.html":{},"injectables/DpImagesService.html":{},"injectables/DpOrderCompositionsService.html":{},"injectables/DpOrdersService.html":{},"injectables/DpProductAttributesService.html":{},"injectables/DpSizesService.html":{},"injectables/DpUserProjsService.html":{},"injectables/DpUsersService.html":{},"injectables/ProductsService.html":{},"injectables/ShopCartService.html":{},"injectables/UserAchievementsService.html":{}}}],["angular/compiler",{"_index":2605,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":80,"title":{},"body":{"components/AboutComponent.html":{},"injectables/AchievementsRepositoryService.html":{},"injectables/AchievementsService.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"injectables/AuthProjRepositoryService.html":{},"injectables/AuthProjService.html":{},"injectables/AuthRepositoryService.html":{},"injectables/AuthService.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"interfaces/CartItem.html":{},"injectables/CategoriesRepositoryService.html":{},"injectables/ConfigService.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"injectables/DpCategoriesService.html":{},"injectables/DpImagesService.html":{},"injectables/DpOrderCompositionsService.html":{},"injectables/DpOrdersService.html":{},"injectables/DpProductAttributesService.html":{},"injectables/DpSizesService.html":{},"injectables/DpUserProjsService.html":{},"injectables/DpUsersService.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"injectables/ImagesRepositoryService.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"injectables/OrderCompositionsRepositoryService.html":{},"injectables/OrderRepositoryService.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"injectables/ProductAttributesRepositoryService.html":{},"injectables/ProductsRepositoryService.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"injectables/ShopCartRepositoryService.html":{},"injectables/ShopCartService.html":{},"injectables/SizesRepositoryService.html":{},"components/ThemeToggleComponent.html":{},"injectables/UserAchievementsRepositoryService.html":{},"injectables/UserAchievementsService.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{},"injectables/UserProjsRepositoryService.html":{},"injectables/UsersRepositoryService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":793,"title":{},"body":{"interfaces/CartItem.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":2606,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":741,"title":{},"body":{"components/CarouselImgComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"dependencies.html":{}}}],["angular/router",{"_index":87,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardItemComponent.html":{},"interfaces/CartItem.html":{},"components/IconTrashComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{},"dependencies.html":{}}}],["animation",{"_index":1931,"title":{},"body":{"components/PageCatalogItemComponent.html":{},"components/PageItemFromCatalogComponent.html":{}}}],["api",{"_index":120,"title":{},"body":{"components/AboutComponent.html":{},"injectables/UserAchievementsService.html":{}}}],["api/auth/logout",{"_index":1039,"title":{},"body":{"injectables/ConfigService.html":{}}}],["api/cart/add",{"_index":1011,"title":{},"body":{"injectables/ConfigService.html":{}}}],["api/cart/remove",{"_index":1027,"title":{},"body":{"injectables/ConfigService.html":{}}}],["api/cart/update",{"_index":1029,"title":{},"body":{"injectables/ConfigService.html":{}}}],["api/categories/add",{"_index":1023,"title":{},"body":{"injectables/ConfigService.html":{}}}],["api/checkout",{"_index":1012,"title":{},"body":{"injectables/ConfigService.html":{}}}],["api/login",{"_index":1008,"title":{},"body":{"injectables/ConfigService.html":{}}}],["api/products",{"_index":1014,"title":{},"body":{"injectables/ConfigService.html":{}}}],["api/products/add",{"_index":1020,"title":{},"body":{"injectables/ConfigService.html":{}}}],["api/products/all",{"_index":1031,"title":{},"body":{"injectables/ConfigService.html":{}}}],["api/products/create",{"_index":1016,"title":{},"body":{"injectables/ConfigService.html":{}}}],["api/products/info",{"_index":1033,"title":{},"body":{"injectables/ConfigService.html":{}}}],["api/profile/update",{"_index":1018,"title":{},"body":{"injectables/ConfigService.html":{}}}],["api/register",{"_index":1009,"title":{},"body":{"injectables/ConfigService.html":{}}}],["api/settings/reset",{"_index":1037,"title":{},"body":{"injectables/ConfigService.html":{}}}],["api/settings/switch",{"_index":1025,"title":{},"body":{"injectables/ConfigService.html":{}}}],["api/settings/toggle",{"_index":1035,"title":{},"body":{"injectables/ConfigService.html":{}}}],["api/userachievements",{"_index":2389,"title":{},"body":{"injectables/UserAchievementsService.html":{}}}],["apiendpoints",{"_index":912,"title":{},"body":{"injectables/ConfigService.html":{}}}],["apis/common",{"_index":2317,"title":{},"body":{"components/ThemeToggleComponent.html":{}}}],["app",{"_index":15,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"interfaces/CartItem.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{}}}],["app.component.css",{"_index":504,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":502,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":270,"title":{"components/AppComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":2561,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["appear",{"_index":2730,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appearance",{"_index":836,"title":{},"body":{"interfaces/CartItem.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/IconTrashComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"injectables/UserAchievementsService.html":{}}}],["application",{"_index":2642,"title":{},"body":{"index.html":{}}}],["applicationconfig",{"_index":2708,"title":{},"body":{"miscellaneous/variables.html":{}}}],["arg",{"_index":2729,"title":{},"body":{"miscellaneous/variables.html":{}}}],["args",{"_index":1966,"title":{},"body":{"components/PageComponent.html":{},"miscellaneous/variables.html":{}}}],["argtypes",{"_index":2726,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aria",{"_index":136,"title":{},"body":{"components/AboutComponent.html":{}}}],["arial",{"_index":654,"title":{},"body":{"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/PageComponent.html":{}}}],["artifacts",{"_index":2662,"title":{},"body":{"index.html":{}}}],["asp.net",{"_index":109,"title":{},"body":{"components/AboutComponent.html":{}}}],["aspect",{"_index":2084,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{}}}],["assemble",{"_index":1969,"title":{},"body":{"components/PageComponent.html":{}}}],["async",{"_index":2743,"title":{},"body":{"miscellaneous/variables.html":{}}}],["asyncpipe",{"_index":28,"title":{},"body":{"components/AboutComponent.html":{},"components/CarouselImgComponent.html":{},"interfaces/CartItem.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{}}}],["atomic",{"_index":1944,"title":{},"body":{"components/PageComponent.html":{}}}],["attributes",{"_index":2120,"title":{},"body":{"injectables/ProductAttributesRepositoryService.html":{},"coverage.html":{}}}],["attributes.service",{"_index":2122,"title":{},"body":{"injectables/ProductAttributesRepositoryService.html":{}}}],["attributes.service.ts",{"_index":1453,"title":{},"body":{"injectables/DpProductAttributesService.html":{},"coverage.html":{}}}],["attributes.service.ts:11",{"_index":1459,"title":{},"body":{"injectables/DpProductAttributesService.html":{}}}],["attributes.service.ts:15",{"_index":1466,"title":{},"body":{"injectables/DpProductAttributesService.html":{}}}],["attributes.service.ts:19",{"_index":1468,"title":{},"body":{"injectables/DpProductAttributesService.html":{}}}],["attributes.service.ts:23",{"_index":1462,"title":{},"body":{"injectables/DpProductAttributesService.html":{}}}],["attributes.service.ts:27",{"_index":1470,"title":{},"body":{"injectables/DpProductAttributesService.html":{}}}],["attributes.service.ts:31",{"_index":1465,"title":{},"body":{"injectables/DpProductAttributesService.html":{}}}],["authprojrepository",{"_index":1810,"title":{},"body":{"components/LoginProjComponent.html":{},"components/RegisterProjComponent.html":{}}}],["authprojrepositoryservice",{"_index":512,"title":{"injectables/AuthProjRepositoryService.html":{}},"body":{"injectables/AuthProjRepositoryService.html":{},"components/LoginProjComponent.html":{},"components/RegisterProjComponent.html":{},"coverage.html":{}}}],["authprojservice",{"_index":400,"title":{"injectables/AuthProjService.html":{}},"body":{"components/AchievmentsPageForUserComponent.html":{},"injectables/AuthProjRepositoryService.html":{},"injectables/AuthProjService.html":{},"components/LoginProjComponent.html":{},"components/RegisterProjComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{},"coverage.html":{}}}],["authrepository",{"_index":1774,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["authrepositoryservice",{"_index":570,"title":{"injectables/AuthRepositoryService.html":{}},"body":{"injectables/AuthRepositoryService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["authservice",{"_index":97,"title":{"injectables/AuthService.html":{}},"body":{"components/AboutComponent.html":{},"injectables/AuthRepositoryService.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/UserPageComponent.html":{},"coverage.html":{}}}],["auto",{"_index":150,"title":{},"body":{"components/AboutComponent.html":{},"components/PageCartComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/UserPageComponent.html":{}}}],["autoclose",{"_index":1176,"title":{},"body":{"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/IconTrashComponent.html":{}}}],["autodocs",{"_index":2719,"title":{},"body":{"miscellaneous/variables.html":{}}}],["automatically",{"_index":2643,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["available",{"_index":2655,"title":{},"body":{"index.html":{}}}],["avatar",{"_index":229,"title":{},"body":{"components/AboutComponent.html":{},"components/NavbarComponent.html":{}}}],["avatar:hover",{"_index":239,"title":{},"body":{"components/AboutComponent.html":{}}}],["await",{"_index":2750,"title":{},"body":{"miscellaneous/variables.html":{}}}],["b",{"_index":817,"title":{},"body":{"interfaces/CartItem.html":{},"components/PageCartComponent.html":{}}}],["b.price",{"_index":820,"title":{},"body":{"interfaces/CartItem.html":{},"components/PageCartComponent.html":{}}}],["b.quantity",{"_index":821,"title":{},"body":{"interfaces/CartItem.html":{},"components/PageCartComponent.html":{}}}],["back",{"_index":272,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{}}}],["backbuttoncomponent",{"_index":26,"title":{"components/BackButtonComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{},"coverage.html":{}}}],["background",{"_index":153,"title":{},"body":{"components/AboutComponent.html":{},"components/ButtonComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/PageCartComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/UserPageComponent.html":{}}}],["backgroundcolor",{"_index":616,"title":{},"body":{"components/ButtonComponent.html":{},"miscellaneous/variables.html":{}}}],["badrequest",{"_index":1052,"title":{},"body":{"injectables/ConfigService.html":{}}}],["base",{"_index":156,"title":{},"body":{"components/AboutComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/PageCartComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/UserPageComponent.html":{}}}],["basedomain",{"_index":606,"title":{},"body":{"components/BackButtonComponent.html":{}}}],["baseurl",{"_index":366,"title":{},"body":{"injectables/AchievementsService.html":{},"injectables/AuthProjService.html":{},"injectables/AuthService.html":{},"injectables/DpCategoriesService.html":{},"injectables/DpImagesService.html":{},"injectables/DpOrderCompositionsService.html":{},"injectables/DpOrdersService.html":{},"injectables/DpProductAttributesService.html":{},"injectables/DpSizesService.html":{},"injectables/DpUserProjsService.html":{},"injectables/DpUsersService.html":{},"injectables/ProductsService.html":{},"injectables/ShopCartService.html":{},"injectables/UserAchievementsService.html":{}}}],["behaviorsubject",{"_index":547,"title":{},"body":{"injectables/AuthProjService.html":{},"injectables/AuthService.html":{}}}],["behaviorsubject(false",{"_index":545,"title":{},"body":{"injectables/AuthProjService.html":{},"injectables/AuthService.html":{}}}],["between",{"_index":1616,"title":{},"body":{"components/HeaderComponent.html":{},"components/PageItemFromCatalogComponent.html":{}}}],["blob",{"_index":769,"title":{},"body":{"components/CarouselImgComponent.html":{},"injectables/DpImagesService.html":{},"injectables/ImagesRepositoryService.html":{},"injectables/ShopCartService.html":{}}}],["block",{"_index":647,"title":{},"body":{"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/UserPageComponent.html":{}}}],["blur",{"_index":808,"title":{},"body":{"interfaces/CartItem.html":{},"components/PageCartComponent.html":{}}}],["body.dark",{"_index":1802,"title":{},"body":{"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{}}}],["bold",{"_index":1902,"title":{},"body":{"components/PageCartComponent.html":{}}}],["boolean",{"_index":418,"title":{},"body":{"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"injectables/AuthProjService.html":{},"injectables/AuthService.html":{},"components/ButtonComponent.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"interfaces/IUserHasAchievement.html":{},"components/NavbarComponent.html":{},"injectables/UserAchievementsService.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{}}}],["border",{"_index":158,"title":{},"body":{"components/AboutComponent.html":{},"components/ButtonComponent.html":{},"components/CarouselImgComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/PageCartComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/UserPageComponent.html":{}}}],["bottom",{"_index":185,"title":{},"body":{"components/AboutComponent.html":{},"components/HeaderComponent.html":{},"components/PageCartComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{}}}],["box",{"_index":164,"title":{},"body":{"components/AboutComponent.html":{},"components/ButtonComponent.html":{},"components/CarouselImgComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/PageCartComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/UserPageComponent.html":{}}}],["break",{"_index":2499,"title":{},"body":{"components/UserPageComponent.html":{}}}],["browser",{"_index":742,"title":{},"body":{"components/CarouselImgComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"dependencies.html":{},"index.html":{}}}],["browseranimationsmodule",{"_index":2722,"title":{},"body":{"miscellaneous/variables.html":{}}}],["btn",{"_index":2107,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{}}}],["build",{"_index":1950,"title":{},"body":{"components/PageComponent.html":{},"index.html":{}}}],["building",{"_index":1939,"title":{},"body":{"components/PageComponent.html":{}}}],["buildthis",{"_index":2659,"title":{},"body":{"index.html":{}}}],["button",{"_index":228,"title":{},"body":{"components/AboutComponent.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/UserPageComponent.html":{},"miscellaneous/variables.html":{}}}],["button'},{'name",{"_index":273,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{}}}],["button.component",{"_index":93,"title":{},"body":{"components/AboutComponent.html":{},"components/HeaderComponent.html":{},"components/NavbarComponent.html":{}}}],["button.component.css",{"_index":603,"title":{},"body":{"components/BackButtonComponent.html":{}}}],["button.component.css,../../../styles/root.css",{"_index":596,"title":{},"body":{"components/BackButtonComponent.html":{}}}],["button.component.html",{"_index":597,"title":{},"body":{"components/BackButtonComponent.html":{}}}],["button.component.ts",{"_index":595,"title":{},"body":{"components/BackButtonComponent.html":{},"coverage.html":{}}}],["button.component.ts:12",{"_index":601,"title":{},"body":{"components/BackButtonComponent.html":{}}}],["button.component.ts:15",{"_index":602,"title":{},"body":{"components/BackButtonComponent.html":{}}}],["button.css",{"_index":613,"title":{},"body":{"components/ButtonComponent.html":{}}}],["button/back",{"_index":92,"title":{},"body":{"components/AboutComponent.html":{},"components/BackButtonComponent.html":{},"components/NavbarComponent.html":{},"coverage.html":{}}}],["button[tuibutton",{"_index":2517,"title":{},"body":{"components/UserPageComponent.html":{}}}],["button[tuibutton]:hover",{"_index":2520,"title":{},"body":{"components/UserPageComponent.html":{}}}],["buttoncomponent",{"_index":274,"title":{"components/ButtonComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["buttonnotworking",{"_index":985,"title":{},"body":{"injectables/ConfigService.html":{}}}],["buttons",{"_index":2519,"title":{},"body":{"components/UserPageComponent.html":{}}}],["buttons.css",{"_index":249,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/BackButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"components/FilterByInputComponent.html":{},"components/IconTrashComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{}}}],["cached",{"_index":1746,"title":{},"body":{"injectables/ImagesRepositoryService.html":{}}}],["calc(1.5rem",{"_index":2103,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{}}}],["call",{"_index":627,"title":{},"body":{"components/ButtonComponent.html":{}}}],["canvas",{"_index":1981,"title":{},"body":{"components/PageComponent.html":{},"miscellaneous/variables.html":{}}}],["canvas.getbyrole('button",{"_index":2747,"title":{},"body":{"miscellaneous/variables.html":{}}}],["canvaselement",{"_index":2744,"title":{},"body":{"miscellaneous/variables.html":{}}}],["card",{"_index":277,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{}}}],["card:hover",{"_index":2080,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{}}}],["carditemcomponent",{"_index":276,"title":{"components/CardItemComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cards.css",{"_index":250,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/BackButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"components/FilterByInputComponent.html":{},"components/IconTrashComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{}}}],["carousel",{"_index":280,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{}}}],["carousel.css",{"_index":253,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/BackButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"components/FilterByInputComponent.html":{},"components/IconTrashComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{}}}],["carouselimgcomponent",{"_index":279,"title":{"components/CarouselImgComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{},"coverage.html":{}}}],["cart",{"_index":803,"title":{},"body":{"interfaces/CartItem.html":{},"components/PageCartComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"injectables/ShopCartRepositoryService.html":{},"injectables/ShopCartService.html":{},"coverage.html":{}}}],["cart'},{'name",{"_index":306,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{}}}],["cart.component.css",{"_index":805,"title":{},"body":{"interfaces/CartItem.html":{},"components/PageCartComponent.html":{}}}],["cart.component.css,../../../styles/root.css",{"_index":1865,"title":{},"body":{"components/PageCartComponent.html":{}}}],["cart.component.html",{"_index":804,"title":{},"body":{"interfaces/CartItem.html":{},"components/PageCartComponent.html":{}}}],["cart.component.ts",{"_index":785,"title":{},"body":{"interfaces/CartItem.html":{},"components/PageCartComponent.html":{},"coverage.html":{}}}],["cart.component.ts:100",{"_index":1874,"title":{},"body":{"components/PageCartComponent.html":{}}}],["cart.component.ts:107",{"_index":1884,"title":{},"body":{"components/PageCartComponent.html":{}}}],["cart.component.ts:142",{"_index":1873,"title":{},"body":{"components/PageCartComponent.html":{}}}],["cart.component.ts:186",{"_index":1886,"title":{},"body":{"components/PageCartComponent.html":{}}}],["cart.component.ts:250",{"_index":1883,"title":{},"body":{"components/PageCartComponent.html":{}}}],["cart.component.ts:260",{"_index":1881,"title":{},"body":{"components/PageCartComponent.html":{}}}],["cart.component.ts:42",{"_index":1890,"title":{},"body":{"components/PageCartComponent.html":{}}}],["cart.component.ts:43",{"_index":1887,"title":{},"body":{"components/PageCartComponent.html":{}}}],["cart.component.ts:44",{"_index":1888,"title":{},"body":{"components/PageCartComponent.html":{}}}],["cart.component.ts:45",{"_index":1889,"title":{},"body":{"components/PageCartComponent.html":{}}}],["cart.component.ts:46",{"_index":1893,"title":{},"body":{"components/PageCartComponent.html":{}}}],["cart.component.ts:47",{"_index":1892,"title":{},"body":{"components/PageCartComponent.html":{}}}],["cart.component.ts:48",{"_index":1872,"title":{},"body":{"components/PageCartComponent.html":{}}}],["cart.component.ts:53",{"_index":1891,"title":{},"body":{"components/PageCartComponent.html":{}}}],["cart.component.ts:59",{"_index":1880,"title":{},"body":{"components/PageCartComponent.html":{}}}],["cart.component.ts:63",{"_index":1879,"title":{},"body":{"components/PageCartComponent.html":{}}}],["cart.component.ts:83",{"_index":1885,"title":{},"body":{"components/PageCartComponent.html":{}}}],["cart.component.ts:87",{"_index":1876,"title":{},"body":{"components/PageCartComponent.html":{}}}],["cart.component.ts:91",{"_index":1877,"title":{},"body":{"components/PageCartComponent.html":{}}}],["cart.component.ts:95",{"_index":1878,"title":{},"body":{"components/PageCartComponent.html":{}}}],["cart.filter((item",{"_index":2253,"title":{},"body":{"injectables/ShopCartRepositoryService.html":{}}}],["cart.find((item",{"_index":2244,"title":{},"body":{"injectables/ShopCartRepositoryService.html":{}}}],["cart.findindex((item",{"_index":2236,"title":{},"body":{"injectables/ShopCartRepositoryService.html":{}}}],["cart.length",{"_index":2248,"title":{},"body":{"injectables/ShopCartRepositoryService.html":{}}}],["cart.map((item",{"_index":2251,"title":{},"body":{"injectables/ShopCartRepositoryService.html":{}}}],["cart.push(request",{"_index":2246,"title":{},"body":{"injectables/ShopCartRepositoryService.html":{}}}],["cart.service",{"_index":2219,"title":{},"body":{"injectables/ShopCartRepositoryService.html":{}}}],["cart.service.ts",{"_index":2257,"title":{},"body":{"injectables/ShopCartService.html":{},"coverage.html":{}}}],["cart.service.ts:14",{"_index":2258,"title":{},"body":{"injectables/ShopCartService.html":{}}}],["cart.service.ts:18",{"_index":2263,"title":{},"body":{"injectables/ShopCartService.html":{}}}],["cart.service.ts:22",{"_index":2266,"title":{},"body":{"injectables/ShopCartService.html":{}}}],["cart.service.ts:26",{"_index":2259,"title":{},"body":{"injectables/ShopCartService.html":{}}}],["cart.service.ts:30",{"_index":2264,"title":{},"body":{"injectables/ShopCartService.html":{}}}],["cart.service.ts:34",{"_index":2261,"title":{},"body":{"injectables/ShopCartService.html":{}}}],["cart.service.ts:38",{"_index":2265,"title":{},"body":{"injectables/ShopCartService.html":{}}}],["cart.service.ts:42",{"_index":2262,"title":{},"body":{"injectables/ShopCartService.html":{}}}],["cart/page",{"_index":784,"title":{},"body":{"interfaces/CartItem.html":{},"components/PageCartComponent.html":{},"coverage.html":{}}}],["cart[itemindex].quantity",{"_index":2239,"title":{},"body":{"injectables/ShopCartRepositoryService.html":{}}}],["cartdata",{"_index":2250,"title":{},"body":{"injectables/ShopCartRepositoryService.html":{}}}],["cartitem",{"_index":781,"title":{"interfaces/CartItem.html":{}},"body":{"interfaces/CartItem.html":{},"components/PageCartComponent.html":{},"coverage.html":{}}}],["cartitem.productid",{"_index":856,"title":{},"body":{"interfaces/CartItem.html":{},"components/PageCartComponent.html":{}}}],["cartitem.sizeid",{"_index":857,"title":{},"body":{"interfaces/CartItem.html":{},"components/PageCartComponent.html":{}}}],["cartitem[k",{"_index":879,"title":{},"body":{"interfaces/CartItem.html":{},"components/PageCartComponent.html":{}}}],["cartitems",{"_index":809,"title":{},"body":{"interfaces/CartItem.html":{},"interfaces/ICartViewModel.html":{},"components/PageCartComponent.html":{},"injectables/ShopCartRepositoryService.html":{}}}],["cartitems.length",{"_index":2223,"title":{},"body":{"injectables/ShopCartRepositoryService.html":{}}}],["cartitems.map((item",{"_index":2225,"title":{},"body":{"injectables/ShopCartRepositoryService.html":{}}}],["cartitemswithdetails",{"_index":2230,"title":{},"body":{"injectables/ShopCartRepositoryService.html":{}}}],["cartkey",{"_index":2196,"title":{},"body":{"injectables/ShopCartRepositoryService.html":{}}}],["cartservice",{"_index":822,"title":{},"body":{"interfaces/CartItem.html":{},"components/PageCartComponent.html":{},"components/PageItemFromCatalogComponent.html":{}}}],["cartviewmodel",{"_index":827,"title":{},"body":{"interfaces/CartItem.html":{},"components/PageCartComponent.html":{}}}],["cartviewmodel.cartitems.map(item",{"_index":830,"title":{},"body":{"interfaces/CartItem.html":{},"components/PageCartComponent.html":{}}}],["cartviewmodel.ts",{"_index":1633,"title":{},"body":{"interfaces/ICartViewModel.html":{}}}],["case",{"_index":2491,"title":{},"body":{"components/UserPageComponent.html":{}}}],["catalog",{"_index":308,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{},"coverage.html":{}}}],["catalog'},{'name",{"_index":313,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{}}}],["catalog.component.css",{"_index":2012,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{}}}],["catalog.component.html",{"_index":2013,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{}}}],["catalog.component.ts",{"_index":2011,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{},"coverage.html":{}}}],["catalog.component.ts:113",{"_index":2025,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{}}}],["catalog.component.ts:142",{"_index":2023,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{}}}],["catalog.component.ts:25",{"_index":2026,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{}}}],["catalog.component.ts:26",{"_index":2027,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{}}}],["catalog.component.ts:27",{"_index":2018,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{}}}],["catalog.component.ts:39",{"_index":2028,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{}}}],["catalog.component.ts:43",{"_index":2022,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{}}}],["catalog.component.ts:47",{"_index":2021,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{}}}],["catalog.component.ts:75",{"_index":2020,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{}}}],["catalog/page",{"_index":2010,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{},"coverage.html":{}}}],["catch",{"_index":610,"title":{},"body":{"components/BackButtonComponent.html":{},"components/CardItemComponent.html":{},"injectables/ShopCartRepositoryService.html":{}}}],["catcherror",{"_index":2391,"title":{},"body":{"injectables/UserAchievementsService.html":{}}}],["catcherror(err",{"_index":2424,"title":{},"body":{"injectables/UserAchievementsService.html":{}}}],["catcherror(error",{"_index":2404,"title":{},"body":{"injectables/UserAchievementsService.html":{}}}],["categories",{"_index":2437,"title":{},"body":{"components/UserPageComponent.html":{}}}],["categories.service",{"_index":904,"title":{},"body":{"injectables/CategoriesRepositoryService.html":{}}}],["categories.service.ts",{"_index":1365,"title":{},"body":{"injectables/DpCategoriesService.html":{},"coverage.html":{}}}],["categories.service.ts:11",{"_index":1366,"title":{},"body":{"injectables/DpCategoriesService.html":{}}}],["categories.service.ts:15",{"_index":1369,"title":{},"body":{"injectables/DpCategoriesService.html":{}}}],["categories.service.ts:19",{"_index":1370,"title":{},"body":{"injectables/DpCategoriesService.html":{}}}],["categories.service.ts:23",{"_index":1367,"title":{},"body":{"injectables/DpCategoriesService.html":{}}}],["categories.service.ts:27",{"_index":1371,"title":{},"body":{"injectables/DpCategoriesService.html":{}}}],["categories.service.ts:31",{"_index":1368,"title":{},"body":{"injectables/DpCategoriesService.html":{}}}],["categoriesrepository",{"_index":2449,"title":{},"body":{"components/UserPageComponent.html":{}}}],["categoriesrepositoryservice",{"_index":885,"title":{"injectables/CategoriesRepositoryService.html":{}},"body":{"injectables/CategoriesRepositoryService.html":{},"components/DialogCategoryComponent.html":{},"components/UserPageComponent.html":{},"coverage.html":{}}}],["category",{"_index":1068,"title":{},"body":{"components/DialogCategoryComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/UserPageComponent.html":{}}}],["category'},{'name",{"_index":284,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{}}}],["category.component",{"_index":2481,"title":{},"body":{"components/UserPageComponent.html":{}}}],["category.component.css",{"_index":1076,"title":{},"body":{"components/DialogCategoryComponent.html":{}}}],["category.component.html",{"_index":1077,"title":{},"body":{"components/DialogCategoryComponent.html":{}}}],["category.component.ts",{"_index":1067,"title":{},"body":{"components/DialogCategoryComponent.html":{},"coverage.html":{}}}],["category.component.ts:130",{"_index":1118,"title":{},"body":{"components/DialogCategoryComponent.html":{}}}],["category.component.ts:161",{"_index":1108,"title":{},"body":{"components/DialogCategoryComponent.html":{}}}],["category.component.ts:171",{"_index":1111,"title":{},"body":{"components/DialogCategoryComponent.html":{}}}],["category.component.ts:181",{"_index":1106,"title":{},"body":{"components/DialogCategoryComponent.html":{}}}],["category.component.ts:191",{"_index":1095,"title":{},"body":{"components/DialogCategoryComponent.html":{}}}],["category.component.ts:201",{"_index":1101,"title":{},"body":{"components/DialogCategoryComponent.html":{}}}],["category.component.ts:205",{"_index":1113,"title":{},"body":{"components/DialogCategoryComponent.html":{}}}],["category.component.ts:35",{"_index":1131,"title":{},"body":{"components/DialogCategoryComponent.html":{}}}],["category.component.ts:37",{"_index":1119,"title":{},"body":{"components/DialogCategoryComponent.html":{}}}],["category.component.ts:38",{"_index":1135,"title":{},"body":{"components/DialogCategoryComponent.html":{}}}],["category.component.ts:39",{"_index":1121,"title":{},"body":{"components/DialogCategoryComponent.html":{}}}],["category.component.ts:40",{"_index":1136,"title":{},"body":{"components/DialogCategoryComponent.html":{}}}],["category.component.ts:41",{"_index":1132,"title":{},"body":{"components/DialogCategoryComponent.html":{}}}],["category.component.ts:42",{"_index":1137,"title":{},"body":{"components/DialogCategoryComponent.html":{}}}],["category.component.ts:44",{"_index":1133,"title":{},"body":{"components/DialogCategoryComponent.html":{}}}],["category.component.ts:46",{"_index":1127,"title":{},"body":{"components/DialogCategoryComponent.html":{}}}],["category.component.ts:51",{"_index":1139,"title":{},"body":{"components/DialogCategoryComponent.html":{}}}],["category.component.ts:55",{"_index":1141,"title":{},"body":{"components/DialogCategoryComponent.html":{}}}],["category.component.ts:59",{"_index":1103,"title":{},"body":{"components/DialogCategoryComponent.html":{}}}],["category.component.ts:73",{"_index":1115,"title":{},"body":{"components/DialogCategoryComponent.html":{}}}],["category.component.ts:91",{"_index":1097,"title":{},"body":{"components/DialogCategoryComponent.html":{}}}],["category/dialog",{"_index":1066,"title":{},"body":{"components/DialogCategoryComponent.html":{},"components/UserPageComponent.html":{},"coverage.html":{}}}],["categorydata",{"_index":1098,"title":{},"body":{"components/DialogCategoryComponent.html":{}}}],["categorydata).subscribe",{"_index":1169,"title":{},"body":{"components/DialogCategoryComponent.html":{}}}],["categorydialog",{"_index":2438,"title":{},"body":{"components/UserPageComponent.html":{}}}],["categoryform",{"_index":1079,"title":{},"body":{"components/DialogCategoryComponent.html":{}}}],["categorynameinputref",{"_index":1080,"title":{},"body":{"components/DialogCategoryComponent.html":{}}}],["cd",{"_index":721,"title":{},"body":{"components/CarouselImgComponent.html":{},"components/PageCatalogItemComponent.html":{}}}],["cdkfixedsizevirtualscroll",{"_index":391,"title":{},"body":{"components/AchievmentsPageForUserComponent.html":{}}}],["cdkvirtualforof",{"_index":392,"title":{},"body":{"components/AchievmentsPageForUserComponent.html":{}}}],["cdkvirtualscrollviewport",{"_index":393,"title":{},"body":{"components/AchievmentsPageForUserComponent.html":{}}}],["cdr",{"_index":823,"title":{},"body":{"interfaces/CartItem.html":{},"components/PageCartComponent.html":{}}}],["center",{"_index":198,"title":{},"body":{"components/AboutComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/UserPageComponent.html":{}}}],["changedetection",{"_index":12,"title":{},"body":{"components/AboutComponent.html":{},"components/CarouselImgComponent.html":{},"interfaces/CartItem.html":{},"components/FilterByInputComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{}}}],["changedetectionstrategy",{"_index":75,"title":{},"body":{"components/AboutComponent.html":{},"components/AlertDeleteComponent.html":{},"components/CarouselImgComponent.html":{},"interfaces/CartItem.html":{},"components/FilterByInputComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":13,"title":{},"body":{"components/AboutComponent.html":{},"components/CarouselImgComponent.html":{},"interfaces/CartItem.html":{},"components/FilterByInputComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{}}}],["changedetectorref",{"_index":722,"title":{},"body":{"components/CarouselImgComponent.html":{},"interfaces/CartItem.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{}}}],["changes",{"_index":731,"title":{},"body":{"components/CarouselImgComponent.html":{}}}],["changes['images",{"_index":750,"title":{},"body":{"components/CarouselImgComponent.html":{}}}],["changes['images'].firstchange",{"_index":751,"title":{},"body":{"components/CarouselImgComponent.html":{}}}],["checkauthstatus",{"_index":533,"title":{},"body":{"injectables/AuthProjService.html":{},"components/NavbarComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{}}}],["checklengthandwarn",{"_index":1082,"title":{},"body":{"components/DialogCategoryComponent.html":{},"components/DialogProductComponent.html":{}}}],["checklengthandwarn(value",{"_index":1092,"title":{},"body":{"components/DialogCategoryComponent.html":{},"components/DialogProductComponent.html":{}}}],["checkout",{"_index":859,"title":{},"body":{"interfaces/CartItem.html":{},"injectables/ConfigService.html":{},"components/PageCartComponent.html":{},"injectables/ShopCartRepositoryService.html":{},"injectables/ShopCartService.html":{}}}],["checkout(cart",{"_index":2260,"title":{},"body":{"injectables/ShopCartService.html":{}}}],["checkoutemptycart",{"_index":1005,"title":{},"body":{"injectables/ConfigService.html":{}}}],["checkoutfailed",{"_index":967,"title":{},"body":{"injectables/ConfigService.html":{}}}],["checkoutsuccess",{"_index":920,"title":{},"body":{"injectables/ConfigService.html":{}}}],["checkuserachievementexists",{"_index":2368,"title":{},"body":{"injectables/UserAchievementsService.html":{}}}],["checkuserachievementexists(userprojid",{"_index":2374,"title":{},"body":{"injectables/UserAchievementsService.html":{}}}],["child",{"_index":1967,"title":{},"body":{"components/PageComponent.html":{}}}],["choose",{"_index":2683,"title":{},"body":{"index.html":{}}}],["class",{"_index":103,"title":{},"body":{"components/AboutComponent.html":{},"injectables/AchievementsRepositoryService.html":{},"injectables/AchievementsService.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"injectables/AuthProjRepositoryService.html":{},"injectables/AuthProjService.html":{},"injectables/AuthRepositoryService.html":{},"injectables/AuthService.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"interfaces/CartItem.html":{},"injectables/CategoriesRepositoryService.html":{},"injectables/ConfigService.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"injectables/DpCategoriesService.html":{},"injectables/DpImagesService.html":{},"injectables/DpOrderCompositionsService.html":{},"injectables/DpOrdersService.html":{},"injectables/DpProductAttributesService.html":{},"injectables/DpSizesService.html":{},"injectables/DpUserProjsService.html":{},"injectables/DpUsersService.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"injectables/ImagesRepositoryService.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"injectables/OrderCompositionsRepositoryService.html":{},"injectables/OrderRepositoryService.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"injectables/ProductAttributesRepositoryService.html":{},"injectables/ProductsRepositoryService.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"injectables/ShopCartRepositoryService.html":{},"injectables/ShopCartService.html":{},"injectables/SizesRepositoryService.html":{},"components/ThemeToggleComponent.html":{},"injectables/UserAchievementsRepositoryService.html":{},"injectables/UserAchievementsService.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{},"injectables/UserProjsRepositoryService.html":{},"injectables/UsersRepositoryService.html":{}}}],["classes",{"_index":620,"title":{},"body":{"components/ButtonComponent.html":{}}}],["cleanedvalue",{"_index":1180,"title":{},"body":{"components/DialogCategoryComponent.html":{},"components/DialogProductComponent.html":{}}}],["clearcart",{"_index":2197,"title":{},"body":{"injectables/ShopCartRepositoryService.html":{}}}],["cli",{"_index":124,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["click",{"_index":635,"title":{},"body":{"components/ButtonComponent.html":{}}}],["closed",{"_index":2498,"title":{},"body":{"components/UserPageComponent.html":{}}}],["code",{"_index":2648,"title":{},"body":{"index.html":{}}}],["color",{"_index":179,"title":{},"body":{"components/AboutComponent.html":{},"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"miscellaneous/variables.html":{}}}],["column",{"_index":242,"title":{},"body":{"components/AboutComponent.html":{},"components/CarouselImgComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/UserPageComponent.html":{}}}],["columns",{"_index":810,"title":{},"body":{"interfaces/CartItem.html":{},"components/PageCartComponent.html":{}}}],["come",{"_index":2682,"title":{},"body":{"index.html":{}}}],["command",{"_index":2676,"title":{},"body":{"index.html":{}}}],["commerce",{"_index":744,"title":{},"body":{"components/CarouselImgComponent.html":{},"dependencies.html":{}}}],["commonmodule",{"_index":17,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"interfaces/CartItem.html":{},"components/DialogCategoryComponent.html":{},"components/DialogProductComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{},"miscellaneous/variables.html":{}}}],["compile",{"_index":2660,"title":{},"body":{"index.html":{}}}],["complete",{"_index":1789,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UserPageComponent.html":{},"index.html":{}}}],["completedachievementids",{"_index":401,"title":{},"body":{"components/AchievmentsPageForUserComponent.html":{}}}],["component",{"_index":0,"title":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"interfaces/CartItem.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["component_template",{"_index":262,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{},"index.html":{},"overview.html":{}}}],["components/back",{"_index":91,"title":{},"body":{"components/AboutComponent.html":{}}}],["components/card",{"_index":1914,"title":{},"body":{"components/PageCatalogItemComponent.html":{}}}],["components/carditem",{"_index":2717,"title":{},"body":{"miscellaneous/variables.html":{}}}],["components/carousel",{"_index":2029,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{}}}],["components/dialog",{"_index":2480,"title":{},"body":{"components/UserPageComponent.html":{}}}],["components/theme",{"_index":94,"title":{},"body":{"components/AboutComponent.html":{},"components/UserPageComponent.html":{}}}],["compose",{"_index":1964,"title":{},"body":{"components/PageComponent.html":{}}}],["compositions",{"_index":1849,"title":{},"body":{"injectables/OrderCompositionsRepositoryService.html":{},"coverage.html":{}}}],["compositions.service",{"_index":1851,"title":{},"body":{"injectables/OrderCompositionsRepositoryService.html":{}}}],["compositions.service.ts",{"_index":1411,"title":{},"body":{"injectables/DpOrderCompositionsService.html":{},"coverage.html":{}}}],["compositions.service.ts:10",{"_index":1417,"title":{},"body":{"injectables/DpOrderCompositionsService.html":{}}}],["compositions.service.ts:14",{"_index":1424,"title":{},"body":{"injectables/DpOrderCompositionsService.html":{}}}],["compositions.service.ts:18",{"_index":1426,"title":{},"body":{"injectables/DpOrderCompositionsService.html":{}}}],["compositions.service.ts:22",{"_index":1420,"title":{},"body":{"injectables/DpOrderCompositionsService.html":{}}}],["compositions.service.ts:26",{"_index":1428,"title":{},"body":{"injectables/DpOrderCompositionsService.html":{}}}],["compositions.service.ts:30",{"_index":1423,"title":{},"body":{"injectables/DpOrderCompositionsService.html":{}}}],["config.service",{"_index":2393,"title":{},"body":{"injectables/UserAchievementsService.html":{}}}],["configservice",{"_index":39,"title":{"injectables/ConfigService.html":{}},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/CardItemComponent.html":{},"interfaces/CartItem.html":{},"injectables/ConfigService.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/LoginComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/ThemeToggleComponent.html":{},"injectables/UserAchievementsService.html":{},"components/UserPageProjComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["confirmation",{"_index":867,"title":{},"body":{"interfaces/CartItem.html":{},"components/PageCartComponent.html":{}}}],["conflict",{"_index":1058,"title":{},"body":{"injectables/ConfigService.html":{}}}],["connected",{"_index":1962,"title":{},"body":{"components/PageComponent.html":{}}}],["console.error",{"_index":834,"title":{},"body":{"interfaces/CartItem.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/ThemeToggleComponent.html":{},"injectables/UserAchievementsService.html":{}}}],["console.error('[achievements",{"_index":461,"title":{},"body":{"components/AchievmentsPageForUserComponent.html":{}}}],["console.error('error",{"_index":2233,"title":{},"body":{"injectables/ShopCartRepositoryService.html":{}}}],["console.error('login",{"_index":1819,"title":{},"body":{"components/LoginProjComponent.html":{}}}],["console.error('registration",{"_index":2193,"title":{},"body":{"components/RegisterProjComponent.html":{}}}],["console.info('category",{"_index":2502,"title":{},"body":{"components/UserPageComponent.html":{}}}],["console.info('image",{"_index":2506,"title":{},"body":{"components/UserPageComponent.html":{}}}],["console.info('product",{"_index":2497,"title":{},"body":{"components/UserPageComponent.html":{}}}],["console.log",{"_index":1710,"title":{},"body":{"components/IconTrashComponent.html":{},"injectables/UserAchievementsService.html":{}}}],["console.log('[achievements",{"_index":448,"title":{},"body":{"components/AchievmentsPageForUserComponent.html":{}}}],["console.log('[dpimagesservice",{"_index":1397,"title":{},"body":{"injectables/DpImagesService.html":{}}}],["console.log('cartitems",{"_index":2221,"title":{},"body":{"injectables/ShopCartRepositoryService.html":{}}}],["console.log('creating",{"_index":2494,"title":{},"body":{"components/UserPageComponent.html":{}}}],["console.log('login",{"_index":1817,"title":{},"body":{"components/LoginProjComponent.html":{}}}],["console.log('registration",{"_index":2192,"title":{},"body":{"components/RegisterProjComponent.html":{}}}],["console.log('updated",{"_index":2509,"title":{},"body":{"components/UserPageComponent.html":{}}}],["console.log('uploading",{"_index":2505,"title":{},"body":{"components/UserPageComponent.html":{}}}],["console.log(`[catalog",{"_index":1926,"title":{},"body":{"components/PageCatalogItemComponent.html":{}}}],["console.log(`[dpimagesservice",{"_index":1398,"title":{},"body":{"injectables/DpImagesService.html":{}}}],["console.log(`achievement",{"_index":385,"title":{},"body":{"injectables/AchievementsService.html":{}}}],["console.log(cartviewmodel",{"_index":828,"title":{},"body":{"interfaces/CartItem.html":{},"components/PageCartComponent.html":{}}}],["console.warn",{"_index":2406,"title":{},"body":{"injectables/UserAchievementsService.html":{},"components/UserPageComponent.html":{}}}],["console.warn('[achievements",{"_index":468,"title":{},"body":{"components/AchievmentsPageForUserComponent.html":{}}}],["const",{"_index":445,"title":{},"body":{"components/AchievmentsPageForUserComponent.html":{},"injectables/AuthProjService.html":{},"injectables/AuthService.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"interfaces/CartItem.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"injectables/DpImagesService.html":{},"components/FilterByInputComponent.html":{},"components/IconTrashComponent.html":{},"injectables/ImagesRepositoryService.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"injectables/ShopCartRepositoryService.html":{},"components/ThemeToggleComponent.html":{},"injectables/UserAchievementsService.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":46,"title":{},"body":{"components/AboutComponent.html":{},"injectables/AchievementsRepositoryService.html":{},"injectables/AchievementsService.html":{},"components/AchievmentsPageForUserComponent.html":{},"injectables/AuthProjRepositoryService.html":{},"injectables/AuthProjService.html":{},"injectables/AuthRepositoryService.html":{},"injectables/AuthService.html":{},"components/BackButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"interfaces/CartItem.html":{},"injectables/CategoriesRepositoryService.html":{},"injectables/DpCategoriesService.html":{},"injectables/DpImagesService.html":{},"injectables/DpOrderCompositionsService.html":{},"injectables/DpOrdersService.html":{},"injectables/DpProductAttributesService.html":{},"injectables/DpSizesService.html":{},"injectables/DpUserProjsService.html":{},"injectables/DpUsersService.html":{},"components/FilterByInputComponent.html":{},"components/IconTrashComponent.html":{},"injectables/ImagesRepositoryService.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"injectables/OrderCompositionsRepositoryService.html":{},"injectables/OrderRepositoryService.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"injectables/ProductAttributesRepositoryService.html":{},"injectables/ProductsRepositoryService.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"injectables/ShopCartRepositoryService.html":{},"injectables/ShopCartService.html":{},"injectables/SizesRepositoryService.html":{},"components/ThemeToggleComponent.html":{},"injectables/UserAchievementsRepositoryService.html":{},"injectables/UserAchievementsService.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{},"injectables/UserProjsRepositoryService.html":{},"injectables/UsersRepositoryService.html":{}}}],["constructor(achievementsservice",{"_index":337,"title":{},"body":{"injectables/AchievementsRepositoryService.html":{}}}],["constructor(alerts",{"_index":1698,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["constructor(authprojrepository",{"_index":1808,"title":{},"body":{"components/LoginProjComponent.html":{},"components/RegisterProjComponent.html":{}}}],["constructor(authprojservice",{"_index":515,"title":{},"body":{"injectables/AuthProjRepositoryService.html":{}}}],["constructor(authrepository",{"_index":1772,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["constructor(authservice",{"_index":571,"title":{},"body":{"injectables/AuthRepositoryService.html":{}}}],["constructor(cartservice",{"_index":1871,"title":{},"body":{"components/PageCartComponent.html":{}}}],["constructor(configservice",{"_index":410,"title":{},"body":{"components/AchievmentsPageForUserComponent.html":{},"components/UserPageProjComponent.html":{}}}],["constructor(dpcategoriesservice",{"_index":892,"title":{},"body":{"injectables/CategoriesRepositoryService.html":{}}}],["constructor(dpimagesservice",{"_index":1719,"title":{},"body":{"injectables/ImagesRepositoryService.html":{}}}],["constructor(dpordercompositionsservice",{"_index":1850,"title":{},"body":{"injectables/OrderCompositionsRepositoryService.html":{}}}],["constructor(dpordersservice",{"_index":1858,"title":{},"body":{"injectables/OrderRepositoryService.html":{}}}],["constructor(dpproductattributesservice",{"_index":2121,"title":{},"body":{"injectables/ProductAttributesRepositoryService.html":{}}}],["constructor(dpsizesservice",{"_index":2276,"title":{},"body":{"injectables/SizesRepositoryService.html":{}}}],["constructor(dpuserprojsservice",{"_index":2538,"title":{},"body":{"injectables/UserProjsRepositoryService.html":{}}}],["constructor(dpusersservice",{"_index":2547,"title":{},"body":{"injectables/UsersRepositoryService.html":{}}}],["constructor(http",{"_index":368,"title":{},"body":{"injectables/AchievementsService.html":{},"injectables/AuthProjService.html":{},"injectables/AuthService.html":{},"injectables/DpCategoriesService.html":{},"injectables/DpImagesService.html":{},"injectables/DpOrderCompositionsService.html":{},"injectables/DpOrdersService.html":{},"injectables/DpProductAttributesService.html":{},"injectables/DpSizesService.html":{},"injectables/DpUserProjsService.html":{},"injectables/DpUsersService.html":{},"injectables/ProductsService.html":{},"injectables/ShopCartService.html":{},"injectables/UserAchievementsService.html":{}}}],["constructor(imagesrepository",{"_index":717,"title":{},"body":{"components/CarouselImgComponent.html":{}}}],["constructor(location",{"_index":599,"title":{},"body":{"components/BackButtonComponent.html":{}}}],["constructor(private",{"_index":358,"title":{},"body":{"injectables/AchievementsRepositoryService.html":{},"injectables/AchievementsService.html":{},"injectables/AuthProjRepositoryService.html":{},"injectables/AuthProjService.html":{},"injectables/AuthRepositoryService.html":{},"injectables/AuthService.html":{},"components/BackButtonComponent.html":{},"injectables/CategoriesRepositoryService.html":{},"injectables/DpCategoriesService.html":{},"injectables/DpImagesService.html":{},"injectables/DpOrderCompositionsService.html":{},"injectables/DpOrdersService.html":{},"injectables/DpProductAttributesService.html":{},"injectables/DpSizesService.html":{},"injectables/DpUserProjsService.html":{},"injectables/DpUsersService.html":{},"injectables/ImagesRepositoryService.html":{},"injectables/OrderCompositionsRepositoryService.html":{},"injectables/OrderRepositoryService.html":{},"injectables/ProductAttributesRepositoryService.html":{},"injectables/ProductsRepositoryService.html":{},"injectables/ProductsService.html":{},"injectables/ShopCartService.html":{},"injectables/SizesRepositoryService.html":{},"injectables/UserProjsRepositoryService.html":{},"injectables/UsersRepositoryService.html":{}}}],["constructor(productsrepository",{"_index":1906,"title":{},"body":{"components/PageCatalogItemComponent.html":{},"components/UserPageComponent.html":{}}}],["constructor(productsrepositoryservice",{"_index":2202,"title":{},"body":{"injectables/ShopCartRepositoryService.html":{}}}],["constructor(productsservice",{"_index":2132,"title":{},"body":{"injectables/ProductsRepositoryService.html":{}}}],["constructor(route",{"_index":2016,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{}}}],["constructor(router",{"_index":47,"title":{},"body":{"components/AboutComponent.html":{},"components/CardItemComponent.html":{},"components/NavbarComponent.html":{}}}],["constructor(userachievementsservice",{"_index":2346,"title":{},"body":{"injectables/UserAchievementsRepositoryService.html":{}}}],["container",{"_index":1797,"title":{},"body":{"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/PageCartComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{}}}],["content",{"_index":213,"title":{},"body":{"components/AboutComponent.html":{},"components/CarouselImgComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/UserPageComponent.html":{}}}],["contents",{"_index":624,"title":{},"body":{"components/ButtonComponent.html":{}}}],["context",{"_index":485,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{}}}],["control",{"_index":2727,"title":{},"body":{"miscellaneous/variables.html":{}}}],["controlname",{"_index":1313,"title":{},"body":{"components/DialogProductComponent.html":{}}}],["controlvalueaccessor",{"_index":1535,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["cookie",{"_index":2621,"title":{},"body":{"dependencies.html":{}}}],["core",{"_index":110,"title":{},"body":{"components/AboutComponent.html":{}}}],["cover",{"_index":2091,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{}}}],["coverage",{"_index":2554,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createachievement",{"_index":332,"title":{},"body":{"injectables/AchievementsRepositoryService.html":{},"injectables/AchievementsService.html":{}}}],["createachievement(achievement",{"_index":340,"title":{},"body":{"injectables/AchievementsRepositoryService.html":{},"injectables/AchievementsService.html":{}}}],["createcategory",{"_index":1083,"title":{},"body":{"components/DialogCategoryComponent.html":{}}}],["createcategory(categorydata",{"_index":1096,"title":{},"body":{"components/DialogCategoryComponent.html":{}}}],["created",{"_index":1042,"title":{},"body":{"injectables/ConfigService.html":{}}}],["createdcategory",{"_index":1164,"title":{},"body":{"components/DialogCategoryComponent.html":{}}}],["createdimage",{"_index":1297,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["createdpcategory",{"_index":887,"title":{},"body":{"injectables/CategoriesRepositoryService.html":{},"injectables/DpCategoriesService.html":{}}}],["createdpcategory(dpcategory",{"_index":894,"title":{},"body":{"injectables/CategoriesRepositoryService.html":{},"injectables/DpCategoriesService.html":{}}}],["createdpimage",{"_index":1375,"title":{},"body":{"injectables/DpImagesService.html":{},"injectables/ImagesRepositoryService.html":{}}}],["createdpimage(request",{"_index":1383,"title":{},"body":{"injectables/DpImagesService.html":{},"injectables/ImagesRepositoryService.html":{}}}],["createdporder",{"_index":1433,"title":{},"body":{"injectables/DpOrdersService.html":{},"injectables/OrderRepositoryService.html":{}}}],["createdporder(dporder",{"_index":1439,"title":{},"body":{"injectables/DpOrdersService.html":{},"injectables/OrderRepositoryService.html":{}}}],["createdpordercomposition",{"_index":1412,"title":{},"body":{"injectables/DpOrderCompositionsService.html":{},"injectables/OrderCompositionsRepositoryService.html":{}}}],["createdpordercomposition(dpordercomposition",{"_index":1418,"title":{},"body":{"injectables/DpOrderCompositionsService.html":{},"injectables/OrderCompositionsRepositoryService.html":{}}}],["createdpproductattribute",{"_index":1454,"title":{},"body":{"injectables/DpProductAttributesService.html":{},"injectables/ProductAttributesRepositoryService.html":{}}}],["createdpproductattribute(dpproductattribute",{"_index":1460,"title":{},"body":{"injectables/DpProductAttributesService.html":{},"injectables/ProductAttributesRepositoryService.html":{}}}],["createdproduct",{"_index":1355,"title":{},"body":{"components/DialogProductComponent.html":{}}}],["createdpsize",{"_index":1475,"title":{},"body":{"injectables/DpSizesService.html":{},"injectables/SizesRepositoryService.html":{}}}],["createdpsize(dpsize",{"_index":1481,"title":{},"body":{"injectables/DpSizesService.html":{},"injectables/SizesRepositoryService.html":{}}}],["createdpuser",{"_index":1515,"title":{},"body":{"injectables/DpUsersService.html":{},"injectables/UsersRepositoryService.html":{}}}],["createdpuser(dpuser",{"_index":1521,"title":{},"body":{"injectables/DpUsersService.html":{},"injectables/UsersRepositoryService.html":{}}}],["createdpuserproj",{"_index":1496,"title":{},"body":{"injectables/DpUserProjsService.html":{},"injectables/UserProjsRepositoryService.html":{}}}],["createdpuserproj(dpuserproj",{"_index":1502,"title":{},"body":{"injectables/DpUserProjsService.html":{},"injectables/UserProjsRepositoryService.html":{}}}],["createimage",{"_index":1208,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["createimage(imagedata",{"_index":1213,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["createproduct",{"_index":1015,"title":{},"body":{"injectables/ConfigService.html":{},"components/DialogProductComponent.html":{},"injectables/ProductsRepositoryService.html":{},"injectables/ProductsService.html":{}}}],["createproduct(product",{"_index":2137,"title":{},"body":{"injectables/ProductsRepositoryService.html":{},"injectables/ProductsService.html":{}}}],["createproduct(productdata",{"_index":1315,"title":{},"body":{"components/DialogProductComponent.html":{}}}],["createproductfailed",{"_index":971,"title":{},"body":{"injectables/ConfigService.html":{}}}],["createproductsuccess",{"_index":924,"title":{},"body":{"injectables/ConfigService.html":{}}}],["createrequest",{"_index":1292,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["createuserachievement",{"_index":2341,"title":{},"body":{"injectables/UserAchievementsRepositoryService.html":{},"injectables/UserAchievementsService.html":{}}}],["createuserachievement(userprojid",{"_index":2347,"title":{},"body":{"injectables/UserAchievementsRepositoryService.html":{},"injectables/UserAchievementsService.html":{}}}],["css",{"_index":117,"title":{},"body":{"components/AboutComponent.html":{}}}],["currency:'rub",{"_index":701,"title":{},"body":{"components/CardItemComponent.html":{},"components/PageCartComponent.html":{},"components/PageItemFromCatalogComponent.html":{}}}],["currency:\\'rub",{"_index":702,"title":{},"body":{"components/CardItemComponent.html":{},"components/PageCartComponent.html":{},"components/PageItemFromCatalogComponent.html":{}}}],["currencypipe",{"_index":790,"title":{},"body":{"interfaces/CartItem.html":{},"components/PageCartComponent.html":{}}}],["current",{"_index":881,"title":{},"body":{"interfaces/CartItem.html":{},"components/PageCartComponent.html":{}}}],["currentquantity",{"_index":2247,"title":{},"body":{"injectables/ShopCartRepositoryService.html":{}}}],["cursor",{"_index":232,"title":{},"body":{"components/AboutComponent.html":{},"components/ButtonComponent.html":{}}}],["custom_elements_schema",{"_index":79,"title":{},"body":{"components/AboutComponent.html":{},"components/CardItemComponent.html":{},"interfaces/CartItem.html":{},"components/DialogProductComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{}}}],["dark",{"_index":247,"title":{},"body":{"components/AboutComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{}}}],["darkmode",{"_index":505,"title":{},"body":{"components/AppComponent.html":{},"components/ThemeToggleComponent.html":{}}}],["data",{"_index":243,"title":{},"body":{"components/AboutComponent.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/NavbarComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/UserPageComponent.html":{}}}],["data/components/navbar/navbar.component",{"_index":511,"title":{},"body":{"components/AppComponent.html":{}}}],["date",{"_index":788,"title":{},"body":{"interfaces/CartItem.html":{},"interfaces/IDpOrder.html":{},"interfaces/IDpUser.html":{},"components/LoginComponent.html":{},"components/PageCartComponent.html":{},"components/RegisterComponent.html":{}}}],["decorators",{"_index":1128,"title":{},"body":{"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"miscellaneous/variables.html":{}}}],["decreasequantity",{"_index":1866,"title":{},"body":{"components/PageCartComponent.html":{}}}],["decreasequantity(item",{"_index":847,"title":{},"body":{"interfaces/CartItem.html":{},"components/PageCartComponent.html":{}}}],["default",{"_index":64,"title":{},"body":{"components/AboutComponent.html":{},"injectables/AchievementsService.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"injectables/AuthProjService.html":{},"injectables/AuthService.html":{},"components/ButtonComponent.html":{},"components/CarouselImgComponent.html":{},"injectables/ConfigService.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"injectables/DpCategoriesService.html":{},"injectables/DpImagesService.html":{},"injectables/DpOrderCompositionsService.html":{},"injectables/DpOrdersService.html":{},"injectables/DpProductAttributesService.html":{},"injectables/DpSizesService.html":{},"injectables/DpUserProjsService.html":{},"injectables/DpUsersService.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"injectables/ImagesRepositoryService.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"injectables/ShopCartRepositoryService.html":{},"injectables/ShopCartService.html":{},"components/ThemeToggleComponent.html":{},"injectables/UserAchievementsService.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":49,"title":{},"body":{"components/AboutComponent.html":{},"injectables/AchievementsRepositoryService.html":{},"injectables/AchievementsService.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"injectables/AuthProjRepositoryService.html":{},"injectables/AuthProjService.html":{},"injectables/AuthRepositoryService.html":{},"injectables/AuthService.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"injectables/CategoriesRepositoryService.html":{},"injectables/ConfigService.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"injectables/DpCategoriesService.html":{},"injectables/DpImagesService.html":{},"injectables/DpOrderCompositionsService.html":{},"injectables/DpOrdersService.html":{},"injectables/DpProductAttributesService.html":{},"injectables/DpSizesService.html":{},"injectables/DpUserProjsService.html":{},"injectables/DpUsersService.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"injectables/ImagesRepositoryService.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"injectables/OrderCompositionsRepositoryService.html":{},"injectables/OrderRepositoryService.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"injectables/ProductAttributesRepositoryService.html":{},"injectables/ProductsRepositoryService.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"injectables/ShopCartRepositoryService.html":{},"injectables/ShopCartService.html":{},"injectables/SizesRepositoryService.html":{},"components/ThemeToggleComponent.html":{},"injectables/UserAchievementsRepositoryService.html":{},"injectables/UserAchievementsService.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{},"injectables/UserProjsRepositoryService.html":{},"injectables/UsersRepositoryService.html":{}}}],["delete",{"_index":481,"title":{},"body":{"components/AlertDeleteComponent.html":{}}}],["delete'},{'name",{"_index":269,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{}}}],["delete.component",{"_index":1702,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["delete.component.css",{"_index":496,"title":{},"body":{"components/AlertDeleteComponent.html":{}}}],["delete.component.css,../../../styles/root.css",{"_index":482,"title":{},"body":{"components/AlertDeleteComponent.html":{}}}],["delete.component.html",{"_index":483,"title":{},"body":{"components/AlertDeleteComponent.html":{}}}],["delete.component.ts",{"_index":480,"title":{},"body":{"components/AlertDeleteComponent.html":{},"coverage.html":{}}}],["delete.component.ts:17",{"_index":487,"title":{},"body":{"components/AlertDeleteComponent.html":{}}}],["delete/alert",{"_index":479,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/IconTrashComponent.html":{},"coverage.html":{}}}],["deleteachievement",{"_index":333,"title":{},"body":{"injectables/AchievementsRepositoryService.html":{},"injectables/AchievementsService.html":{}}}],["deleteachievement(id",{"_index":345,"title":{},"body":{"injectables/AchievementsRepositoryService.html":{},"injectables/AchievementsService.html":{}}}],["deletedpcategory",{"_index":888,"title":{},"body":{"injectables/CategoriesRepositoryService.html":{},"injectables/DpCategoriesService.html":{}}}],["deletedpcategory(id",{"_index":897,"title":{},"body":{"injectables/CategoriesRepositoryService.html":{},"injectables/DpCategoriesService.html":{}}}],["deletedpimage",{"_index":1376,"title":{},"body":{"injectables/DpImagesService.html":{},"injectables/ImagesRepositoryService.html":{}}}],["deletedpimage(id",{"_index":1385,"title":{},"body":{"injectables/DpImagesService.html":{},"injectables/ImagesRepositoryService.html":{}}}],["deletedporder",{"_index":1434,"title":{},"body":{"injectables/DpOrdersService.html":{},"injectables/OrderRepositoryService.html":{}}}],["deletedporder(id",{"_index":1443,"title":{},"body":{"injectables/DpOrdersService.html":{},"injectables/OrderRepositoryService.html":{}}}],["deletedpordercomposition",{"_index":1413,"title":{},"body":{"injectables/DpOrderCompositionsService.html":{},"injectables/OrderCompositionsRepositoryService.html":{}}}],["deletedpordercomposition(id",{"_index":1422,"title":{},"body":{"injectables/DpOrderCompositionsService.html":{},"injectables/OrderCompositionsRepositoryService.html":{}}}],["deletedpproductattribute",{"_index":1455,"title":{},"body":{"injectables/DpProductAttributesService.html":{},"injectables/ProductAttributesRepositoryService.html":{}}}],["deletedpproductattribute(id",{"_index":1464,"title":{},"body":{"injectables/DpProductAttributesService.html":{},"injectables/ProductAttributesRepositoryService.html":{}}}],["deletedpsize",{"_index":1476,"title":{},"body":{"injectables/DpSizesService.html":{},"injectables/SizesRepositoryService.html":{}}}],["deletedpsize(id",{"_index":1485,"title":{},"body":{"injectables/DpSizesService.html":{},"injectables/SizesRepositoryService.html":{}}}],["deletedpuser",{"_index":1516,"title":{},"body":{"injectables/DpUsersService.html":{},"injectables/UsersRepositoryService.html":{}}}],["deletedpuser(id",{"_index":1524,"title":{},"body":{"injectables/DpUsersService.html":{},"injectables/UsersRepositoryService.html":{}}}],["deletedpuserproj",{"_index":1497,"title":{},"body":{"injectables/DpUserProjsService.html":{},"injectables/UserProjsRepositoryService.html":{}}}],["deletedpuserproj(id",{"_index":1505,"title":{},"body":{"injectables/DpUserProjsService.html":{},"injectables/UserProjsRepositoryService.html":{}}}],["deleteproduct",{"_index":2129,"title":{},"body":{"injectables/ProductsRepositoryService.html":{},"injectables/ProductsService.html":{}}}],["deleteproduct(id",{"_index":2139,"title":{},"body":{"injectables/ProductsRepositoryService.html":{},"injectables/ProductsService.html":{}}}],["dependencies",{"_index":2601,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["description",{"_index":2102,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{},"injectables/UserAchievementsRepositoryService.html":{},"injectables/UserAchievementsService.html":{}}}],["detailed",{"_index":2691,"title":{},"body":{"index.html":{}}}],["details",{"_index":2097,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{}}}],["development",{"_index":1975,"title":{},"body":{"components/PageComponent.html":{},"index.html":{}}}],["dialog",{"_index":283,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{}}}],["dialogcategorycomponent",{"_index":282,"title":{"components/DialogCategoryComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{},"coverage.html":{}}}],["dialogimagecomponent",{"_index":285,"title":{"components/DialogImageComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{},"coverage.html":{}}}],["dialogproductcomponent",{"_index":287,"title":{"components/DialogProductComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{},"coverage.html":{}}}],["dialogs",{"_index":1081,"title":{},"body":{"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{}}}],["dialogservice",{"_index":2439,"title":{},"body":{"components/UserPageComponent.html":{}}}],["direction",{"_index":219,"title":{},"body":{"components/AboutComponent.html":{},"components/CarouselImgComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/UserPageComponent.html":{}}}],["directive",{"_index":261,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{}}}],["directives",{"_index":323,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{},"index.html":{}}}],["directory",{"_index":2664,"title":{},"body":{"index.html":{}}}],["dismissible",{"_index":2466,"title":{},"body":{"components/UserPageComponent.html":{}}}],["display",{"_index":195,"title":{},"body":{"components/AboutComponent.html":{},"components/ButtonComponent.html":{},"components/CarouselImgComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/UserPageComponent.html":{}}}],["dist",{"_index":2663,"title":{},"body":{"index.html":{}}}],["div.action",{"_index":2518,"title":{},"body":{"components/UserPageComponent.html":{}}}],["docreateaccount",{"_index":1985,"title":{},"body":{"components/PageComponent.html":{}}}],["docs",{"_index":1978,"title":{},"body":{"components/PageComponent.html":{}}}],["docs/autodocs",{"_index":2738,"title":{},"body":{"miscellaneous/variables.html":{}}}],["document.body.appendchild(fullscreendiv",{"_index":2070,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{}}}],["document.body.classlist.add('dark",{"_index":2324,"title":{},"body":{"components/ThemeToggleComponent.html":{}}}],["document.body.classlist.toggle('dark",{"_index":2323,"title":{},"body":{"components/ThemeToggleComponent.html":{}}}],["document.body.removechild(fullscreendiv",{"_index":2069,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{}}}],["document.createelement('div",{"_index":2049,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{}}}],["document.createelement('img",{"_index":2063,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{}}}],["documentation",{"_index":2555,"title":{},"body":{"coverage.html":{}}}],["doe",{"_index":1995,"title":{},"body":{"components/PageComponent.html":{},"miscellaneous/variables.html":{}}}],["dologin",{"_index":1986,"title":{},"body":{"components/PageComponent.html":{}}}],["dologout",{"_index":1987,"title":{},"body":{"components/PageComponent.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{}}}],["domsanitizer",{"_index":720,"title":{},"body":{"components/CarouselImgComponent.html":{},"components/PageItemFromCatalogComponent.html":{}}}],["dpattributes",{"_index":1651,"title":{},"body":{"interfaces/IDpOrderComposition.html":{}}}],["dpattributesid",{"_index":1652,"title":{},"body":{"interfaces/IDpOrderComposition.html":{},"interfaces/IDpProductAttribute.html":{}}}],["dpcategories",{"_index":1669,"title":{},"body":{"interfaces/IDpSize.html":{}}}],["dpcategoriesservice",{"_index":893,"title":{"injectables/DpCategoriesService.html":{}},"body":{"injectables/CategoriesRepositoryService.html":{},"injectables/DpCategoriesService.html":{},"coverage.html":{}}}],["dpcategory",{"_index":896,"title":{},"body":{"injectables/CategoriesRepositoryService.html":{},"injectables/DpCategoriesService.html":{},"interfaces/IDpProduct.html":{}}}],["dpcategory.ts",{"_index":1637,"title":{},"body":{"interfaces/IDpCategory.html":{}}}],["dpcategoryid",{"_index":1159,"title":{},"body":{"components/DialogCategoryComponent.html":{},"components/DialogProductComponent.html":{},"interfaces/IDpCategory.html":{},"interfaces/IDpProduct.html":{}}}],["dpcategorytitle",{"_index":1123,"title":{},"body":{"components/DialogCategoryComponent.html":{},"interfaces/IDpCategory.html":{}}}],["dpcost",{"_index":1653,"title":{},"body":{"interfaces/IDpOrderComposition.html":{}}}],["dpcount",{"_index":1665,"title":{},"body":{"interfaces/IDpProductAttribute.html":{}}}],["dpdatetimeorder",{"_index":1645,"title":{},"body":{"interfaces/IDpOrder.html":{}}}],["dpdescription",{"_index":1331,"title":{},"body":{"components/DialogProductComponent.html":{},"interfaces/IDpProduct.html":{}}}],["dpdiscountpercent",{"_index":1336,"title":{},"body":{"components/DialogProductComponent.html":{},"interfaces/IDpProduct.html":{}}}],["dpemail",{"_index":1672,"title":{},"body":{"interfaces/IDpUser.html":{}}}],["dpfullname",{"_index":1673,"title":{},"body":{"interfaces/IDpUser.html":{}}}],["dpimage.ts",{"_index":1643,"title":{},"body":{"interfaces/IDpImage.html":{}}}],["dpimages",{"_index":1661,"title":{},"body":{"interfaces/IDpProduct.html":{},"injectables/ProductsRepositoryService.html":{},"miscellaneous/variables.html":{}}}],["dpimagesid",{"_index":1639,"title":{},"body":{"interfaces/IDpImage.html":{},"miscellaneous/variables.html":{}}}],["dpimagesservice",{"_index":1373,"title":{"injectables/DpImagesService.html":{}},"body":{"injectables/DpImagesService.html":{},"injectables/ImagesRepositoryService.html":{},"coverage.html":{}}}],["dpimagetitle",{"_index":1240,"title":{},"body":{"components/DialogImageComponent.html":{},"interfaces/ICreateDpImageRequest.html":{},"interfaces/IDpImage.html":{},"interfaces/IUpdateDpImageRequest.html":{},"miscellaneous/variables.html":{}}}],["dporder",{"_index":1442,"title":{},"body":{"injectables/DpOrdersService.html":{},"interfaces/IDpOrderComposition.html":{},"injectables/OrderRepositoryService.html":{}}}],["dporder.ts",{"_index":1649,"title":{},"body":{"interfaces/IDpOrder.html":{}}}],["dpordercomposition",{"_index":1421,"title":{},"body":{"injectables/DpOrderCompositionsService.html":{},"injectables/OrderCompositionsRepositoryService.html":{}}}],["dpordercomposition.ts",{"_index":1655,"title":{},"body":{"interfaces/IDpOrderComposition.html":{}}}],["dpordercompositionsservice",{"_index":1409,"title":{"injectables/DpOrderCompositionsService.html":{}},"body":{"injectables/DpOrderCompositionsService.html":{},"injectables/OrderCompositionsRepositoryService.html":{},"coverage.html":{}}}],["dporderid",{"_index":1646,"title":{},"body":{"interfaces/IDpOrder.html":{},"interfaces/IDpOrderComposition.html":{}}}],["dporders",{"_index":1674,"title":{},"body":{"interfaces/IDpUser.html":{}}}],["dpordersservice",{"_index":1431,"title":{"injectables/DpOrdersService.html":{}},"body":{"injectables/DpOrdersService.html":{},"injectables/OrderRepositoryService.html":{},"coverage.html":{}}}],["dppassword",{"_index":1675,"title":{},"body":{"interfaces/IDpUser.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["dpphonenumber",{"_index":1676,"title":{},"body":{"interfaces/IDpUser.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["dpprice",{"_index":1332,"title":{},"body":{"components/DialogProductComponent.html":{},"interfaces/IDpProduct.html":{},"miscellaneous/variables.html":{}}}],["dpproduct",{"_index":1640,"title":{},"body":{"interfaces/IDpImage.html":{},"interfaces/IDpProductAttribute.html":{}}}],["dpproduct.ts",{"_index":1663,"title":{},"body":{"interfaces/IDpProduct.html":{}}}],["dpproductattribute",{"_index":1463,"title":{},"body":{"injectables/DpProductAttributesService.html":{},"injectables/ProductAttributesRepositoryService.html":{}}}],["dpproductattribute.ts",{"_index":1667,"title":{},"body":{"interfaces/IDpProductAttribute.html":{}}}],["dpproductattributes",{"_index":1662,"title":{},"body":{"interfaces/IDpProduct.html":{},"interfaces/IDpSize.html":{}}}],["dpproductattributesservice",{"_index":1452,"title":{"injectables/DpProductAttributesService.html":{}},"body":{"injectables/DpProductAttributesService.html":{},"injectables/ProductAttributesRepositoryService.html":{},"coverage.html":{}}}],["dpproductid",{"_index":1239,"title":{},"body":{"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"interfaces/ICreateDpImageRequest.html":{},"interfaces/IDpImage.html":{},"interfaces/IDpProduct.html":{},"interfaces/IDpProductAttribute.html":{},"interfaces/IUpdateDpImageRequest.html":{},"components/PageItemFromCatalogComponent.html":{},"miscellaneous/variables.html":{}}}],["dpproducts",{"_index":1636,"title":{},"body":{"interfaces/IDpCategory.html":{}}}],["dppurchaseprice",{"_index":1335,"title":{},"body":{"components/DialogProductComponent.html":{},"interfaces/IDpProduct.html":{},"miscellaneous/variables.html":{}}}],["dpquantity",{"_index":1654,"title":{},"body":{"interfaces/IDpOrderComposition.html":{}}}],["dpregistrationdate",{"_index":1677,"title":{},"body":{"interfaces/IDpUser.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["dpsize",{"_index":1484,"title":{},"body":{"injectables/DpSizesService.html":{},"interfaces/IDpProductAttribute.html":{},"injectables/SizesRepositoryService.html":{}}}],["dpsize.ts",{"_index":1670,"title":{},"body":{"interfaces/IDpSize.html":{}}}],["dpsizenavigation",{"_index":1666,"title":{},"body":{"interfaces/IDpProductAttribute.html":{}}}],["dpsizesservice",{"_index":1473,"title":{"injectables/DpSizesService.html":{}},"body":{"injectables/DpSizesService.html":{},"injectables/SizesRepositoryService.html":{},"coverage.html":{}}}],["dptitle",{"_index":1330,"title":{},"body":{"components/DialogProductComponent.html":{},"interfaces/IDpProduct.html":{},"miscellaneous/variables.html":{}}}],["dptypeorder",{"_index":1647,"title":{},"body":{"interfaces/IDpOrder.html":{}}}],["dpuser",{"_index":1523,"title":{},"body":{"injectables/DpUsersService.html":{},"interfaces/IDpOrder.html":{},"injectables/UsersRepositoryService.html":{}}}],["dpuser.ts",{"_index":1679,"title":{},"body":{"interfaces/IDpUser.html":{}}}],["dpuserid",{"_index":1648,"title":{},"body":{"interfaces/IDpOrder.html":{},"interfaces/IDpUser.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["dpusername",{"_index":1678,"title":{},"body":{"interfaces/IDpUser.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["dpuserproj",{"_index":1504,"title":{},"body":{"injectables/DpUserProjsService.html":{},"interfaces/IUserHasAchievement.html":{},"injectables/UserProjsRepositoryService.html":{}}}],["dpuserprojid",{"_index":1681,"title":{},"body":{"interfaces/IDpUserProj.html":{},"interfaces/IUserHasAchievement.html":{},"components/LoginProjComponent.html":{},"components/RegisterProjComponent.html":{}}}],["dpuserprojs",{"_index":1623,"title":{},"body":{"interfaces/IAchievement.html":{}}}],["dpuserprojsservice",{"_index":1494,"title":{"injectables/DpUserProjsService.html":{}},"body":{"injectables/DpUserProjsService.html":{},"injectables/UserProjsRepositoryService.html":{},"coverage.html":{}}}],["dpusersservice",{"_index":1513,"title":{"injectables/DpUsersService.html":{}},"body":{"injectables/DpUsersService.html":{},"injectables/UsersRepositoryService.html":{},"coverage.html":{}}}],["driven",{"_index":1941,"title":{},"body":{"components/PageComponent.html":{}}}],["dynamic",{"_index":2607,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":2679,"title":{},"body":{"index.html":{}}}],["e2eangular",{"_index":2681,"title":{},"body":{"index.html":{}}}],["e5e5e5",{"_index":227,"title":{},"body":{"components/AboutComponent.html":{}}}],["e7fdd8",{"_index":2004,"title":{},"body":{"components/PageComponent.html":{}}}],["ease",{"_index":2079,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{}}}],["easy",{"_index":1949,"title":{},"body":{"components/PageComponent.html":{}}}],["edit",{"_index":2510,"title":{},"body":{"components/UserPageComponent.html":{}}}],["editcategorybyid",{"_index":2445,"title":{},"body":{"components/UserPageComponent.html":{}}}],["editcategorybyid(id",{"_index":2452,"title":{},"body":{"components/UserPageComponent.html":{}}}],["editcategoryform",{"_index":2440,"title":{},"body":{"components/UserPageComponent.html":{}}}],["editimagebyid",{"_index":2446,"title":{},"body":{"components/UserPageComponent.html":{}}}],["editimagebyid(id",{"_index":2454,"title":{},"body":{"components/UserPageComponent.html":{}}}],["editimageform",{"_index":2441,"title":{},"body":{"components/UserPageComponent.html":{}}}],["editproductbyid",{"_index":2447,"title":{},"body":{"components/UserPageComponent.html":{}}}],["editproductbyid(id",{"_index":2456,"title":{},"body":{"components/UserPageComponent.html":{}}}],["editproductform",{"_index":2442,"title":{},"body":{"components/UserPageComponent.html":{}}}],["element",{"_index":260,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{}}}],["elementref",{"_index":1100,"title":{},"body":{"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{}}}],["ellipsis",{"_index":2099,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{}}}],["email",{"_index":1682,"title":{},"body":{"interfaces/IDpUserProj.html":{}}}],["emitevent",{"_index":1598,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["empty",{"_index":1898,"title":{},"body":{"components/PageCartComponent.html":{}}}],["emptyimages",{"_index":2593,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["end",{"_index":2678,"title":{},"body":{"index.html":{}}}],["ending",{"_index":1945,"title":{},"body":{"components/PageComponent.html":{}}}],["entity",{"_index":129,"title":{},"body":{"components/AboutComponent.html":{}}}],["entry",{"_index":2736,"title":{},"body":{"miscellaneous/variables.html":{}}}],["err",{"_index":460,"title":{},"body":{"components/AchievmentsPageForUserComponent.html":{},"components/ThemeToggleComponent.html":{},"injectables/UserAchievementsService.html":{}}}],["error",{"_index":459,"title":{},"body":{"components/AchievmentsPageForUserComponent.html":{},"components/BackButtonComponent.html":{},"interfaces/CartItem.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"injectables/ShopCartRepositoryService.html":{},"components/ThemeToggleComponent.html":{},"injectables/UserAchievementsService.html":{},"components/UserPageComponent.html":{}}}],["error.error?.message",{"_index":2194,"title":{},"body":{"components/RegisterProjComponent.html":{}}}],["error.message",{"_index":1300,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["error.status",{"_index":1792,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserAchievementsService.html":{}}}],["errormessage",{"_index":1791,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{}}}],["eslint",{"_index":126,"title":{},"body":{"components/AboutComponent.html":{}}}],["event",{"_index":1105,"title":{},"body":{"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/PageCartComponent.html":{}}}],["event.ctrlkey",{"_index":1594,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["event.key",{"_index":1591,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["event.metakey",{"_index":1595,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["event.preventdefault",{"_index":1154,"title":{},"body":{"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{}}}],["event.target",{"_index":1178,"title":{},"body":{"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{}}}],["eventcoalescing",{"_index":2712,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eventemitter",{"_index":633,"title":{},"body":{"components/ButtonComponent.html":{},"components/CarouselImgComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{}}}],["example",{"_index":2638,"title":{},"body":{"index.html":{}}}],["example/button",{"_index":2725,"title":{},"body":{"miscellaneous/variables.html":{}}}],["example/header",{"_index":2735,"title":{},"body":{"miscellaneous/variables.html":{}}}],["example/page",{"_index":2757,"title":{},"body":{"miscellaneous/variables.html":{}}}],["execute",{"_index":2671,"title":{},"body":{"index.html":{}}}],["existingitem",{"_index":2243,"title":{},"body":{"injectables/ShopCartRepositoryService.html":{}}}],["existingitem.quantity",{"_index":2245,"title":{},"body":{"injectables/ShopCartRepositoryService.html":{}}}],["exists",{"_index":2418,"title":{},"body":{"injectables/UserAchievementsService.html":{}}}],["expect(loginbutton).not.tobeinthedocument",{"_index":2753,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expect(loginbutton).tobeinthedocument",{"_index":2751,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expect(logoutbutton).tobeinthedocument",{"_index":2756,"title":{},"body":{"miscellaneous/variables.html":{}}}],["export",{"_index":102,"title":{},"body":{"components/AboutComponent.html":{},"injectables/AchievementsRepositoryService.html":{},"injectables/AchievementsService.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"injectables/AuthProjRepositoryService.html":{},"injectables/AuthProjService.html":{},"injectables/AuthRepositoryService.html":{},"injectables/AuthService.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"interfaces/CartItem.html":{},"injectables/CategoriesRepositoryService.html":{},"injectables/ConfigService.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"injectables/DpCategoriesService.html":{},"injectables/DpImagesService.html":{},"injectables/DpOrderCompositionsService.html":{},"injectables/DpOrdersService.html":{},"injectables/DpProductAttributesService.html":{},"injectables/DpSizesService.html":{},"injectables/DpUserProjsService.html":{},"injectables/DpUsersService.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IAchievement.html":{},"interfaces/IAddToCartRequest.html":{},"interfaces/ICartItem.html":{},"interfaces/ICartViewModel.html":{},"interfaces/ICreateDpImageRequest.html":{},"interfaces/IDpCategory.html":{},"interfaces/IDpImage.html":{},"interfaces/IDpOrder.html":{},"interfaces/IDpOrderComposition.html":{},"interfaces/IDpOrderDetail.html":{},"interfaces/IDpProduct.html":{},"interfaces/IDpProductAttribute.html":{},"interfaces/IDpSize.html":{},"interfaces/IDpUser.html":{},"interfaces/IDpUserProj.html":{},"interfaces/IRemoveFromCartRequest.html":{},"interfaces/IUpdateCartRequest.html":{},"interfaces/IUpdateDpImageRequest.html":{},"interfaces/IUserHasAchievement.html":{},"components/IconTrashComponent.html":{},"injectables/ImagesRepositoryService.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"injectables/OrderCompositionsRepositoryService.html":{},"injectables/OrderRepositoryService.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"injectables/ProductAttributesRepositoryService.html":{},"injectables/ProductsRepositoryService.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"injectables/ShopCartRepositoryService.html":{},"injectables/ShopCartService.html":{},"injectables/SizesRepositoryService.html":{},"components/ThemeToggleComponent.html":{},"interfaces/User.html":{},"injectables/UserAchievementsRepositoryService.html":{},"injectables/UserAchievementsService.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{},"injectables/UserProjsRepositoryService.html":{},"injectables/UsersRepositoryService.html":{}}}],["exporttoexcel",{"_index":2198,"title":{},"body":{"injectables/ShopCartRepositoryService.html":{},"injectables/ShopCartService.html":{}}}],["exporttoexcel(orderid",{"_index":2208,"title":{},"body":{"injectables/ShopCartRepositoryService.html":{},"injectables/ShopCartService.html":{}}}],["extends",{"_index":786,"title":{},"body":{"interfaces/CartItem.html":{},"components/PageCartComponent.html":{}}}],["fade",{"_index":2117,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{}}}],["fadein",{"_index":2114,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{}}}],["fail",{"_index":1846,"title":{},"body":{"components/NavbarComponent.html":{}}}],["failed",{"_index":1820,"title":{},"body":{"components/LoginProjComponent.html":{},"components/RegisterProjComponent.html":{}}}],["failedachievementid",{"_index":2413,"title":{},"body":{"injectables/UserAchievementsService.html":{}}}],["failedachievementid).pipe",{"_index":2423,"title":{},"body":{"injectables/UserAchievementsService.html":{}}}],["failedimage",{"_index":1200,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["failedtoload",{"_index":983,"title":{},"body":{"injectables/ConfigService.html":{}}}],["false",{"_index":425,"title":{},"body":{"components/AchievmentsPageForUserComponent.html":{},"components/ButtonComponent.html":{},"interfaces/CartItem.html":{},"components/FilterByInputComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"injectables/ShopCartRepositoryService.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":649,"title":{},"body":{"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/PageComponent.html":{}}}],["feature",{"_index":206,"title":{},"body":{"components/AboutComponent.html":{}}}],["fff",{"_index":1844,"title":{},"body":{"components/NavbarComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AboutComponent.html":{},"injectables/AchievementsRepositoryService.html":{},"injectables/AchievementsService.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"injectables/AuthProjRepositoryService.html":{},"injectables/AuthProjService.html":{},"injectables/AuthRepositoryService.html":{},"injectables/AuthService.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"interfaces/CartItem.html":{},"injectables/CategoriesRepositoryService.html":{},"injectables/ConfigService.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"injectables/DpCategoriesService.html":{},"injectables/DpImagesService.html":{},"injectables/DpOrderCompositionsService.html":{},"injectables/DpOrdersService.html":{},"injectables/DpProductAttributesService.html":{},"injectables/DpSizesService.html":{},"injectables/DpUserProjsService.html":{},"injectables/DpUsersService.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IAchievement.html":{},"interfaces/IAddToCartRequest.html":{},"interfaces/ICartItem.html":{},"interfaces/ICartViewModel.html":{},"interfaces/ICreateDpImageRequest.html":{},"interfaces/IDpCategory.html":{},"interfaces/IDpImage.html":{},"interfaces/IDpOrder.html":{},"interfaces/IDpOrderComposition.html":{},"interfaces/IDpOrderDetail.html":{},"interfaces/IDpProduct.html":{},"interfaces/IDpProductAttribute.html":{},"interfaces/IDpSize.html":{},"interfaces/IDpUser.html":{},"interfaces/IDpUserProj.html":{},"interfaces/IRemoveFromCartRequest.html":{},"interfaces/IUpdateCartRequest.html":{},"interfaces/IUpdateDpImageRequest.html":{},"interfaces/IUserHasAchievement.html":{},"components/IconTrashComponent.html":{},"injectables/ImagesRepositoryService.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"injectables/OrderCompositionsRepositoryService.html":{},"injectables/OrderRepositoryService.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"injectables/ProductAttributesRepositoryService.html":{},"injectables/ProductsRepositoryService.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"injectables/ShopCartRepositoryService.html":{},"injectables/ShopCartService.html":{},"injectables/SizesRepositoryService.html":{},"components/ThemeToggleComponent.html":{},"interfaces/User.html":{},"injectables/UserAchievementsRepositoryService.html":{},"injectables/UserAchievementsService.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{},"injectables/UserProjsRepositoryService.html":{},"injectables/UsersRepositoryService.html":{},"coverage.html":{}}}],["file.size",{"_index":1279,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["files",{"_index":2647,"title":{},"body":{"index.html":{}}}],["fill",{"_index":1843,"title":{},"body":{"components/NavbarComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{}}}],["filter",{"_index":290,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{}}}],["filterbyinputcomponent",{"_index":289,"title":{"components/FilterByInputComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{},"coverage.html":{}}}],["filtereditems",{"_index":1554,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["finalvalue",{"_index":1185,"title":{},"body":{"components/DialogCategoryComponent.html":{},"components/DialogProductComponent.html":{}}}],["fit",{"_index":2090,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{}}}],["fixed",{"_index":2051,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{}}}],["flex",{"_index":196,"title":{},"body":{"components/AboutComponent.html":{},"components/CarouselImgComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/UserPageComponent.html":{}}}],["fn",{"_index":1565,"title":{},"body":{"components/FilterByInputComponent.html":{},"miscellaneous/variables.html":{}}}],["following",{"_index":2675,"title":{},"body":{"index.html":{}}}],["font",{"_index":186,"title":{},"body":{"components/AboutComponent.html":{},"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/UserPageComponent.html":{}}}],["fontawesome",{"_index":2618,"title":{},"body":{"dependencies.html":{}}}],["forbidden",{"_index":1055,"title":{},"body":{"injectables/ConfigService.html":{}}}],["forkjoin",{"_index":745,"title":{},"body":{"components/CarouselImgComponent.html":{},"injectables/ImagesRepositoryService.html":{},"injectables/ProductsRepositoryService.html":{},"injectables/ShopCartRepositoryService.html":{}}}],["forkjoin(imagerequests).subscribe(results",{"_index":771,"title":{},"body":{"components/CarouselImgComponent.html":{}}}],["forkjoin(productobservables",{"_index":2227,"title":{},"body":{"injectables/ShopCartRepositoryService.html":{}}}],["forkjoin(requests).pipe",{"_index":1738,"title":{},"body":{"injectables/ImagesRepositoryService.html":{}}}],["form",{"_index":1544,"title":{},"body":{"components/FilterByInputComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/UserPageComponent.html":{}}}],["form[tuicardlarge",{"_index":1800,"title":{},"body":{"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{}}}],["formcontrol",{"_index":1124,"title":{},"body":{"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/UserPageComponent.html":{}}}],["formcontrol(0",{"_index":1333,"title":{},"body":{"components/DialogProductComponent.html":{}}}],["formcontrol(null",{"_index":1126,"title":{},"body":{"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/UserPageComponent.html":{}}}],["formdata",{"_index":1402,"title":{},"body":{"injectables/DpImagesService.html":{}}}],["formdata.append('dpimagetitle",{"_index":1405,"title":{},"body":{"injectables/DpImagesService.html":{}}}],["formdata.append('dpproductid",{"_index":1403,"title":{},"body":{"injectables/DpImagesService.html":{}}}],["formdata.append('file",{"_index":1407,"title":{},"body":{"injectables/DpImagesService.html":{}}}],["formgroup",{"_index":1122,"title":{},"body":{"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/UserPageComponent.html":{}}}],["forms",{"_index":116,"title":{},"body":{"components/AboutComponent.html":{}}}],["formsmodule",{"_index":792,"title":{},"body":{"interfaces/CartItem.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{}}}],["fortawesome/fontawesome",{"_index":2608,"title":{},"body":{"dependencies.html":{}}}],["forwardref",{"_index":1540,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["found",{"_index":1049,"title":{},"body":{"injectables/ConfigService.html":{}}}],["framework",{"_index":130,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["free",{"_index":2609,"title":{},"body":{"dependencies.html":{}}}],["fullscreen",{"_index":2741,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fullscreendiv",{"_index":2048,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{}}}],["fullscreendiv.addeventlistener('click",{"_index":2068,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{}}}],["fullscreendiv.appendchild(img",{"_index":2067,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{}}}],["fullscreendiv.style.alignitems",{"_index":2060,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{}}}],["fullscreendiv.style.backgroundcolor",{"_index":2056,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{}}}],["fullscreendiv.style.display",{"_index":2058,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{}}}],["fullscreendiv.style.height",{"_index":2055,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{}}}],["fullscreendiv.style.justifycontent",{"_index":2059,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{}}}],["fullscreendiv.style.left",{"_index":2053,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{}}}],["fullscreendiv.style.position",{"_index":2050,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{}}}],["fullscreendiv.style.top",{"_index":2052,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{}}}],["fullscreendiv.style.width",{"_index":2054,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{}}}],["fullscreendiv.style.zindex",{"_index":2061,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{}}}],["gap",{"_index":199,"title":{},"body":{"components/AboutComponent.html":{},"components/PageCartComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/UserPageComponent.html":{}}}],["generate",{"_index":2653,"title":{},"body":{"index.html":{}}}],["generated",{"_index":2632,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["get(`${this.baseurl}/completed/${username",{"_index":2402,"title":{},"body":{"injectables/UserAchievementsService.html":{}}}],["getachievementbyid",{"_index":334,"title":{},"body":{"injectables/AchievementsRepositoryService.html":{},"injectables/AchievementsService.html":{}}}],["getachievementbyid(id",{"_index":349,"title":{},"body":{"injectables/AchievementsRepositoryService.html":{},"injectables/AchievementsService.html":{}}}],["getallachievements",{"_index":335,"title":{},"body":{"injectables/AchievementsRepositoryService.html":{},"injectables/AchievementsService.html":{}}}],["getalldpcategories",{"_index":889,"title":{},"body":{"injectables/CategoriesRepositoryService.html":{},"injectables/DpCategoriesService.html":{}}}],["getalldpimages",{"_index":1377,"title":{},"body":{"injectables/DpImagesService.html":{},"injectables/ImagesRepositoryService.html":{}}}],["getalldpimageswithdata",{"_index":1718,"title":{},"body":{"injectables/ImagesRepositoryService.html":{}}}],["getalldpordercompositions",{"_index":1414,"title":{},"body":{"injectables/DpOrderCompositionsService.html":{},"injectables/OrderCompositionsRepositoryService.html":{}}}],["getalldporders",{"_index":1435,"title":{},"body":{"injectables/DpOrdersService.html":{},"injectables/OrderRepositoryService.html":{}}}],["getalldpproductattributes",{"_index":1456,"title":{},"body":{"injectables/DpProductAttributesService.html":{},"injectables/ProductAttributesRepositoryService.html":{}}}],["getalldpsizes",{"_index":1477,"title":{},"body":{"injectables/DpSizesService.html":{},"injectables/SizesRepositoryService.html":{}}}],["getalldpuserprojs",{"_index":1498,"title":{},"body":{"injectables/DpUserProjsService.html":{},"injectables/UserProjsRepositoryService.html":{}}}],["getalldpusers",{"_index":1517,"title":{},"body":{"injectables/DpUsersService.html":{},"injectables/UsersRepositoryService.html":{}}}],["getallproducts",{"_index":2130,"title":{},"body":{"injectables/ProductsRepositoryService.html":{},"injectables/ProductsService.html":{}}}],["getalluserachievements",{"_index":2342,"title":{},"body":{"injectables/UserAchievementsRepositoryService.html":{},"injectables/UserAchievementsService.html":{}}}],["getalwaysfailmode",{"_index":2369,"title":{},"body":{"injectables/UserAchievementsService.html":{},"miscellaneous/variables.html":{}}}],["getcart",{"_index":2199,"title":{},"body":{"injectables/ShopCartRepositoryService.html":{},"injectables/ShopCartService.html":{}}}],["getcartquantity",{"_index":2200,"title":{},"body":{"injectables/ShopCartRepositoryService.html":{},"injectables/ShopCartService.html":{}}}],["getcartquantity(productid",{"_index":2211,"title":{},"body":{"injectables/ShopCartRepositoryService.html":{},"injectables/ShopCartService.html":{}}}],["getclasses",{"_index":637,"title":{},"body":{"components/ButtonComponent.html":{}}}],["getcompletedachievementsbyusername",{"_index":2343,"title":{},"body":{"injectables/UserAchievementsRepositoryService.html":{},"injectables/UserAchievementsService.html":{}}}],["getcompletedachievementsbyusername(username",{"_index":2349,"title":{},"body":{"injectables/UserAchievementsRepositoryService.html":{},"injectables/UserAchievementsService.html":{}}}],["getdata",{"_index":1140,"title":{},"body":{"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{}}}],["getdpcategorybyid",{"_index":890,"title":{},"body":{"injectables/CategoriesRepositoryService.html":{},"injectables/DpCategoriesService.html":{}}}],["getdpcategorybyid(id",{"_index":899,"title":{},"body":{"injectables/CategoriesRepositoryService.html":{},"injectables/DpCategoriesService.html":{}}}],["getdpimagebyid",{"_index":1378,"title":{},"body":{"injectables/DpImagesService.html":{},"injectables/ImagesRepositoryService.html":{}}}],["getdpimagebyid(id",{"_index":1388,"title":{},"body":{"injectables/DpImagesService.html":{},"injectables/ImagesRepositoryService.html":{}}}],["getdpimagedata",{"_index":1379,"title":{},"body":{"injectables/DpImagesService.html":{},"injectables/ImagesRepositoryService.html":{}}}],["getdpimagedata(id",{"_index":1390,"title":{},"body":{"injectables/DpImagesService.html":{},"injectables/ImagesRepositoryService.html":{}}}],["getdpimagesbyproductid",{"_index":1380,"title":{},"body":{"injectables/DpImagesService.html":{},"injectables/ImagesRepositoryService.html":{}}}],["getdpimagesbyproductid(productid",{"_index":1392,"title":{},"body":{"injectables/DpImagesService.html":{},"injectables/ImagesRepositoryService.html":{}}}],["getdporderbyid",{"_index":1436,"title":{},"body":{"injectables/DpOrdersService.html":{},"injectables/OrderRepositoryService.html":{}}}],["getdporderbyid(id",{"_index":1446,"title":{},"body":{"injectables/DpOrdersService.html":{},"injectables/OrderRepositoryService.html":{}}}],["getdpordercompositionbyid",{"_index":1415,"title":{},"body":{"injectables/DpOrderCompositionsService.html":{},"injectables/OrderCompositionsRepositoryService.html":{}}}],["getdpordercompositionbyid(id",{"_index":1425,"title":{},"body":{"injectables/DpOrderCompositionsService.html":{},"injectables/OrderCompositionsRepositoryService.html":{}}}],["getdpproductattributebyid",{"_index":1457,"title":{},"body":{"injectables/DpProductAttributesService.html":{},"injectables/ProductAttributesRepositoryService.html":{}}}],["getdpproductattributebyid(id",{"_index":1467,"title":{},"body":{"injectables/DpProductAttributesService.html":{},"injectables/ProductAttributesRepositoryService.html":{}}}],["getdpsizebyid",{"_index":1478,"title":{},"body":{"injectables/DpSizesService.html":{},"injectables/SizesRepositoryService.html":{}}}],["getdpsizebyid(id",{"_index":1488,"title":{},"body":{"injectables/DpSizesService.html":{},"injectables/SizesRepositoryService.html":{}}}],["getdpuserbyid",{"_index":1518,"title":{},"body":{"injectables/DpUsersService.html":{},"injectables/UsersRepositoryService.html":{}}}],["getdpuserbyid(id",{"_index":1527,"title":{},"body":{"injectables/DpUsersService.html":{},"injectables/UsersRepositoryService.html":{}}}],["getdpuserprojbyid",{"_index":1499,"title":{},"body":{"injectables/DpUserProjsService.html":{},"injectables/UserProjsRepositoryService.html":{}}}],["getdpuserprojbyid(id",{"_index":1508,"title":{},"body":{"injectables/DpUserProjsService.html":{},"injectables/UserProjsRepositoryService.html":{}}}],["getfailedachievementid",{"_index":2370,"title":{},"body":{"injectables/UserAchievementsService.html":{}}}],["getfailedachievementid(successachievementid",{"_index":2380,"title":{},"body":{"injectables/UserAchievementsService.html":{}}}],["getfiltereditems",{"_index":1579,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["gethasvalue",{"_index":1138,"title":{},"body":{"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{}}}],["getimages",{"_index":684,"title":{},"body":{"components/CardItemComponent.html":{},"components/PageItemFromCatalogComponent.html":{}}}],["getproductbyid",{"_index":2131,"title":{},"body":{"injectables/ProductsRepositoryService.html":{},"injectables/ProductsService.html":{}}}],["getproductbyid(id",{"_index":2141,"title":{},"body":{"injectables/ProductsRepositoryService.html":{},"injectables/ProductsService.html":{}}}],["getting",{"_index":2629,"title":{"index.html":{}},"body":{}}],["gettotal",{"_index":838,"title":{},"body":{"interfaces/CartItem.html":{},"components/PageCartComponent.html":{}}}],["gettotal(item",{"_index":1896,"title":{},"body":{"components/PageCartComponent.html":{}}}],["gettotal(undefined",{"_index":1875,"title":{},"body":{"components/PageCartComponent.html":{}}}],["gettotalamount",{"_index":839,"title":{},"body":{"interfaces/CartItem.html":{},"components/PageCartComponent.html":{}}}],["getuserachievement",{"_index":2344,"title":{},"body":{"injectables/UserAchievementsRepositoryService.html":{},"injectables/UserAchievementsService.html":{}}}],["getuserachievement(userprojid",{"_index":2350,"title":{},"body":{"injectables/UserAchievementsRepositoryService.html":{},"injectables/UserAchievementsService.html":{}}}],["goback",{"_index":598,"title":{},"body":{"components/BackButtonComponent.html":{}}}],["guided",{"_index":1973,"title":{},"body":{"components/PageComponent.html":{}}}],["h1",{"_index":1620,"title":{},"body":{"components/HeaderComponent.html":{},"components/UserPageComponent.html":{}}}],["h2",{"_index":1998,"title":{},"body":{"components/PageComponent.html":{}}}],["h3",{"_index":1899,"title":{},"body":{"components/PageCartComponent.html":{}}}],["handleachievement",{"_index":1150,"title":{},"body":{"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/PageCatalogItemComponent.html":{},"injectables/UserAchievementsRepositoryService.html":{},"injectables/UserAchievementsService.html":{},"miscellaneous/variables.html":{}}}],["handleachievement(userprojid",{"_index":474,"title":{},"body":{"components/AchievmentsPageForUserComponent.html":{},"interfaces/CartItem.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/LoginComponent.html":{},"components/PageCartComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserAchievementsRepositoryService.html":{},"injectables/UserAchievementsService.html":{}}}],["handler",{"_index":636,"title":{},"body":{"components/ButtonComponent.html":{}}}],["handy",{"_index":1957,"title":{},"body":{"components/PageComponent.html":{}}}],["hasvalue",{"_index":1091,"title":{},"body":{"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{}}}],["header",{"_index":194,"title":{},"body":{"components/AboutComponent.html":{},"components/HeaderComponent.html":{},"components/PageCartComponent.html":{}}}],["header'},{'name",{"_index":293,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{}}}],["header.component",{"_index":1992,"title":{},"body":{"components/PageComponent.html":{}}}],["header.css",{"_index":252,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/BackButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{}}}],["headercomponent",{"_index":292,"title":{"components/HeaderComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["height",{"_index":191,"title":{},"body":{"components/AboutComponent.html":{},"components/ButtonComponent.html":{},"components/CarouselImgComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/UserPageComponent.html":{}}}],["helpbuilding",{"_index":2658,"title":{},"body":{"index.html":{}}}],["helps",{"_index":1963,"title":{},"body":{"components/PageComponent.html":{}}}],["helvetica",{"_index":652,"title":{},"body":{"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/PageComponent.html":{}}}],["here",{"_index":1956,"title":{},"body":{"components/PageComponent.html":{}}}],["hidden",{"_index":2077,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{}}}],["higher",{"_index":1960,"title":{},"body":{"components/PageComponent.html":{}}}],["host",{"_index":2515,"title":{},"body":{"components/UserPageComponent.html":{}}}],["hover",{"_index":2521,"title":{},"body":{"components/UserPageComponent.html":{}}}],["html",{"_index":259,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{}}}],["htmlinputelement",{"_index":1179,"title":{},"body":{"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{}}}],["http",{"_index":121,"title":{},"body":{"components/AboutComponent.html":{},"injectables/AchievementsService.html":{},"injectables/AuthProjService.html":{},"injectables/AuthService.html":{},"injectables/DpCategoriesService.html":{},"injectables/DpImagesService.html":{},"injectables/DpOrderCompositionsService.html":{},"injectables/DpOrdersService.html":{},"injectables/DpProductAttributesService.html":{},"injectables/DpSizesService.html":{},"injectables/DpUserProjsService.html":{},"injectables/DpUsersService.html":{},"injectables/ProductsService.html":{},"injectables/ShopCartService.html":{},"injectables/UserAchievementsService.html":{}}}],["http://localhost:4200",{"_index":2641,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":122,"title":{},"body":{"components/AboutComponent.html":{},"injectables/AchievementsService.html":{},"injectables/AuthProjService.html":{},"injectables/AuthService.html":{},"injectables/DpCategoriesService.html":{},"injectables/DpImagesService.html":{},"injectables/DpOrderCompositionsService.html":{},"injectables/DpOrdersService.html":{},"injectables/DpProductAttributesService.html":{},"injectables/DpSizesService.html":{},"injectables/DpUserProjsService.html":{},"injectables/DpUsersService.html":{},"injectables/ProductsService.html":{},"injectables/ShopCartService.html":{},"injectables/UserAchievementsService.html":{}}}],["httpclientmodule",{"_index":2721,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://storybook.js.org/docs/configure/story",{"_index":2739,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://storybook.js.org/docs/essentials/actions#action",{"_index":2734,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://storybook.js.org/docs/writing",{"_index":2737,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpstatuscodes",{"_index":913,"title":{},"body":{"injectables/ConfigService.html":{}}}],["iachievement",{"_index":341,"title":{"interfaces/IAchievement.html":{}},"body":{"injectables/AchievementsRepositoryService.html":{},"injectables/AchievementsService.html":{},"components/AchievmentsPageForUserComponent.html":{},"interfaces/IAchievement.html":{},"interfaces/IDpUserProj.html":{},"interfaces/IUserHasAchievement.html":{},"injectables/UserAchievementsRepositoryService.html":{},"injectables/UserAchievementsService.html":{},"coverage.html":{}}}],["iaddtocartrequest",{"_index":1626,"title":{"interfaces/IAddToCartRequest.html":{}},"body":{"interfaces/IAddToCartRequest.html":{},"injectables/ProductsRepositoryService.html":{},"injectables/ProductsService.html":{},"injectables/ShopCartRepositoryService.html":{},"injectables/ShopCartService.html":{},"coverage.html":{}}}],["icartitem",{"_index":787,"title":{"interfaces/ICartItem.html":{}},"body":{"interfaces/CartItem.html":{},"interfaces/ICartItem.html":{},"interfaces/ICartViewModel.html":{},"components/IconTrashComponent.html":{},"components/PageCartComponent.html":{},"coverage.html":{}}}],["icartviewmodel",{"_index":797,"title":{"interfaces/ICartViewModel.html":{}},"body":{"interfaces/CartItem.html":{},"interfaces/ICartViewModel.html":{},"components/PageCartComponent.html":{},"injectables/ShopCartRepositoryService.html":{},"injectables/ShopCartService.html":{},"coverage.html":{}}}],["icon",{"_index":176,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{}}}],["icons.css",{"_index":254,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/BackButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"components/FilterByInputComponent.html":{},"components/IconTrashComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{}}}],["icontrashcomponent",{"_index":294,"title":{"components/IconTrashComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{},"coverage.html":{}}}],["icreatedpimagerequest",{"_index":1214,"title":{"interfaces/ICreateDpImageRequest.html":{}},"body":{"components/DialogImageComponent.html":{},"injectables/DpImagesService.html":{},"interfaces/ICreateDpImageRequest.html":{},"injectables/ImagesRepositoryService.html":{},"coverage.html":{}}}],["id",{"_index":348,"title":{},"body":{"injectables/AchievementsRepositoryService.html":{},"injectables/AchievementsService.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"injectables/CategoriesRepositoryService.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"injectables/DpCategoriesService.html":{},"injectables/DpImagesService.html":{},"injectables/DpOrderCompositionsService.html":{},"injectables/DpOrdersService.html":{},"injectables/DpProductAttributesService.html":{},"injectables/DpSizesService.html":{},"injectables/DpUserProjsService.html":{},"injectables/DpUsersService.html":{},"injectables/ImagesRepositoryService.html":{},"injectables/OrderCompositionsRepositoryService.html":{},"injectables/OrderRepositoryService.html":{},"injectables/ProductAttributesRepositoryService.html":{},"injectables/ProductsRepositoryService.html":{},"injectables/ProductsService.html":{},"injectables/SizesRepositoryService.html":{},"injectables/UserAchievementsService.html":{},"components/UserPageComponent.html":{},"injectables/UserProjsRepositoryService.html":{},"injectables/UsersRepositoryService.html":{}}}],["identifier",{"_index":2556,"title":{},"body":{"coverage.html":{}}}],["idpcategory",{"_index":895,"title":{"interfaces/IDpCategory.html":{}},"body":{"injectables/CategoriesRepositoryService.html":{},"components/DialogCategoryComponent.html":{},"injectables/DpCategoriesService.html":{},"interfaces/IDpCategory.html":{},"interfaces/IDpProduct.html":{},"interfaces/IDpSize.html":{},"components/UserPageComponent.html":{},"coverage.html":{}}}],["idpcategory).subscribe",{"_index":2501,"title":{},"body":{"components/UserPageComponent.html":{}}}],["idpimage",{"_index":689,"title":{"interfaces/IDpImage.html":{}},"body":{"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"components/DialogImageComponent.html":{},"injectables/DpImagesService.html":{},"interfaces/IDpImage.html":{},"interfaces/IDpProduct.html":{},"injectables/ImagesRepositoryService.html":{},"components/PageItemFromCatalogComponent.html":{},"components/UserPageComponent.html":{},"coverage.html":{}}}],["idpimage).subscribe",{"_index":2504,"title":{},"body":{"components/UserPageComponent.html":{}}}],["idporder",{"_index":1440,"title":{"interfaces/IDpOrder.html":{}},"body":{"injectables/DpOrdersService.html":{},"interfaces/IDpOrder.html":{},"interfaces/IDpOrderComposition.html":{},"interfaces/IDpUser.html":{},"injectables/OrderRepositoryService.html":{},"coverage.html":{}}}],["idpordercomposition",{"_index":1419,"title":{"interfaces/IDpOrderComposition.html":{}},"body":{"injectables/DpOrderCompositionsService.html":{},"interfaces/IDpOrderComposition.html":{},"injectables/OrderCompositionsRepositoryService.html":{},"coverage.html":{}}}],["idporderdetail",{"_index":1656,"title":{"interfaces/IDpOrderDetail.html":{}},"body":{"interfaces/IDpOrderDetail.html":{},"injectables/ShopCartService.html":{},"coverage.html":{}}}],["idpproduct",{"_index":680,"title":{"interfaces/IDpProduct.html":{}},"body":{"components/CardItemComponent.html":{},"components/DialogProductComponent.html":{},"interfaces/ICartViewModel.html":{},"interfaces/IDpCategory.html":{},"interfaces/IDpImage.html":{},"interfaces/IDpProduct.html":{},"interfaces/IDpProductAttribute.html":{},"components/PageCatalogItemComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"injectables/ProductsRepositoryService.html":{},"injectables/ProductsService.html":{},"injectables/ShopCartRepositoryService.html":{},"components/UserPageComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["idpproduct).subscribe",{"_index":2493,"title":{},"body":{"components/UserPageComponent.html":{}}}],["idpproductattribute",{"_index":1461,"title":{"interfaces/IDpProductAttribute.html":{}},"body":{"injectables/DpProductAttributesService.html":{},"interfaces/IDpOrderComposition.html":{},"interfaces/IDpProduct.html":{},"interfaces/IDpProductAttribute.html":{},"interfaces/IDpSize.html":{},"injectables/ProductAttributesRepositoryService.html":{},"coverage.html":{}}}],["idpsize",{"_index":1482,"title":{"interfaces/IDpSize.html":{}},"body":{"injectables/DpSizesService.html":{},"interfaces/IDpCategory.html":{},"interfaces/IDpProductAttribute.html":{},"interfaces/IDpSize.html":{},"injectables/SizesRepositoryService.html":{},"coverage.html":{}}}],["idpuser",{"_index":573,"title":{"interfaces/IDpUser.html":{}},"body":{"injectables/AuthRepositoryService.html":{},"injectables/AuthService.html":{},"injectables/DpUsersService.html":{},"interfaces/IDpOrder.html":{},"interfaces/IDpUser.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/UsersRepositoryService.html":{},"coverage.html":{}}}],["idpuserproj",{"_index":518,"title":{"interfaces/IDpUserProj.html":{}},"body":{"injectables/AuthProjRepositoryService.html":{},"injectables/AuthProjService.html":{},"injectables/DpUserProjsService.html":{},"interfaces/IAchievement.html":{},"interfaces/IDpUserProj.html":{},"interfaces/IUserHasAchievement.html":{},"components/LoginProjComponent.html":{},"components/RegisterProjComponent.html":{},"injectables/UserProjsRepositoryService.html":{},"coverage.html":{}}}],["image",{"_index":1021,"title":{},"body":{"injectables/ConfigService.html":{},"components/DialogImageComponent.html":{},"injectables/ImagesRepositoryService.html":{},"components/PageItemFromCatalogComponent.html":{},"components/UserPageComponent.html":{},"miscellaneous/variables.html":{}}}],["image'},{'name",{"_index":286,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{}}}],["image.component",{"_index":2482,"title":{},"body":{"components/UserPageComponent.html":{}}}],["image.component.css",{"_index":1197,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["image.component.html",{"_index":1198,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["image.component.ts",{"_index":1195,"title":{},"body":{"components/DialogImageComponent.html":{},"coverage.html":{}}}],["image.component.ts:112",{"_index":1228,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["image.component.ts:122",{"_index":1223,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["image.component.ts:151",{"_index":1215,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["image.component.ts:197",{"_index":1226,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["image.component.ts:233",{"_index":1221,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["image.component.ts:243",{"_index":1222,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["image.component.ts:40",{"_index":1250,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["image.component.ts:42",{"_index":1229,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["image.component.ts:43",{"_index":1235,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["image.component.ts:44",{"_index":1244,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["image.component.ts:45",{"_index":1252,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["image.component.ts:46",{"_index":1233,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["image.component.ts:47",{"_index":1253,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["image.component.ts:49",{"_index":1234,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["image.component.ts:51",{"_index":1238,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["image.component.ts:52",{"_index":1237,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["image.component.ts:53",{"_index":1246,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["image.component.ts:54",{"_index":1245,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["image.component.ts:56",{"_index":1242,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["image.component.ts:61",{"_index":1251,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["image.component.ts:62",{"_index":1248,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["image.component.ts:63",{"_index":1232,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["image.component.ts:65",{"_index":1254,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["image.component.ts:69",{"_index":1255,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["image.component.ts:73",{"_index":1217,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["image.component.ts:86",{"_index":1220,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["image.component.ts:94",{"_index":1219,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["image.dpimagesid",{"_index":768,"title":{},"body":{"components/CarouselImgComponent.html":{}}}],["image.dpproductid",{"_index":2151,"title":{},"body":{"injectables/ProductsRepositoryService.html":{}}}],["image/dialog",{"_index":1194,"title":{},"body":{"components/DialogImageComponent.html":{},"components/UserPageComponent.html":{},"coverage.html":{}}}],["image/jpeg",{"_index":1230,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["image/png",{"_index":1231,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["imageclick",{"_index":716,"title":{},"body":{"components/CarouselImgComponent.html":{}}}],["imagecontrol",{"_index":1201,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["imagedata",{"_index":1216,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["imagedata).subscribe",{"_index":1303,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["imagedata.dpimagetitle",{"_index":1290,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["imagedata.dpproductid",{"_index":1289,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["imagedialog",{"_index":2443,"title":{},"body":{"components/UserPageComponent.html":{}}}],["imageform",{"_index":1202,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["imagerequests",{"_index":764,"title":{},"body":{"components/CarouselImgComponent.html":{}}}],["images",{"_index":678,"title":{},"body":{"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"injectables/ProductsRepositoryService.html":{},"components/UserPageComponent.html":{}}}],["images.filter(image",{"_index":2150,"title":{},"body":{"injectables/ProductsRepositoryService.html":{}}}],["images.filter(img",{"_index":1743,"title":{},"body":{"injectables/ImagesRepositoryService.html":{}}}],["images.length",{"_index":1734,"title":{},"body":{"injectables/ImagesRepositoryService.html":{}}}],["images.map(image",{"_index":1736,"title":{},"body":{"injectables/ImagesRepositoryService.html":{}}}],["images.service",{"_index":1728,"title":{},"body":{"injectables/ImagesRepositoryService.html":{}}}],["images.service.ts",{"_index":1374,"title":{},"body":{"injectables/DpImagesService.html":{},"coverage.html":{}}}],["images.service.ts:12",{"_index":1382,"title":{},"body":{"injectables/DpImagesService.html":{}}}],["images.service.ts:16",{"_index":1387,"title":{},"body":{"injectables/DpImagesService.html":{}}}],["images.service.ts:21",{"_index":1393,"title":{},"body":{"injectables/DpImagesService.html":{}}}],["images.service.ts:26",{"_index":1389,"title":{},"body":{"injectables/DpImagesService.html":{}}}],["images.service.ts:30",{"_index":1391,"title":{},"body":{"injectables/DpImagesService.html":{}}}],["images.service.ts:34",{"_index":1384,"title":{},"body":{"injectables/DpImagesService.html":{}}}],["images.service.ts:43",{"_index":1395,"title":{},"body":{"injectables/DpImagesService.html":{}}}],["images.service.ts:54",{"_index":1386,"title":{},"body":{"injectables/DpImagesService.html":{}}}],["imagescount",{"_index":1922,"title":{},"body":{"components/PageCatalogItemComponent.html":{}}}],["imagesdata",{"_index":1641,"title":{},"body":{"interfaces/IDpImage.html":{}}}],["imagesdatacache",{"_index":1716,"title":{},"body":{"injectables/ImagesRepositoryService.html":{}}}],["imageslistcache",{"_index":1717,"title":{},"body":{"injectables/ImagesRepositoryService.html":{}}}],["imagesrepository",{"_index":724,"title":{},"body":{"components/CarouselImgComponent.html":{},"injectables/ProductsRepositoryService.html":{},"components/UserPageComponent.html":{}}}],["imagesrepositoryservice",{"_index":718,"title":{"injectables/ImagesRepositoryService.html":{}},"body":{"components/CarouselImgComponent.html":{},"components/DialogImageComponent.html":{},"injectables/ImagesRepositoryService.html":{},"injectables/ProductsRepositoryService.html":{},"components/UserPageComponent.html":{},"coverage.html":{}}}],["imageurl",{"_index":737,"title":{},"body":{"components/CarouselImgComponent.html":{},"components/PageItemFromCatalogComponent.html":{}}}],["imageurls",{"_index":712,"title":{},"body":{"components/CarouselImgComponent.html":{}}}],["img",{"_index":705,"title":{},"body":{"components/CarouselImgComponent.html":{},"components/PageItemFromCatalogComponent.html":{}}}],["img'},{'name",{"_index":281,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{}}}],["img.component",{"_index":688,"title":{},"body":{"components/CardItemComponent.html":{},"components/PageItemFromCatalogComponent.html":{}}}],["img.component.css",{"_index":747,"title":{},"body":{"components/CarouselImgComponent.html":{}}}],["img.component.css,../../../styles/root.css",{"_index":710,"title":{},"body":{"components/CarouselImgComponent.html":{}}}],["img.component.html",{"_index":711,"title":{},"body":{"components/CarouselImgComponent.html":{}}}],["img.component.ts",{"_index":704,"title":{},"body":{"components/CarouselImgComponent.html":{},"coverage.html":{}}}],["img.component.ts:32",{"_index":725,"title":{},"body":{"components/CarouselImgComponent.html":{}}}],["img.component.ts:33",{"_index":726,"title":{},"body":{"components/CarouselImgComponent.html":{}}}],["img.component.ts:34",{"_index":739,"title":{},"body":{"components/CarouselImgComponent.html":{}}}],["img.component.ts:35",{"_index":740,"title":{},"body":{"components/CarouselImgComponent.html":{}}}],["img.component.ts:36",{"_index":723,"title":{},"body":{"components/CarouselImgComponent.html":{}}}],["img.component.ts:44",{"_index":733,"title":{},"body":{"components/CarouselImgComponent.html":{}}}],["img.component.ts:48",{"_index":730,"title":{},"body":{"components/CarouselImgComponent.html":{}}}],["img.component.ts:54",{"_index":732,"title":{},"body":{"components/CarouselImgComponent.html":{}}}],["img.component.ts:63",{"_index":727,"title":{},"body":{"components/CarouselImgComponent.html":{}}}],["img.component.ts:93",{"_index":736,"title":{},"body":{"components/CarouselImgComponent.html":{}}}],["img.dpproductid",{"_index":1744,"title":{},"body":{"injectables/ImagesRepositoryService.html":{}}}],["img.src",{"_index":2064,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{}}}],["img.style.maxheight",{"_index":2066,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{}}}],["img.style.maxwidth",{"_index":2065,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{}}}],["img/carousel",{"_index":687,"title":{},"body":{"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"coverage.html":{}}}],["img:hover",{"_index":2094,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{}}}],["implements",{"_index":390,"title":{},"body":{"components/AchievmentsPageForUserComponent.html":{},"components/CarouselImgComponent.html":{},"interfaces/CartItem.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageItemFromCatalogComponent.html":{}}}],["import",{"_index":74,"title":{},"body":{"components/AboutComponent.html":{},"injectables/AchievementsRepositoryService.html":{},"injectables/AchievementsService.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"injectables/AuthProjRepositoryService.html":{},"injectables/AuthProjService.html":{},"injectables/AuthRepositoryService.html":{},"injectables/AuthService.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"interfaces/CartItem.html":{},"injectables/CategoriesRepositoryService.html":{},"injectables/ConfigService.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"injectables/DpCategoriesService.html":{},"injectables/DpImagesService.html":{},"injectables/DpOrderCompositionsService.html":{},"injectables/DpOrdersService.html":{},"injectables/DpProductAttributesService.html":{},"injectables/DpSizesService.html":{},"injectables/DpUserProjsService.html":{},"injectables/DpUsersService.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IAchievement.html":{},"interfaces/ICartViewModel.html":{},"interfaces/IDpCategory.html":{},"interfaces/IDpImage.html":{},"interfaces/IDpOrder.html":{},"interfaces/IDpOrderComposition.html":{},"interfaces/IDpProduct.html":{},"interfaces/IDpProductAttribute.html":{},"interfaces/IDpSize.html":{},"interfaces/IDpUser.html":{},"interfaces/IDpUserProj.html":{},"interfaces/IUserHasAchievement.html":{},"components/IconTrashComponent.html":{},"injectables/ImagesRepositoryService.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"injectables/OrderCompositionsRepositoryService.html":{},"injectables/OrderRepositoryService.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"injectables/ProductAttributesRepositoryService.html":{},"injectables/ProductsRepositoryService.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"injectables/ShopCartRepositoryService.html":{},"injectables/ShopCartService.html":{},"injectables/SizesRepositoryService.html":{},"components/ThemeToggleComponent.html":{},"injectables/UserAchievementsRepositoryService.html":{},"injectables/UserAchievementsService.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{},"injectables/UserProjsRepositoryService.html":{},"injectables/UsersRepositoryService.html":{}}}],["imports",{"_index":16,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"interfaces/CartItem.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{},"miscellaneous/variables.html":{}}}],["in/i",{"_index":2749,"title":{},"body":{"miscellaneous/variables.html":{}}}],["includes",{"_index":2650,"title":{},"body":{"index.html":{}}}],["including",{"_index":2690,"title":{},"body":{"index.html":{}}}],["increasequantity",{"_index":1867,"title":{},"body":{"components/PageCartComponent.html":{}}}],["increasequantity(item",{"_index":843,"title":{},"body":{"interfaces/CartItem.html":{},"components/PageCartComponent.html":{}}}],["index",{"_index":34,"title":{"index.html":{}},"body":{"components/AboutComponent.html":{},"injectables/AchievementsRepositoryService.html":{},"injectables/AchievementsService.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"injectables/AuthProjRepositoryService.html":{},"injectables/AuthProjService.html":{},"injectables/AuthRepositoryService.html":{},"injectables/AuthService.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"interfaces/CartItem.html":{},"injectables/CategoriesRepositoryService.html":{},"injectables/ConfigService.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"injectables/DpCategoriesService.html":{},"injectables/DpImagesService.html":{},"injectables/DpOrderCompositionsService.html":{},"injectables/DpOrdersService.html":{},"injectables/DpProductAttributesService.html":{},"injectables/DpSizesService.html":{},"injectables/DpUserProjsService.html":{},"injectables/DpUsersService.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IAchievement.html":{},"interfaces/IAddToCartRequest.html":{},"interfaces/ICartItem.html":{},"interfaces/ICartViewModel.html":{},"interfaces/ICreateDpImageRequest.html":{},"interfaces/IDpCategory.html":{},"interfaces/IDpImage.html":{},"interfaces/IDpOrder.html":{},"interfaces/IDpOrderComposition.html":{},"interfaces/IDpOrderDetail.html":{},"interfaces/IDpProduct.html":{},"interfaces/IDpProductAttribute.html":{},"interfaces/IDpSize.html":{},"interfaces/IDpUser.html":{},"interfaces/IDpUserProj.html":{},"interfaces/IRemoveFromCartRequest.html":{},"interfaces/IUpdateCartRequest.html":{},"interfaces/IUpdateDpImageRequest.html":{},"interfaces/IUserHasAchievement.html":{},"components/IconTrashComponent.html":{},"injectables/ImagesRepositoryService.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"injectables/OrderCompositionsRepositoryService.html":{},"injectables/OrderRepositoryService.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"injectables/ProductAttributesRepositoryService.html":{},"injectables/ProductsRepositoryService.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"injectables/ShopCartRepositoryService.html":{},"injectables/ShopCartService.html":{},"injectables/SizesRepositoryService.html":{},"components/ThemeToggleComponent.html":{},"interfaces/User.html":{},"injectables/UserAchievementsRepositoryService.html":{},"injectables/UserAchievementsService.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{},"injectables/UserProjsRepositoryService.html":{},"injectables/UsersRepositoryService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AboutComponent.html":{},"injectables/AchievementsRepositoryService.html":{},"injectables/AchievementsService.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"injectables/AuthProjRepositoryService.html":{},"injectables/AuthProjService.html":{},"injectables/AuthRepositoryService.html":{},"injectables/AuthService.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"interfaces/CartItem.html":{},"injectables/CategoriesRepositoryService.html":{},"injectables/ConfigService.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"injectables/DpCategoriesService.html":{},"injectables/DpImagesService.html":{},"injectables/DpOrderCompositionsService.html":{},"injectables/DpOrdersService.html":{},"injectables/DpProductAttributesService.html":{},"injectables/DpSizesService.html":{},"injectables/DpUserProjsService.html":{},"injectables/DpUsersService.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IAchievement.html":{},"interfaces/IAddToCartRequest.html":{},"interfaces/ICartItem.html":{},"interfaces/ICartViewModel.html":{},"interfaces/ICreateDpImageRequest.html":{},"interfaces/IDpCategory.html":{},"interfaces/IDpImage.html":{},"interfaces/IDpOrder.html":{},"interfaces/IDpOrderComposition.html":{},"interfaces/IDpOrderDetail.html":{},"interfaces/IDpProduct.html":{},"interfaces/IDpProductAttribute.html":{},"interfaces/IDpSize.html":{},"interfaces/IDpUser.html":{},"interfaces/IDpUserProj.html":{},"interfaces/IRemoveFromCartRequest.html":{},"interfaces/IUpdateCartRequest.html":{},"interfaces/IUpdateDpImageRequest.html":{},"interfaces/IUserHasAchievement.html":{},"components/IconTrashComponent.html":{},"injectables/ImagesRepositoryService.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"injectables/OrderCompositionsRepositoryService.html":{},"injectables/OrderRepositoryService.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"injectables/ProductAttributesRepositoryService.html":{},"injectables/ProductsRepositoryService.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"injectables/ShopCartRepositoryService.html":{},"injectables/ShopCartService.html":{},"injectables/SizesRepositoryService.html":{},"components/ThemeToggleComponent.html":{},"interfaces/User.html":{},"injectables/UserAchievementsRepositoryService.html":{},"injectables/UserAchievementsService.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{},"injectables/UserProjsRepositoryService.html":{},"injectables/UsersRepositoryService.html":{}}}],["information",{"_index":2689,"title":{},"body":{"index.html":{}}}],["inherit",{"_index":2001,"title":{},"body":{"components/PageComponent.html":{}}}],["inject",{"_index":76,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"components/CardItemComponent.html":{},"interfaces/CartItem.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{}}}],["inject(achievementsrepositoryservice",{"_index":444,"title":{},"body":{"components/AchievmentsPageForUserComponent.html":{}}}],["inject(authprojservice",{"_index":422,"title":{},"body":{"components/AchievmentsPageForUserComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{}}}],["inject(categoriesrepositoryservice",{"_index":1120,"title":{},"body":{"components/DialogCategoryComponent.html":{}}}],["inject(configservice",{"_index":68,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageProjComponent.html":{}}}],["inject(imagesrepositoryservice",{"_index":1243,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["inject(productsrepositoryservice",{"_index":1340,"title":{},"body":{"components/DialogProductComponent.html":{}}}],["inject(router",{"_index":427,"title":{},"body":{"components/AchievmentsPageForUserComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{}}}],["inject(tui_dark_mode",{"_index":506,"title":{},"body":{"components/AppComponent.html":{},"components/ThemeToggleComponent.html":{}}}],["inject(tui_dark_mode_key",{"_index":2301,"title":{},"body":{"components/ThemeToggleComponent.html":{}}}],["inject(tuialertservice",{"_index":66,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/CartItem.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{}}}],["inject(tuidialogservice",{"_index":1134,"title":{},"body":{"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/UserPageComponent.html":{}}}],["inject(userachievementsrepositoryservice",{"_index":429,"title":{},"body":{"components/AchievmentsPageForUserComponent.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageProjComponent.html":{}}}],["inject(userachievementsservice",{"_index":72,"title":{},"body":{"components/AboutComponent.html":{},"components/CardItemComponent.html":{},"interfaces/CartItem.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/RegisterComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageProjComponent.html":{}}}],["inject(wa_local_storage",{"_index":2306,"title":{},"body":{"components/ThemeToggleComponent.html":{}}}],["inject(wa_window).matchmedia('(prefers",{"_index":2303,"title":{},"body":{"components/ThemeToggleComponent.html":{}}}],["injectable",{"_index":327,"title":{"injectables/AchievementsRepositoryService.html":{},"injectables/AchievementsService.html":{},"injectables/AuthProjRepositoryService.html":{},"injectables/AuthProjService.html":{},"injectables/AuthRepositoryService.html":{},"injectables/AuthService.html":{},"injectables/CategoriesRepositoryService.html":{},"injectables/ConfigService.html":{},"injectables/DpCategoriesService.html":{},"injectables/DpImagesService.html":{},"injectables/DpOrderCompositionsService.html":{},"injectables/DpOrdersService.html":{},"injectables/DpProductAttributesService.html":{},"injectables/DpSizesService.html":{},"injectables/DpUserProjsService.html":{},"injectables/DpUsersService.html":{},"injectables/ImagesRepositoryService.html":{},"injectables/OrderCompositionsRepositoryService.html":{},"injectables/OrderRepositoryService.html":{},"injectables/ProductAttributesRepositoryService.html":{},"injectables/ProductsRepositoryService.html":{},"injectables/ProductsService.html":{},"injectables/ShopCartRepositoryService.html":{},"injectables/ShopCartService.html":{},"injectables/SizesRepositoryService.html":{},"injectables/UserAchievementsRepositoryService.html":{},"injectables/UserAchievementsService.html":{},"injectables/UserProjsRepositoryService.html":{},"injectables/UsersRepositoryService.html":{}},"body":{"injectables/AchievementsRepositoryService.html":{},"injectables/AchievementsService.html":{},"injectables/AuthProjRepositoryService.html":{},"injectables/AuthProjService.html":{},"injectables/AuthRepositoryService.html":{},"injectables/AuthService.html":{},"injectables/CategoriesRepositoryService.html":{},"injectables/ConfigService.html":{},"injectables/DpCategoriesService.html":{},"injectables/DpImagesService.html":{},"injectables/DpOrderCompositionsService.html":{},"injectables/DpOrdersService.html":{},"injectables/DpProductAttributesService.html":{},"injectables/DpSizesService.html":{},"injectables/DpUserProjsService.html":{},"injectables/DpUsersService.html":{},"injectables/ImagesRepositoryService.html":{},"injectables/OrderCompositionsRepositoryService.html":{},"injectables/OrderRepositoryService.html":{},"injectables/ProductAttributesRepositoryService.html":{},"injectables/ProductsRepositoryService.html":{},"injectables/ProductsService.html":{},"injectables/ShopCartRepositoryService.html":{},"injectables/ShopCartService.html":{},"injectables/SizesRepositoryService.html":{},"injectables/UserAchievementsRepositoryService.html":{},"injectables/UserAchievementsService.html":{},"injectables/UserProjsRepositoryService.html":{},"injectables/UsersRepositoryService.html":{},"coverage.html":{}}}],["injectables",{"_index":329,"title":{},"body":{"injectables/AchievementsRepositoryService.html":{},"injectables/AchievementsService.html":{},"injectables/AuthProjRepositoryService.html":{},"injectables/AuthProjService.html":{},"injectables/AuthRepositoryService.html":{},"injectables/AuthService.html":{},"injectables/CategoriesRepositoryService.html":{},"injectables/ConfigService.html":{},"injectables/DpCategoriesService.html":{},"injectables/DpImagesService.html":{},"injectables/DpOrderCompositionsService.html":{},"injectables/DpOrdersService.html":{},"injectables/DpProductAttributesService.html":{},"injectables/DpSizesService.html":{},"injectables/DpUserProjsService.html":{},"injectables/DpUsersService.html":{},"injectables/ImagesRepositoryService.html":{},"injectables/OrderCompositionsRepositoryService.html":{},"injectables/OrderRepositoryService.html":{},"injectables/ProductAttributesRepositoryService.html":{},"injectables/ProductsRepositoryService.html":{},"injectables/ProductsService.html":{},"injectables/ShopCartRepositoryService.html":{},"injectables/ShopCartService.html":{},"injectables/SizesRepositoryService.html":{},"injectables/UserAchievementsRepositoryService.html":{},"injectables/UserAchievementsService.html":{},"injectables/UserProjsRepositoryService.html":{},"injectables/UsersRepositoryService.html":{},"overview.html":{}}}],["injectcontext",{"_index":486,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{}}}],["inline",{"_index":646,"title":{},"body":{"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/PageComponent.html":{}}}],["innervalue",{"_index":1545,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["input",{"_index":639,"title":{},"body":{"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/PageCartComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/UserPageComponent.html":{}}}],["input'},{'name",{"_index":291,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{}}}],["input.component.css",{"_index":1581,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["input.component.css,../../../styles/root.css",{"_index":1542,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["input.component.html",{"_index":1543,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["input.component.ts",{"_index":1534,"title":{},"body":{"components/FilterByInputComponent.html":{},"coverage.html":{}}}],["input.component.ts:27",{"_index":1558,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["input.component.ts:28",{"_index":1556,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["input.component.ts:29",{"_index":1559,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["input.component.ts:31",{"_index":1575,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["input.component.ts:35",{"_index":1576,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["input.component.ts:37",{"_index":1580,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["input.component.ts:41",{"_index":1555,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["input.component.ts:51",{"_index":1562,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["input.component.ts:59",{"_index":1572,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["input.component.ts:64",{"_index":1564,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["input.component.ts:68",{"_index":1567,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["input.component.ts:72",{"_index":1569,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["input.component.ts:80",{"_index":1577,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["input.component.ts:81",{"_index":1578,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["input.files",{"_index":1270,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["input.files.length",{"_index":1271,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["input.files[0",{"_index":1272,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["input.value",{"_index":1187,"title":{},"body":{"components/DialogCategoryComponent.html":{},"components/DialogProductComponent.html":{}}}],["input.value.replace(/[^a",{"_index":1181,"title":{},"body":{"components/DialogCategoryComponent.html":{}}}],["input/filter",{"_index":1533,"title":{},"body":{"components/FilterByInputComponent.html":{},"coverage.html":{}}}],["inputchar",{"_index":1590,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["inputs",{"_index":615,"title":{},"body":{"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{}}}],["inset",{"_index":661,"title":{},"body":{"components/ButtonComponent.html":{}}}],["interface",{"_index":780,"title":{"interfaces/CartItem.html":{},"interfaces/IAchievement.html":{},"interfaces/IAddToCartRequest.html":{},"interfaces/ICartItem.html":{},"interfaces/ICartViewModel.html":{},"interfaces/ICreateDpImageRequest.html":{},"interfaces/IDpCategory.html":{},"interfaces/IDpImage.html":{},"interfaces/IDpOrder.html":{},"interfaces/IDpOrderComposition.html":{},"interfaces/IDpOrderDetail.html":{},"interfaces/IDpProduct.html":{},"interfaces/IDpProductAttribute.html":{},"interfaces/IDpSize.html":{},"interfaces/IDpUser.html":{},"interfaces/IDpUserProj.html":{},"interfaces/IRemoveFromCartRequest.html":{},"interfaces/IUpdateCartRequest.html":{},"interfaces/IUpdateDpImageRequest.html":{},"interfaces/IUserHasAchievement.html":{},"interfaces/User.html":{}},"body":{"interfaces/CartItem.html":{},"interfaces/IAchievement.html":{},"interfaces/IAddToCartRequest.html":{},"interfaces/ICartItem.html":{},"interfaces/ICartViewModel.html":{},"interfaces/ICreateDpImageRequest.html":{},"interfaces/IDpCategory.html":{},"interfaces/IDpImage.html":{},"interfaces/IDpOrder.html":{},"interfaces/IDpOrderComposition.html":{},"interfaces/IDpOrderDetail.html":{},"interfaces/IDpProduct.html":{},"interfaces/IDpProductAttribute.html":{},"interfaces/IDpSize.html":{},"interfaces/IDpUser.html":{},"interfaces/IDpUserProj.html":{},"interfaces/IRemoveFromCartRequest.html":{},"interfaces/IUpdateCartRequest.html":{},"interfaces/IUpdateDpImageRequest.html":{},"interfaces/IUserHasAchievement.html":{},"components/PageCartComponent.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["interface/iachievement",{"_index":354,"title":{},"body":{"injectables/AchievementsRepositoryService.html":{},"injectables/AchievementsService.html":{},"components/AchievmentsPageForUserComponent.html":{},"injectables/UserAchievementsRepositoryService.html":{},"injectables/UserAchievementsService.html":{}}}],["interface/iaddtocartrequest",{"_index":2145,"title":{},"body":{"injectables/ProductsRepositoryService.html":{},"injectables/ProductsService.html":{},"injectables/ShopCartRepositoryService.html":{},"injectables/ShopCartService.html":{}}}],["interface/icartitem",{"_index":796,"title":{},"body":{"interfaces/CartItem.html":{},"components/IconTrashComponent.html":{},"components/PageCartComponent.html":{}}}],["interface/icartviewmodel",{"_index":798,"title":{},"body":{"interfaces/CartItem.html":{},"components/PageCartComponent.html":{},"injectables/ShopCartRepositoryService.html":{},"injectables/ShopCartService.html":{}}}],["interface/icreatedpimagerequest",{"_index":1257,"title":{},"body":{"components/DialogImageComponent.html":{},"injectables/DpImagesService.html":{},"injectables/ImagesRepositoryService.html":{}}}],["interface/idpcategory",{"_index":902,"title":{},"body":{"injectables/CategoriesRepositoryService.html":{},"components/DialogCategoryComponent.html":{},"injectables/DpCategoriesService.html":{},"components/UserPageComponent.html":{}}}],["interface/idpimage",{"_index":690,"title":{},"body":{"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"components/DialogImageComponent.html":{},"injectables/DpImagesService.html":{},"injectables/ImagesRepositoryService.html":{},"components/PageItemFromCatalogComponent.html":{},"components/UserPageComponent.html":{}}}],["interface/idporder",{"_index":1451,"title":{},"body":{"injectables/DpOrdersService.html":{},"injectables/OrderRepositoryService.html":{}}}],["interface/idpordercomposition",{"_index":1430,"title":{},"body":{"injectables/DpOrderCompositionsService.html":{},"injectables/OrderCompositionsRepositoryService.html":{}}}],["interface/idporderdetail",{"_index":2268,"title":{},"body":{"injectables/ShopCartService.html":{}}}],["interface/idpproduct",{"_index":686,"title":{},"body":{"components/CardItemComponent.html":{},"components/DialogProductComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"injectables/ProductsRepositoryService.html":{},"injectables/ProductsService.html":{},"injectables/ShopCartRepositoryService.html":{},"components/UserPageComponent.html":{}}}],["interface/idpproductattribute",{"_index":1472,"title":{},"body":{"injectables/DpProductAttributesService.html":{},"injectables/ProductAttributesRepositoryService.html":{}}}],["interface/idpsize",{"_index":1493,"title":{},"body":{"injectables/DpSizesService.html":{},"injectables/SizesRepositoryService.html":{}}}],["interface/idpuser",{"_index":575,"title":{},"body":{"injectables/AuthRepositoryService.html":{},"injectables/AuthService.html":{},"injectables/DpUsersService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/UsersRepositoryService.html":{}}}],["interface/idpuserproj",{"_index":524,"title":{},"body":{"injectables/AuthProjRepositoryService.html":{},"injectables/AuthProjService.html":{},"injectables/DpUserProjsService.html":{},"components/LoginProjComponent.html":{},"components/RegisterProjComponent.html":{},"injectables/UserProjsRepositoryService.html":{}}}],["interface/iremovefromcartrequest",{"_index":2217,"title":{},"body":{"injectables/ShopCartRepositoryService.html":{},"injectables/ShopCartService.html":{}}}],["interface/iupdatecartrequest",{"_index":800,"title":{},"body":{"interfaces/CartItem.html":{},"components/PageCartComponent.html":{},"injectables/ShopCartRepositoryService.html":{},"injectables/ShopCartService.html":{}}}],["interface/iupdatedpimagerequest",{"_index":1258,"title":{},"body":{"components/DialogImageComponent.html":{},"injectables/DpImagesService.html":{},"injectables/ImagesRepositoryService.html":{}}}],["interface/iuserhasachievement",{"_index":2356,"title":{},"body":{"injectables/UserAchievementsRepositoryService.html":{},"injectables/UserAchievementsService.html":{}}}],["interfaces",{"_index":782,"title":{},"body":{"interfaces/CartItem.html":{},"interfaces/IAchievement.html":{},"interfaces/IAddToCartRequest.html":{},"interfaces/ICartItem.html":{},"interfaces/ICartViewModel.html":{},"interfaces/ICreateDpImageRequest.html":{},"interfaces/IDpCategory.html":{},"interfaces/IDpImage.html":{},"interfaces/IDpOrder.html":{},"interfaces/IDpOrderComposition.html":{},"interfaces/IDpOrderDetail.html":{},"interfaces/IDpProduct.html":{},"interfaces/IDpProductAttribute.html":{},"interfaces/IDpSize.html":{},"interfaces/IDpUser.html":{},"interfaces/IDpUserProj.html":{},"interfaces/IRemoveFromCartRequest.html":{},"interfaces/IUpdateCartRequest.html":{},"interfaces/IUpdateDpImageRequest.html":{},"interfaces/IUserHasAchievement.html":{},"interfaces/User.html":{},"overview.html":{}}}],["invoked",{"_index":2733,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iremovefromcartrequest",{"_index":1683,"title":{"interfaces/IRemoveFromCartRequest.html":{}},"body":{"interfaces/IRemoveFromCartRequest.html":{},"injectables/ShopCartRepositoryService.html":{},"injectables/ShopCartService.html":{},"coverage.html":{}}}],["isauthenticated",{"_index":531,"title":{},"body":{"injectables/AuthProjService.html":{},"injectables/AuthService.html":{},"components/NavbarComponent.html":{},"components/UserPageComponent.html":{}}}],["isauthenticatedsubject",{"_index":532,"title":{},"body":{"injectables/AuthProjService.html":{},"injectables/AuthService.html":{}}}],["iscompleted",{"_index":407,"title":{},"body":{"components/AchievmentsPageForUserComponent.html":{}}}],["iscompleted(achievementid",{"_index":415,"title":{},"body":{"components/AchievmentsPageForUserComponent.html":{}}}],["isdisabled",{"_index":1570,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["isloading",{"_index":815,"title":{},"body":{"interfaces/CartItem.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{}}}],["isobtained",{"_index":1689,"title":{},"body":{"interfaces/IUserHasAchievement.html":{}}}],["isprojauthenticated",{"_index":402,"title":{},"body":{"components/AchievmentsPageForUserComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{}}}],["issuccess",{"_index":2535,"title":{},"body":{"components/UserPageProjComponent.html":{}}}],["item",{"_index":312,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"interfaces/CartItem.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"injectables/ShopCartRepositoryService.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{},"coverage.html":{}}}],["item'},{'name",{"_index":278,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{}}}],["item.component",{"_index":1915,"title":{},"body":{"components/PageCatalogItemComponent.html":{}}}],["item.component.css",{"_index":691,"title":{},"body":{"components/CardItemComponent.html":{},"components/PageCatalogItemComponent.html":{}}}],["item.component.css,../../../styles/root.css",{"_index":674,"title":{},"body":{"components/CardItemComponent.html":{},"components/PageCatalogItemComponent.html":{}}}],["item.component.html",{"_index":675,"title":{},"body":{"components/CardItemComponent.html":{},"components/PageCatalogItemComponent.html":{}}}],["item.component.ts",{"_index":672,"title":{},"body":{"components/CardItemComponent.html":{},"components/PageCatalogItemComponent.html":{},"coverage.html":{}}}],["item.component.ts:22",{"_index":1913,"title":{},"body":{"components/PageCatalogItemComponent.html":{}}}],["item.component.ts:23",{"_index":1907,"title":{},"body":{"components/PageCatalogItemComponent.html":{}}}],["item.component.ts:25",{"_index":679,"title":{},"body":{"components/CardItemComponent.html":{}}}],["item.component.ts:34",{"_index":685,"title":{},"body":{"components/CardItemComponent.html":{},"components/PageCatalogItemComponent.html":{}}}],["item.component.ts:38",{"_index":682,"title":{},"body":{"components/CardItemComponent.html":{},"components/PageCatalogItemComponent.html":{}}}],["item.component.ts:61",{"_index":1910,"title":{},"body":{"components/PageCatalogItemComponent.html":{}}}],["item.component.ts:95",{"_index":1912,"title":{},"body":{"components/PageCatalogItemComponent.html":{}}}],["item.includes(value",{"_index":1585,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["item.price",{"_index":1895,"title":{},"body":{"components/PageCartComponent.html":{}}}],["item.productid",{"_index":852,"title":{},"body":{"interfaces/CartItem.html":{},"components/PageCartComponent.html":{},"injectables/ShopCartRepositoryService.html":{}}}],["item.producttitle",{"_index":1894,"title":{},"body":{"components/PageCartComponent.html":{}}}],["item.quantity",{"_index":845,"title":{},"body":{"interfaces/CartItem.html":{},"components/PageCartComponent.html":{},"injectables/ShopCartRepositoryService.html":{}}}],["item.sizeid",{"_index":854,"title":{},"body":{"interfaces/CartItem.html":{},"components/PageCartComponent.html":{},"injectables/ShopCartRepositoryService.html":{}}}],["item.stories.ts",{"_index":2592,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["item/card",{"_index":671,"title":{},"body":{"components/CardItemComponent.html":{},"components/PageCatalogItemComponent.html":{},"coverage.html":{}}}],["item/page",{"_index":1903,"title":{},"body":{"components/PageCatalogItemComponent.html":{},"coverage.html":{}}}],["itemindex",{"_index":2235,"title":{},"body":{"injectables/ShopCartRepositoryService.html":{}}}],["items",{"_index":197,"title":{},"body":{"components/AboutComponent.html":{},"components/CarouselImgComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"injectables/ShopCartRepositoryService.html":{},"components/UserPageComponent.html":{}}}],["iupdatecartrequest",{"_index":799,"title":{"interfaces/IUpdateCartRequest.html":{}},"body":{"interfaces/CartItem.html":{},"interfaces/IUpdateCartRequest.html":{},"components/PageCartComponent.html":{},"injectables/ShopCartRepositoryService.html":{},"injectables/ShopCartService.html":{},"coverage.html":{}}}],["iupdatedpimagerequest",{"_index":1225,"title":{"interfaces/IUpdateDpImageRequest.html":{}},"body":{"components/DialogImageComponent.html":{},"injectables/DpImagesService.html":{},"interfaces/IUpdateDpImageRequest.html":{},"injectables/ImagesRepositoryService.html":{},"coverage.html":{}}}],["iuserhasachievement",{"_index":1687,"title":{"interfaces/IUserHasAchievement.html":{}},"body":{"interfaces/IUserHasAchievement.html":{},"injectables/UserAchievementsRepositoryService.html":{},"injectables/UserAchievementsService.html":{},"coverage.html":{}}}],["jane",{"_index":1994,"title":{},"body":{"components/PageComponent.html":{},"miscellaneous/variables.html":{}}}],["jpeg",{"_index":1283,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["json.parse(atob(projtoken.split('.')[1",{"_index":451,"title":{},"body":{"components/AchievmentsPageForUserComponent.html":{}}}],["json.parse(localstorage.getitem(this.cartkey",{"_index":2220,"title":{},"body":{"injectables/ShopCartRepositoryService.html":{}}}],["json.stringify(cart",{"_index":2242,"title":{},"body":{"injectables/ShopCartRepositoryService.html":{}}}],["json.stringify(data",{"_index":2495,"title":{},"body":{"components/UserPageComponent.html":{}}}],["justify",{"_index":221,"title":{},"body":{"components/AboutComponent.html":{},"components/CarouselImgComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{}}}],["jwt",{"_index":123,"title":{},"body":{"components/AboutComponent.html":{}}}],["k",{"_index":880,"title":{},"body":{"interfaces/CartItem.html":{},"components/PageCartComponent.html":{}}}],["karma",{"_index":2672,"title":{},"body":{"index.html":{}}}],["key",{"_index":748,"title":{},"body":{"components/CarouselImgComponent.html":{},"interfaces/CartItem.html":{},"components/PageCartComponent.html":{},"components/ThemeToggleComponent.html":{},"injectables/UserAchievementsService.html":{}}}],["keyboardevent",{"_index":1561,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["keyframes",{"_index":2113,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{}}}],["label",{"_index":614,"title":{},"body":{"components/ButtonComponent.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/IconTrashComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/UserPageComponent.html":{},"miscellaneous/variables.html":{}}}],["label.always",{"_index":1845,"title":{},"body":{"components/NavbarComponent.html":{}}}],["large",{"_index":631,"title":{},"body":{"components/ButtonComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["layout",{"_index":2740,"title":{},"body":{"miscellaneous/variables.html":{}}}],["layout.css",{"_index":255,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/BackButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"components/FilterByInputComponent.html":{},"components/IconTrashComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{}}}],["left",{"_index":177,"title":{},"body":{"components/AboutComponent.html":{},"components/HeaderComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{}}}],["legend",{"_index":258,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{}}}],["level",{"_index":1961,"title":{},"body":{"components/PageComponent.html":{}}}],["li",{"_index":210,"title":{},"body":{"components/AboutComponent.html":{},"components/PageComponent.html":{}}}],["li::before",{"_index":212,"title":{},"body":{"components/AboutComponent.html":{}}}],["line",{"_index":190,"title":{},"body":{"components/AboutComponent.html":{},"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/UserPageComponent.html":{}}}],["list",{"_index":207,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["literal",{"_index":738,"title":{},"body":{"components/CarouselImgComponent.html":{}}}],["loadcartitems",{"_index":825,"title":{},"body":{"interfaces/CartItem.html":{},"components/PageCartComponent.html":{}}}],["loadedimage",{"_index":1203,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["loadimageurls",{"_index":713,"title":{},"body":{"components/CarouselImgComponent.html":{}}}],["loading",{"_index":1757,"title":{},"body":{"components/LoadingComponent.html":{},"components/PageCatalogItemComponent.html":{}}}],["loading'},{'name",{"_index":297,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{}}}],["loading.component.css",{"_index":1759,"title":{},"body":{"components/LoadingComponent.html":{}}}],["loading.component.html",{"_index":1758,"title":{},"body":{"components/LoadingComponent.html":{}}}],["loading.gif",{"_index":1760,"title":{},"body":{"components/LoadingComponent.html":{}}}],["loadingcomponent",{"_index":296,"title":{"components/LoadingComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{},"coverage.html":{}}}],["loadingimage",{"_index":1204,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["loadproductinfo",{"_index":1032,"title":{},"body":{"injectables/ConfigService.html":{},"components/PageItemFromCatalogComponent.html":{}}}],["loadproductinfofailed",{"_index":993,"title":{},"body":{"injectables/ConfigService.html":{}}}],["loadproductinfosuccess",{"_index":940,"title":{},"body":{"injectables/ConfigService.html":{}}}],["loadproducts",{"_index":1030,"title":{},"body":{"injectables/ConfigService.html":{},"components/PageCatalogItemComponent.html":{}}}],["loadproducts(userprojid",{"_index":1909,"title":{},"body":{"components/PageCatalogItemComponent.html":{}}}],["loadproductsfailed",{"_index":991,"title":{},"body":{"injectables/ConfigService.html":{}}}],["loadproductsorfail",{"_index":1904,"title":{},"body":{"components/PageCatalogItemComponent.html":{}}}],["loadproductssuccess",{"_index":938,"title":{},"body":{"injectables/ConfigService.html":{}}}],["local",{"_index":2636,"title":{},"body":{"index.html":{}}}],["localstorage",{"_index":2222,"title":{},"body":{"injectables/ShopCartRepositoryService.html":{}}}],["localstorage.getitem('projtoken",{"_index":447,"title":{},"body":{"components/AchievmentsPageForUserComponent.html":{},"injectables/AuthProjService.html":{},"components/UserPageComponent.html":{}}}],["localstorage.getitem('token",{"_index":1840,"title":{},"body":{"components/NavbarComponent.html":{}}}],["localstorage.getitem(userachievementsservice.always_fail_key",{"_index":2395,"title":{},"body":{"injectables/UserAchievementsService.html":{}}}],["localstorage.removeitem('projtoken",{"_index":566,"title":{},"body":{"injectables/AuthProjService.html":{},"components/UserPageComponent.html":{}}}],["localstorage.removeitem('token",{"_index":567,"title":{},"body":{"injectables/AuthProjService.html":{},"injectables/AuthService.html":{},"components/NavbarComponent.html":{}}}],["localstorage.removeitem('userprojid",{"_index":568,"title":{},"body":{"injectables/AuthProjService.html":{},"components/UserPageComponent.html":{}}}],["localstorage.removeitem(this.cartkey",{"_index":2256,"title":{},"body":{"injectables/ShopCartRepositoryService.html":{}}}],["localstorage.setitem('projtoken",{"_index":558,"title":{},"body":{"injectables/AuthProjService.html":{}}}],["localstorage.setitem('token",{"_index":593,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["localstorage.setitem('userprojid",{"_index":559,"title":{},"body":{"injectables/AuthProjService.html":{}}}],["localstorage.setitem(this.cartkey",{"_index":2241,"title":{},"body":{"injectables/ShopCartRepositoryService.html":{}}}],["localstorage.setitem(userachievementsservice.always_fail_key",{"_index":2394,"title":{},"body":{"injectables/UserAchievementsService.html":{}}}],["location",{"_index":600,"title":{},"body":{"components/BackButtonComponent.html":{}}}],["log",{"_index":2748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loggedin",{"_index":2596,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["loggedout",{"_index":2597,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["login",{"_index":301,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"injectables/AuthProjRepositoryService.html":{},"injectables/AuthProjService.html":{},"injectables/AuthRepositoryService.html":{},"injectables/AuthService.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"injectables/ConfigService.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IDpUserProj.html":{},"components/IconTrashComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{}}}],["login'},{'name",{"_index":299,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{}}}],["login(user",{"_index":572,"title":{},"body":{"injectables/AuthRepositoryService.html":{},"injectables/AuthService.html":{}}}],["login(userproj",{"_index":517,"title":{},"body":{"injectables/AuthProjRepositoryService.html":{},"injectables/AuthProjService.html":{}}}],["login.component.css",{"_index":1782,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.css,../../../styles/root.css",{"_index":1769,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":1770,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginbutton",{"_index":2746,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logincomponent",{"_index":298,"title":{"components/LoginComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{},"coverage.html":{}}}],["loginfailed",{"_index":961,"title":{},"body":{"injectables/ConfigService.html":{}}}],["loginprojcomponent",{"_index":300,"title":{"components/LoginProjComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{},"coverage.html":{}}}],["loginsuccess",{"_index":915,"title":{},"body":{"injectables/ConfigService.html":{}}}],["logout",{"_index":514,"title":{},"body":{"injectables/AuthProjRepositoryService.html":{},"injectables/AuthProjService.html":{},"injectables/AuthRepositoryService.html":{},"injectables/AuthService.html":{},"components/NavbarComponent.html":{}}}],["logoutattempt",{"_index":403,"title":{},"body":{"components/AchievmentsPageForUserComponent.html":{},"components/UserPageProjComponent.html":{}}}],["logoutbutton",{"_index":2754,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logoutproj",{"_index":1038,"title":{},"body":{"injectables/ConfigService.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{}}}],["logoutprojfailed",{"_index":997,"title":{},"body":{"injectables/ConfigService.html":{}}}],["logoutprojsuccess",{"_index":953,"title":{},"body":{"injectables/ConfigService.html":{}}}],["makes",{"_index":1948,"title":{},"body":{"components/PageComponent.html":{}}}],["managing",{"_index":1959,"title":{},"body":{"components/PageComponent.html":{}}}],["map",{"_index":746,"title":{},"body":{"components/CarouselImgComponent.html":{},"injectables/ImagesRepositoryService.html":{},"injectables/ProductsRepositoryService.html":{},"injectables/ShopCartRepositoryService.html":{}}}],["map((products",{"_index":2229,"title":{},"body":{"injectables/ShopCartRepositoryService.html":{}}}],["map((results",{"_index":1739,"title":{},"body":{"injectables/ImagesRepositoryService.html":{}}}],["map(blob",{"_index":767,"title":{},"body":{"components/CarouselImgComponent.html":{},"injectables/ImagesRepositoryService.html":{}}}],["map(images",{"_index":1742,"title":{},"body":{"injectables/ImagesRepositoryService.html":{},"injectables/ProductsRepositoryService.html":{}}}],["margin",{"_index":149,"title":{},"body":{"components/AboutComponent.html":{},"components/HeaderComponent.html":{},"components/PageCartComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/UserPageComponent.html":{}}}],["matching",{"_index":326,"title":{},"body":{"components/AboutComponent.html":{},"injectables/AchievementsRepositoryService.html":{},"injectables/AchievementsService.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"injectables/AuthProjRepositoryService.html":{},"injectables/AuthProjService.html":{},"injectables/AuthRepositoryService.html":{},"injectables/AuthService.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"interfaces/CartItem.html":{},"injectables/CategoriesRepositoryService.html":{},"injectables/ConfigService.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"injectables/DpCategoriesService.html":{},"injectables/DpImagesService.html":{},"injectables/DpOrderCompositionsService.html":{},"injectables/DpOrdersService.html":{},"injectables/DpProductAttributesService.html":{},"injectables/DpSizesService.html":{},"injectables/DpUserProjsService.html":{},"injectables/DpUsersService.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IAchievement.html":{},"interfaces/IAddToCartRequest.html":{},"interfaces/ICartItem.html":{},"interfaces/ICartViewModel.html":{},"interfaces/ICreateDpImageRequest.html":{},"interfaces/IDpCategory.html":{},"interfaces/IDpImage.html":{},"interfaces/IDpOrder.html":{},"interfaces/IDpOrderComposition.html":{},"interfaces/IDpOrderDetail.html":{},"interfaces/IDpProduct.html":{},"interfaces/IDpProductAttribute.html":{},"interfaces/IDpSize.html":{},"interfaces/IDpUser.html":{},"interfaces/IDpUserProj.html":{},"interfaces/IRemoveFromCartRequest.html":{},"interfaces/IUpdateCartRequest.html":{},"interfaces/IUpdateDpImageRequest.html":{},"interfaces/IUserHasAchievement.html":{},"components/IconTrashComponent.html":{},"injectables/ImagesRepositoryService.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"injectables/OrderCompositionsRepositoryService.html":{},"injectables/OrderRepositoryService.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"injectables/ProductAttributesRepositoryService.html":{},"injectables/ProductsRepositoryService.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"injectables/ShopCartRepositoryService.html":{},"injectables/ShopCartService.html":{},"injectables/SizesRepositoryService.html":{},"components/ThemeToggleComponent.html":{},"interfaces/User.html":{},"injectables/UserAchievementsRepositoryService.html":{},"injectables/UserAchievementsService.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{},"injectables/UserProjsRepositoryService.html":{},"injectables/UsersRepositoryService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.random",{"_index":694,"title":{},"body":{"components/CardItemComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/UserPageProjComponent.html":{}}}],["max",{"_index":141,"title":{},"body":{"components/AboutComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/PageCartComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/UserPageComponent.html":{}}}],["maxfilesize",{"_index":1205,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["maxlength",{"_index":1093,"title":{},"body":{"components/DialogCategoryComponent.html":{},"components/DialogProductComponent.html":{}}}],["media",{"_index":170,"title":{},"body":{"components/AboutComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{}}}],["medium",{"_index":630,"title":{},"body":{"components/ButtonComponent.html":{}}}],["message",{"_index":1109,"title":{},"body":{"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"injectables/ShopCartRepositoryService.html":{},"components/ThemeToggleComponent.html":{}}}],["meta",{"_index":2588,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{}}}],["methods",{"_index":42,"title":{},"body":{"components/AboutComponent.html":{},"injectables/AchievementsRepositoryService.html":{},"injectables/AchievementsService.html":{},"components/AchievmentsPageForUserComponent.html":{},"injectables/AuthProjRepositoryService.html":{},"injectables/AuthProjService.html":{},"injectables/AuthRepositoryService.html":{},"injectables/AuthService.html":{},"components/BackButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"injectables/CategoriesRepositoryService.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"injectables/DpCategoriesService.html":{},"injectables/DpImagesService.html":{},"injectables/DpOrderCompositionsService.html":{},"injectables/DpOrdersService.html":{},"injectables/DpProductAttributesService.html":{},"injectables/DpSizesService.html":{},"injectables/DpUserProjsService.html":{},"injectables/DpUsersService.html":{},"components/FilterByInputComponent.html":{},"components/IconTrashComponent.html":{},"injectables/ImagesRepositoryService.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"injectables/OrderCompositionsRepositoryService.html":{},"injectables/OrderRepositoryService.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"injectables/ProductAttributesRepositoryService.html":{},"injectables/ProductsRepositoryService.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"injectables/ShopCartRepositoryService.html":{},"injectables/ShopCartService.html":{},"injectables/SizesRepositoryService.html":{},"components/ThemeToggleComponent.html":{},"injectables/UserAchievementsRepositoryService.html":{},"injectables/UserAchievementsService.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{},"injectables/UserProjsRepositoryService.html":{},"injectables/UsersRepositoryService.html":{}}}],["middle",{"_index":183,"title":{},"body":{"components/AboutComponent.html":{}}}],["min",{"_index":1798,"title":{},"body":{"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/UserPageComponent.html":{}}}],["min(50rem",{"_index":144,"title":{},"body":{"components/AboutComponent.html":{}}}],["miscellaneous",{"_index":2698,"title":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mock",{"_index":1947,"title":{},"body":{"components/PageComponent.html":{}}}],["mode",{"_index":642,"title":{},"body":{"components/ButtonComponent.html":{}}}],["modify",{"_index":2646,"title":{},"body":{"index.html":{}}}],["modulemetadata",{"_index":2720,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modules",{"_index":2696,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":1977,"title":{},"body":{"components/PageComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["movedpermanently",{"_index":1047,"title":{},"body":{"injectables/ConfigService.html":{}}}],["movefocus",{"_index":1084,"title":{},"body":{"components/DialogCategoryComponent.html":{}}}],["movefocus(targetinput",{"_index":1099,"title":{},"body":{"components/DialogCategoryComponent.html":{}}}],["mssql",{"_index":111,"title":{},"body":{"components/AboutComponent.html":{}}}],["multi",{"_index":1541,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["name",{"_index":53,"title":{},"body":{"components/AboutComponent.html":{},"injectables/AchievementsRepositoryService.html":{},"injectables/AchievementsService.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"injectables/AuthProjRepositoryService.html":{},"injectables/AuthProjService.html":{},"injectables/AuthRepositoryService.html":{},"injectables/AuthService.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"injectables/CategoriesRepositoryService.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"injectables/DpCategoriesService.html":{},"injectables/DpImagesService.html":{},"injectables/DpOrderCompositionsService.html":{},"injectables/DpOrdersService.html":{},"injectables/DpProductAttributesService.html":{},"injectables/DpSizesService.html":{},"injectables/DpUserProjsService.html":{},"injectables/DpUsersService.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"injectables/ImagesRepositoryService.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"injectables/OrderCompositionsRepositoryService.html":{},"injectables/OrderRepositoryService.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"injectables/ProductAttributesRepositoryService.html":{},"injectables/ProductsRepositoryService.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"injectables/ShopCartRepositoryService.html":{},"injectables/ShopCartService.html":{},"injectables/SizesRepositoryService.html":{},"components/ThemeToggleComponent.html":{},"interfaces/User.html":{},"injectables/UserAchievementsRepositoryService.html":{},"injectables/UserAchievementsService.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{},"injectables/UserProjsRepositoryService.html":{},"injectables/UsersRepositoryService.html":{},"miscellaneous/variables.html":{}}}],["namefor",{"_index":2654,"title":{},"body":{"index.html":{}}}],["navbar",{"_index":1822,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar'},{'name",{"_index":304,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{}}}],["navbar.component.css",{"_index":1834,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.css,../../../styles/root.css",{"_index":1823,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.html",{"_index":1824,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbarcomponent",{"_index":303,"title":{"components/NavbarComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{},"coverage.html":{}}}],["navigate",{"_index":1955,"title":{},"body":{"components/PageComponent.html":{},"index.html":{}}}],["navigateto",{"_index":43,"title":{},"body":{"components/AboutComponent.html":{},"components/NavbarComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{}}}],["navigateto(path",{"_index":56,"title":{},"body":{"components/AboutComponent.html":{},"components/NavbarComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{}}}],["navigatetohome",{"_index":44,"title":{},"body":{"components/AboutComponent.html":{}}}],["navigatetologin",{"_index":2172,"title":{},"body":{"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{}}}],["navigatetoproduct",{"_index":676,"title":{},"body":{"components/CardItemComponent.html":{}}}],["navigatetoproduct(product",{"_index":681,"title":{},"body":{"components/CardItemComponent.html":{}}}],["navigatetoproductfailed",{"_index":995,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["navigatetoproductsuccess",{"_index":942,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["navigatetoregister",{"_index":1771,"title":{},"body":{"components/LoginComponent.html":{},"components/LoginProjComponent.html":{}}}],["navigation.css",{"_index":251,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/BackButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"components/FilterByInputComponent.html":{},"components/IconTrashComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{}}}],["needing",{"_index":1954,"title":{},"body":{"components/PageComponent.html":{}}}],["needs",{"_index":2686,"title":{},"body":{"index.html":{}}}],["negative",{"_index":1175,"title":{},"body":{"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/IconTrashComponent.html":{}}}],["neue",{"_index":653,"title":{},"body":{"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/PageComponent.html":{}}}],["new",{"_index":70,"title":{},"body":{"components/AboutComponent.html":{},"injectables/AuthProjService.html":{},"injectables/AuthService.html":{},"components/ButtonComponent.html":{},"components/CarouselImgComponent.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"injectables/DpImagesService.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"injectables/ImagesRepositoryService.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"injectables/UserAchievementsService.html":{},"components/UserPageComponent.html":{},"coverage.html":{},"index.html":{}}}],["newimages",{"_index":760,"title":{},"body":{"components/CarouselImgComponent.html":{}}}],["newimages.length",{"_index":763,"title":{},"body":{"components/CarouselImgComponent.html":{}}}],["newimages.map(image",{"_index":765,"title":{},"body":{"components/CarouselImgComponent.html":{}}}],["newquantity",{"_index":844,"title":{},"body":{"interfaces/CartItem.html":{},"components/PageCartComponent.html":{}}}],["next",{"_index":464,"title":{},"body":{"components/AchievmentsPageForUserComponent.html":{},"interfaces/CartItem.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/UserPageComponent.html":{}}}],["ng",{"_index":2315,"title":{},"body":{"components/ThemeToggleComponent.html":{},"index.html":{}}}],["ng_value_accessor",{"_index":1538,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["ngforof",{"_index":488,"title":{},"body":{"components/AlertDeleteComponent.html":{},"interfaces/CartItem.html":{},"components/PageCartComponent.html":{}}}],["ngif",{"_index":791,"title":{},"body":{"interfaces/CartItem.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{}}}],["ngonchanges",{"_index":714,"title":{},"body":{"components/CarouselImgComponent.html":{}}}],["ngonchanges(changes",{"_index":728,"title":{},"body":{"components/CarouselImgComponent.html":{}}}],["ngondestroy",{"_index":45,"title":{},"body":{"components/AboutComponent.html":{},"components/CarouselImgComponent.html":{}}}],["ngoninit",{"_index":408,"title":{},"body":{"components/AchievmentsPageForUserComponent.html":{},"components/CarouselImgComponent.html":{},"interfaces/CartItem.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{}}}],["ngx",{"_index":2620,"title":{},"body":{"dependencies.html":{}}}],["nocontent",{"_index":1044,"title":{},"body":{"injectables/ConfigService.html":{}}}],["none",{"_index":209,"title":{},"body":{"components/AboutComponent.html":{},"components/PageItemFromCatalogComponent.html":{}}}],["noprice",{"_index":2594,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["notfound",{"_index":1057,"title":{},"body":{"injectables/ConfigService.html":{}}}],["notification",{"_index":1704,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["notification.subscribe",{"_index":1714,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["nowrap",{"_index":2100,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{}}}],["null",{"_index":431,"title":{},"body":{"components/AchievmentsPageForUserComponent.html":{},"components/DialogImageComponent.html":{},"components/HeaderComponent.html":{},"injectables/ImagesRepositoryService.html":{},"components/PageComponent.html":{},"injectables/ShopCartRepositoryService.html":{},"injectables/UserAchievementsService.html":{},"components/UserPageComponent.html":{}}}],["number",{"_index":346,"title":{},"body":{"injectables/AchievementsRepositoryService.html":{},"injectables/AchievementsService.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/CarouselImgComponent.html":{},"interfaces/CartItem.html":{},"injectables/CategoriesRepositoryService.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"injectables/DpCategoriesService.html":{},"injectables/DpImagesService.html":{},"injectables/DpOrderCompositionsService.html":{},"injectables/DpOrdersService.html":{},"injectables/DpProductAttributesService.html":{},"injectables/DpSizesService.html":{},"injectables/DpUserProjsService.html":{},"injectables/DpUsersService.html":{},"interfaces/IAchievement.html":{},"interfaces/IAddToCartRequest.html":{},"interfaces/ICartItem.html":{},"interfaces/ICreateDpImageRequest.html":{},"interfaces/IDpCategory.html":{},"interfaces/IDpImage.html":{},"interfaces/IDpOrder.html":{},"interfaces/IDpOrderComposition.html":{},"interfaces/IDpOrderDetail.html":{},"interfaces/IDpProduct.html":{},"interfaces/IDpProductAttribute.html":{},"interfaces/IDpSize.html":{},"interfaces/IDpUser.html":{},"interfaces/IDpUserProj.html":{},"interfaces/IRemoveFromCartRequest.html":{},"interfaces/IUpdateCartRequest.html":{},"interfaces/IUpdateDpImageRequest.html":{},"interfaces/IUserHasAchievement.html":{},"injectables/ImagesRepositoryService.html":{},"injectables/OrderCompositionsRepositoryService.html":{},"injectables/OrderRepositoryService.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"injectables/ProductAttributesRepositoryService.html":{},"injectables/ProductsRepositoryService.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"injectables/ShopCartRepositoryService.html":{},"injectables/ShopCartService.html":{},"injectables/SizesRepositoryService.html":{},"components/ThemeToggleComponent.html":{},"injectables/UserAchievementsRepositoryService.html":{},"injectables/UserAchievementsService.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{},"injectables/UserProjsRepositoryService.html":{},"injectables/UsersRepositoryService.html":{}}}],["nunito",{"_index":650,"title":{},"body":{"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/PageComponent.html":{}}}],["object",{"_index":914,"title":{},"body":{"injectables/ConfigService.html":{},"components/PageItemFromCatalogComponent.html":{}}}],["object.values(this.configservice.achievementids",{"_index":455,"title":{},"body":{"components/AchievmentsPageForUserComponent.html":{}}}],["object.values(this.imageurls).foreach(url",{"_index":752,"title":{},"body":{"components/CarouselImgComponent.html":{}}}],["observable",{"_index":344,"title":{},"body":{"injectables/AchievementsRepositoryService.html":{},"injectables/AchievementsService.html":{},"injectables/AuthProjRepositoryService.html":{},"injectables/AuthProjService.html":{},"injectables/AuthRepositoryService.html":{},"injectables/AuthService.html":{},"injectables/CategoriesRepositoryService.html":{},"components/DialogImageComponent.html":{},"injectables/DpCategoriesService.html":{},"injectables/DpImagesService.html":{},"injectables/DpOrderCompositionsService.html":{},"injectables/DpOrdersService.html":{},"injectables/DpProductAttributesService.html":{},"injectables/DpSizesService.html":{},"injectables/DpUserProjsService.html":{},"injectables/DpUsersService.html":{},"injectables/ImagesRepositoryService.html":{},"injectables/OrderCompositionsRepositoryService.html":{},"injectables/OrderRepositoryService.html":{},"components/PageCatalogItemComponent.html":{},"injectables/ProductAttributesRepositoryService.html":{},"injectables/ProductsRepositoryService.html":{},"injectables/ProductsService.html":{},"injectables/ShopCartRepositoryService.html":{},"injectables/ShopCartService.html":{},"injectables/SizesRepositoryService.html":{},"injectables/UserAchievementsRepositoryService.html":{},"injectables/UserAchievementsService.html":{},"injectables/UserProjsRepositoryService.html":{},"injectables/UsersRepositoryService.html":{}}}],["observable[]).pipe",{"_index":2228,"title":{},"body":{"injectables/ShopCartRepositoryService.html":{}}}],["of(false",{"_index":2407,"title":{},"body":{"injectables/UserAchievementsService.html":{}}}],["of(undefined",{"_index":2254,"title":{},"body":{"injectables/ShopCartRepositoryService.html":{}}}],["of(void",{"_index":2411,"title":{},"body":{"injectables/UserAchievementsService.html":{}}}],["once",{"_index":2732,"title":{},"body":{"miscellaneous/variables.html":{}}}],["onchange",{"_index":1546,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["onclick",{"_index":618,"title":{},"body":{"components/ButtonComponent.html":{},"miscellaneous/variables.html":{}}}],["oncreateaccount",{"_index":1608,"title":{},"body":{"components/HeaderComponent.html":{},"miscellaneous/variables.html":{}}}],["ondestroy",{"_index":78,"title":{},"body":{"components/AboutComponent.html":{},"components/CarouselImgComponent.html":{}}}],["one",{"_index":2684,"title":{},"body":{"index.html":{}}}],["onfilechange",{"_index":1209,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["onfilechange(event",{"_index":1218,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["onimageclick",{"_index":715,"title":{},"body":{"components/CarouselImgComponent.html":{},"components/PageItemFromCatalogComponent.html":{}}}],["onimageclick(imageurl",{"_index":734,"title":{},"body":{"components/CarouselImgComponent.html":{},"components/PageItemFromCatalogComponent.html":{}}}],["oninit",{"_index":77,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/CarouselImgComponent.html":{},"interfaces/CartItem.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageItemFromCatalogComponent.html":{}}}],["oninput",{"_index":1085,"title":{},"body":{"components/DialogCategoryComponent.html":{},"components/DialogProductComponent.html":{}}}],["oninput(event",{"_index":1104,"title":{},"body":{"components/DialogCategoryComponent.html":{},"components/DialogProductComponent.html":{}}}],["onkeypress",{"_index":1548,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["onkeypress(event",{"_index":1560,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["onlogin",{"_index":1609,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"miscellaneous/variables.html":{}}}],["onlogout",{"_index":1610,"title":{},"body":{"components/HeaderComponent.html":{},"miscellaneous/variables.html":{}}}],["onnotworkingbuttonclick",{"_index":409,"title":{},"body":{"components/AchievmentsPageForUserComponent.html":{}}}],["onregister",{"_index":2173,"title":{},"body":{"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{}}}],["onsortchange",{"_index":1868,"title":{},"body":{"components/PageCartComponent.html":{}}}],["onsortchange(event",{"_index":884,"title":{},"body":{"interfaces/CartItem.html":{},"components/PageCartComponent.html":{}}}],["ontouched",{"_index":1547,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["onvaluechange",{"_index":878,"title":{},"body":{"interfaces/CartItem.html":{},"components/PageCartComponent.html":{}}}],["onvaluechange(value",{"_index":1882,"title":{},"body":{"components/PageCartComponent.html":{}}}],["opacity",{"_index":2088,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{}}}],["open",{"_index":2410,"title":{},"body":{"injectables/UserAchievementsService.html":{},"index.html":{}}}],["open(message",{"_index":1174,"title":{},"body":{"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{}}}],["open(new",{"_index":1705,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["opencategorydialogsuccess",{"_index":949,"title":{},"body":{"injectables/ConfigService.html":{}}}],["opendialog",{"_index":2448,"title":{},"body":{"components/UserPageComponent.html":{}}}],["opendialog(component",{"_index":2461,"title":{},"body":{"components/UserPageComponent.html":{}}}],["openimagedialogsuccess",{"_index":951,"title":{},"body":{"injectables/ConfigService.html":{}}}],["openimageinfullscreen",{"_index":2015,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{}}}],["openimageinfullscreen(imageurl",{"_index":2024,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{}}}],["openproductdialogsuccess",{"_index":947,"title":{},"body":{"injectables/ConfigService.html":{}}}],["optimizes",{"_index":2666,"title":{},"body":{"index.html":{}}}],["optional",{"_index":55,"title":{},"body":{"components/AboutComponent.html":{},"injectables/AchievementsRepositoryService.html":{},"injectables/AchievementsService.html":{},"components/AchievmentsPageForUserComponent.html":{},"injectables/AuthProjRepositoryService.html":{},"injectables/AuthProjService.html":{},"injectables/AuthRepositoryService.html":{},"injectables/AuthService.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"injectables/CategoriesRepositoryService.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"injectables/DpCategoriesService.html":{},"injectables/DpImagesService.html":{},"injectables/DpOrderCompositionsService.html":{},"injectables/DpOrdersService.html":{},"injectables/DpProductAttributesService.html":{},"injectables/DpSizesService.html":{},"injectables/DpUserProjsService.html":{},"injectables/DpUsersService.html":{},"components/FilterByInputComponent.html":{},"interfaces/IAchievement.html":{},"interfaces/IAddToCartRequest.html":{},"interfaces/ICartItem.html":{},"interfaces/IDpCategory.html":{},"interfaces/IDpImage.html":{},"interfaces/IDpOrder.html":{},"interfaces/IDpOrderDetail.html":{},"interfaces/IDpProduct.html":{},"interfaces/IDpProductAttribute.html":{},"interfaces/IDpSize.html":{},"interfaces/IDpUser.html":{},"interfaces/IDpUserProj.html":{},"interfaces/IRemoveFromCartRequest.html":{},"interfaces/IUpdateCartRequest.html":{},"interfaces/IUpdateDpImageRequest.html":{},"interfaces/IUserHasAchievement.html":{},"components/IconTrashComponent.html":{},"injectables/ImagesRepositoryService.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"injectables/OrderCompositionsRepositoryService.html":{},"injectables/OrderRepositoryService.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"injectables/ProductAttributesRepositoryService.html":{},"injectables/ProductsRepositoryService.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"injectables/ShopCartRepositoryService.html":{},"injectables/ShopCartService.html":{},"injectables/SizesRepositoryService.html":{},"components/ThemeToggleComponent.html":{},"injectables/UserAchievementsRepositoryService.html":{},"injectables/UserAchievementsService.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{},"injectables/UserProjsRepositoryService.html":{},"injectables/UsersRepositoryService.html":{}}}],["options",{"_index":806,"title":{},"body":{"interfaces/CartItem.html":{},"components/PageCartComponent.html":{}}}],["order",{"_index":1410,"title":{},"body":{"injectables/DpOrderCompositionsService.html":{},"injectables/OrderCompositionsRepositoryService.html":{},"coverage.html":{}}}],["ordercompositionsrepositoryservice",{"_index":1847,"title":{"injectables/OrderCompositionsRepositoryService.html":{}},"body":{"injectables/OrderCompositionsRepositoryService.html":{},"coverage.html":{}}}],["orderdetails",{"_index":2249,"title":{},"body":{"injectables/ShopCartRepositoryService.html":{}}}],["orderid",{"_index":869,"title":{},"body":{"interfaces/CartItem.html":{},"components/PageCartComponent.html":{},"injectables/ShopCartRepositoryService.html":{},"injectables/ShopCartService.html":{}}}],["orderrepositoryservice",{"_index":1857,"title":{"injectables/OrderRepositoryService.html":{}},"body":{"injectables/OrderRepositoryService.html":{},"coverage.html":{}}}],["orders.service",{"_index":1859,"title":{},"body":{"injectables/OrderRepositoryService.html":{}}}],["orders.service.ts",{"_index":1432,"title":{},"body":{"injectables/DpOrdersService.html":{},"coverage.html":{}}}],["orders.service.ts:10",{"_index":1438,"title":{},"body":{"injectables/DpOrdersService.html":{}}}],["orders.service.ts:14",{"_index":1445,"title":{},"body":{"injectables/DpOrdersService.html":{}}}],["orders.service.ts:18",{"_index":1447,"title":{},"body":{"injectables/DpOrdersService.html":{}}}],["orders.service.ts:22",{"_index":1441,"title":{},"body":{"injectables/DpOrdersService.html":{}}}],["orders.service.ts:26",{"_index":1449,"title":{},"body":{"injectables/DpOrdersService.html":{}}}],["orders.service.ts:30",{"_index":1444,"title":{},"body":{"injectables/DpOrdersService.html":{}}}],["out",{"_index":1971,"title":{},"body":{"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{}}}],["out/i",{"_index":2755,"title":{},"body":{"miscellaneous/variables.html":{}}}],["output",{"_index":640,"title":{},"body":{"components/ButtonComponent.html":{},"components/CarouselImgComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{}}}],["outputs",{"_index":617,"title":{},"body":{"components/ButtonComponent.html":{},"components/CarouselImgComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{}}}],["overflow",{"_index":2076,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{}}}],["overview",{"_index":2694,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p",{"_index":1924,"title":{},"body":{"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/UserPageComponent.html":{}}}],["p.dpimages?.length",{"_index":1925,"title":{},"body":{"components/PageCatalogItemComponent.html":{}}}],["package",{"_index":2600,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":152,"title":{},"body":{"components/AboutComponent.html":{},"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/PageCartComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/UserPageComponent.html":{}}}],["page",{"_index":140,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"interfaces/CartItem.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{},"coverage.html":{},"index.html":{}}}],["page'},{'name",{"_index":310,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{}}}],["page.component.css",{"_index":2485,"title":{},"body":{"components/UserPageComponent.html":{}}}],["page.component.css,../../../styles/root.css",{"_index":2435,"title":{},"body":{"components/UserPageComponent.html":{}}}],["page.component.html",{"_index":2436,"title":{},"body":{"components/UserPageComponent.html":{}}}],["page.component.ts",{"_index":2434,"title":{},"body":{"components/UserPageComponent.html":{},"coverage.html":{}}}],["page.component.ts:105",{"_index":2451,"title":{},"body":{"components/UserPageComponent.html":{}}}],["page.component.ts:111",{"_index":2458,"title":{},"body":{"components/UserPageComponent.html":{}}}],["page.component.ts:118",{"_index":2459,"title":{},"body":{"components/UserPageComponent.html":{}}}],["page.component.ts:122",{"_index":2462,"title":{},"body":{"components/UserPageComponent.html":{}}}],["page.component.ts:158",{"_index":2457,"title":{},"body":{"components/UserPageComponent.html":{}}}],["page.component.ts:177",{"_index":2453,"title":{},"body":{"components/UserPageComponent.html":{}}}],["page.component.ts:196",{"_index":2455,"title":{},"body":{"components/UserPageComponent.html":{}}}],["page.component.ts:54",{"_index":2468,"title":{},"body":{"components/UserPageComponent.html":{}}}],["page.component.ts:55",{"_index":2463,"title":{},"body":{"components/UserPageComponent.html":{}}}],["page.component.ts:56",{"_index":2479,"title":{},"body":{"components/UserPageComponent.html":{}}}],["page.component.ts:57",{"_index":2478,"title":{},"body":{"components/UserPageComponent.html":{}}}],["page.component.ts:58",{"_index":2464,"title":{},"body":{"components/UserPageComponent.html":{}}}],["page.component.ts:59",{"_index":2474,"title":{},"body":{"components/UserPageComponent.html":{}}}],["page.component.ts:61",{"_index":2471,"title":{},"body":{"components/UserPageComponent.html":{}}}],["page.component.ts:65",{"_index":2469,"title":{},"body":{"components/UserPageComponent.html":{}}}],["page.component.ts:69",{"_index":2470,"title":{},"body":{"components/UserPageComponent.html":{}}}],["page.component.ts:74",{"_index":2475,"title":{},"body":{"components/UserPageComponent.html":{}}}],["page.component.ts:76",{"_index":2477,"title":{},"body":{"components/UserPageComponent.html":{}}}],["page.component.ts:81",{"_index":2467,"title":{},"body":{"components/UserPageComponent.html":{}}}],["page.component.ts:86",{"_index":2473,"title":{},"body":{"components/UserPageComponent.html":{}}}],["page.component.ts:89",{"_index":2450,"title":{},"body":{"components/UserPageComponent.html":{}}}],["page.component.ts:98",{"_index":2460,"title":{},"body":{"components/UserPageComponent.html":{}}}],["page.css",{"_index":1936,"title":{},"body":{"components/PageComponent.html":{}}}],["page/user",{"_index":2433,"title":{},"body":{"components/UserPageComponent.html":{},"coverage.html":{}}}],["pagecartcomponent",{"_index":305,"title":{"components/PageCartComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"interfaces/CartItem.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{},"coverage.html":{}}}],["pagecatalogitemcomponent",{"_index":307,"title":{"components/PageCatalogItemComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{},"coverage.html":{}}}],["pagecomponent",{"_index":309,"title":{"components/PageComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pageitemfromcatalogcomponent",{"_index":311,"title":{"components/PageItemFromCatalogComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{},"coverage.html":{}}}],["pages",{"_index":1937,"title":{},"body":{"components/PageComponent.html":{}}}],["pagination",{"_index":2095,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{}}}],["panel",{"_index":2731,"title":{},"body":{"miscellaneous/variables.html":{}}}],["param",{"_index":2362,"title":{},"body":{"injectables/UserAchievementsRepositoryService.html":{},"injectables/UserAchievementsService.html":{}}}],["parameters",{"_index":51,"title":{},"body":{"components/AboutComponent.html":{},"injectables/AchievementsRepositoryService.html":{},"injectables/AchievementsService.html":{},"components/AchievmentsPageForUserComponent.html":{},"injectables/AuthProjRepositoryService.html":{},"injectables/AuthProjService.html":{},"injectables/AuthRepositoryService.html":{},"injectables/AuthService.html":{},"components/BackButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"injectables/CategoriesRepositoryService.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"injectables/DpCategoriesService.html":{},"injectables/DpImagesService.html":{},"injectables/DpOrderCompositionsService.html":{},"injectables/DpOrdersService.html":{},"injectables/DpProductAttributesService.html":{},"injectables/DpSizesService.html":{},"injectables/DpUserProjsService.html":{},"injectables/DpUsersService.html":{},"components/FilterByInputComponent.html":{},"components/IconTrashComponent.html":{},"injectables/ImagesRepositoryService.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"injectables/OrderCompositionsRepositoryService.html":{},"injectables/OrderRepositoryService.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"injectables/ProductAttributesRepositoryService.html":{},"injectables/ProductsRepositoryService.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"injectables/ShopCartRepositoryService.html":{},"injectables/ShopCartService.html":{},"injectables/SizesRepositoryService.html":{},"components/ThemeToggleComponent.html":{},"injectables/UserAchievementsRepositoryService.html":{},"injectables/UserAchievementsService.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{},"injectables/UserProjsRepositoryService.html":{},"injectables/UsersRepositoryService.html":{},"miscellaneous/variables.html":{}}}],["parseint(localstorage.getitem('userprojid",{"_index":471,"title":{},"body":{"components/AchievmentsPageForUserComponent.html":{},"components/CardItemComponent.html":{},"interfaces/CartItem.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/LoginComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageProjComponent.html":{}}}],["password",{"_index":552,"title":{},"body":{"injectables/AuthProjService.html":{},"injectables/AuthService.html":{},"interfaces/IDpUserProj.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{}}}],["path",{"_index":59,"title":{},"body":{"components/AboutComponent.html":{},"components/LoadingComponent.html":{},"components/NavbarComponent.html":{},"components/PageComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{}}}],["patterns",{"_index":1958,"title":{},"body":{"components/PageComponent.html":{}}}],["payload",{"_index":450,"title":{},"body":{"components/AchievmentsPageForUserComponent.html":{},"injectables/AuthProjService.html":{},"injectables/AuthService.html":{}}}],["payload).pipe",{"_index":555,"title":{},"body":{"injectables/AuthProjService.html":{},"injectables/AuthService.html":{}}}],["payload.sub",{"_index":453,"title":{},"body":{"components/AchievmentsPageForUserComponent.html":{}}}],["performance",{"_index":2667,"title":{},"body":{"index.html":{}}}],["phonenumber",{"_index":590,"title":{},"body":{"injectables/AuthService.html":{}}}],["pipe",{"_index":1707,"title":{},"body":{"components/IconTrashComponent.html":{},"injectables/ProductsRepositoryService.html":{}}}],["pipes",{"_index":2657,"title":{},"body":{"index.html":{}}}],["play",{"_index":2742,"title":{},"body":{"miscellaneous/variables.html":{}}}],["plugins",{"_index":2615,"title":{},"body":{"dependencies.html":{}}}],["png",{"_index":1284,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["pointer",{"_index":233,"title":{},"body":{"components/AboutComponent.html":{},"components/ButtonComponent.html":{}}}],["polymorpheuscomponent",{"_index":492,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/IconTrashComponent.html":{}}}],["polymorpheuscomponent(alertdeletecomponent",{"_index":1706,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["position",{"_index":2082,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{},"miscellaneous/variables.html":{}}}],["post(`${this.baseurl}/create/${userprojid}/${achievementid",{"_index":2400,"title":{},"body":{"injectables/UserAchievementsService.html":{}}}],["powerful",{"_index":2651,"title":{},"body":{"index.html":{}}}],["prettier",{"_index":127,"title":{},"body":{"components/AboutComponent.html":{}}}],["previousurl",{"_index":604,"title":{},"body":{"components/BackButtonComponent.html":{}}}],["previousurl.startswith(basedomain",{"_index":607,"title":{},"body":{"components/BackButtonComponent.html":{}}}],["price",{"_index":812,"title":{},"body":{"interfaces/CartItem.html":{},"interfaces/ICartItem.html":{},"components/PageCartComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"injectables/ShopCartRepositoryService.html":{}}}],["primary",{"_index":180,"title":{},"body":{"components/AboutComponent.html":{},"components/ButtonComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/UserPageComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["principal",{"_index":626,"title":{},"body":{"components/ButtonComponent.html":{}}}],["private",{"_index":36,"title":{},"body":{"components/AboutComponent.html":{},"injectables/AchievementsService.html":{},"components/AchievmentsPageForUserComponent.html":{},"injectables/AuthProjService.html":{},"injectables/AuthService.html":{},"components/BackButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"interfaces/CartItem.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"injectables/DpCategoriesService.html":{},"injectables/DpImagesService.html":{},"injectables/DpOrderCompositionsService.html":{},"injectables/DpOrdersService.html":{},"injectables/DpProductAttributesService.html":{},"injectables/DpSizesService.html":{},"injectables/DpUserProjsService.html":{},"injectables/DpUsersService.html":{},"components/FilterByInputComponent.html":{},"components/IconTrashComponent.html":{},"injectables/ImagesRepositoryService.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"injectables/ProductsRepositoryService.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"injectables/ShopCartRepositoryService.html":{},"injectables/ShopCartService.html":{},"components/ThemeToggleComponent.html":{},"injectables/UserAchievementsRepositoryService.html":{},"injectables/UserAchievementsService.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{}}}],["process",{"_index":1942,"title":{},"body":{"components/PageComponent.html":{}}}],["product",{"_index":683,"title":{},"body":{"components/CardItemComponent.html":{},"components/DialogProductComponent.html":{},"injectables/DpProductAttributesService.html":{},"components/PageCatalogItemComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"injectables/ProductAttributesRepositoryService.html":{},"injectables/ProductsRepositoryService.html":{},"injectables/ProductsService.html":{},"components/UserPageComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["product'},{'name",{"_index":288,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{}}}],["product.component",{"_index":2483,"title":{},"body":{"components/UserPageComponent.html":{}}}],["product.component.css",{"_index":1308,"title":{},"body":{"components/DialogProductComponent.html":{}}}],["product.component.html",{"_index":1309,"title":{},"body":{"components/DialogProductComponent.html":{}}}],["product.component.ts",{"_index":1307,"title":{},"body":{"components/DialogProductComponent.html":{},"coverage.html":{}}}],["product.component.ts:135",{"_index":1325,"title":{},"body":{"components/DialogProductComponent.html":{}}}],["product.component.ts:176",{"_index":1320,"title":{},"body":{"components/DialogProductComponent.html":{}}}],["product.component.ts:186",{"_index":1321,"title":{},"body":{"components/DialogProductComponent.html":{}}}],["product.component.ts:196",{"_index":1319,"title":{},"body":{"components/DialogProductComponent.html":{}}}],["product.component.ts:204",{"_index":1314,"title":{},"body":{"components/DialogProductComponent.html":{}}}],["product.component.ts:214",{"_index":1322,"title":{},"body":{"components/DialogProductComponent.html":{}}}],["product.component.ts:38",{"_index":1339,"title":{},"body":{"components/DialogProductComponent.html":{}}}],["product.component.ts:40",{"_index":1326,"title":{},"body":{"components/DialogProductComponent.html":{}}}],["product.component.ts:41",{"_index":1329,"title":{},"body":{"components/DialogProductComponent.html":{}}}],["product.component.ts:42",{"_index":1341,"title":{},"body":{"components/DialogProductComponent.html":{}}}],["product.component.ts:43",{"_index":1342,"title":{},"body":{"components/DialogProductComponent.html":{}}}],["product.component.ts:44",{"_index":1327,"title":{},"body":{"components/DialogProductComponent.html":{}}}],["product.component.ts:45",{"_index":1343,"title":{},"body":{"components/DialogProductComponent.html":{}}}],["product.component.ts:47",{"_index":1328,"title":{},"body":{"components/DialogProductComponent.html":{}}}],["product.component.ts:49",{"_index":1338,"title":{},"body":{"components/DialogProductComponent.html":{}}}],["product.component.ts:58",{"_index":1344,"title":{},"body":{"components/DialogProductComponent.html":{}}}],["product.component.ts:62",{"_index":1345,"title":{},"body":{"components/DialogProductComponent.html":{}}}],["product.component.ts:66",{"_index":1318,"title":{},"body":{"components/DialogProductComponent.html":{}}}],["product.component.ts:76",{"_index":1323,"title":{},"body":{"components/DialogProductComponent.html":{}}}],["product.component.ts:94",{"_index":1316,"title":{},"body":{"components/DialogProductComponent.html":{}}}],["product.dpproductid",{"_index":1930,"title":{},"body":{"components/PageCatalogItemComponent.html":{},"injectables/ProductsRepositoryService.html":{}}}],["product/dialog",{"_index":1306,"title":{},"body":{"components/DialogProductComponent.html":{},"components/UserPageComponent.html":{},"coverage.html":{}}}],["productattributesrepositoryservice",{"_index":2118,"title":{"injectables/ProductAttributesRepositoryService.html":{}},"body":{"injectables/ProductAttributesRepositoryService.html":{},"coverage.html":{}}}],["productdata",{"_index":1317,"title":{},"body":{"components/DialogProductComponent.html":{}}}],["productdata).subscribe",{"_index":1360,"title":{},"body":{"components/DialogProductComponent.html":{}}}],["productdialog",{"_index":2444,"title":{},"body":{"components/UserPageComponent.html":{}}}],["productform",{"_index":1310,"title":{},"body":{"components/DialogProductComponent.html":{}}}],["productid",{"_index":851,"title":{},"body":{"interfaces/CartItem.html":{},"injectables/DpImagesService.html":{},"interfaces/IAddToCartRequest.html":{},"interfaces/ICartItem.html":{},"interfaces/IRemoveFromCartRequest.html":{},"interfaces/IUpdateCartRequest.html":{},"injectables/ImagesRepositoryService.html":{},"components/PageCartComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"injectables/ShopCartRepositoryService.html":{},"injectables/ShopCartService.html":{}}}],["productinfo",{"_index":677,"title":{},"body":{"components/CardItemComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"miscellaneous/variables.html":{}}}],["productinfo.dpprice",{"_index":700,"title":{},"body":{"components/CardItemComponent.html":{}}}],["productinfo.dptitle",{"_index":699,"title":{},"body":{"components/CardItemComponent.html":{}}}],["productinfo?.dpcategory?.dpcategorytitle",{"_index":2075,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{}}}],["productinfo?.dpdescription",{"_index":2074,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{}}}],["productinfo?.dpprice",{"_index":2073,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{}}}],["productinfo?.dptitle",{"_index":2072,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{}}}],["production",{"_index":2665,"title":{},"body":{"index.html":{}}}],["productlist",{"_index":1921,"title":{},"body":{"components/PageCatalogItemComponent.html":{}}}],["productlist.length",{"_index":1927,"title":{},"body":{"components/PageCatalogItemComponent.html":{}}}],["productlist.reduce((sum",{"_index":1923,"title":{},"body":{"components/PageCatalogItemComponent.html":{}}}],["productnameinputref",{"_index":1206,"title":{},"body":{"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{}}}],["productobservables",{"_index":2224,"title":{},"body":{"injectables/ShopCartRepositoryService.html":{}}}],["products",{"_index":1632,"title":{},"body":{"interfaces/ICartViewModel.html":{},"components/PageCatalogItemComponent.html":{},"injectables/ProductsRepositoryService.html":{},"injectables/ShopCartRepositoryService.html":{},"components/UserPageComponent.html":{}}}],["products.map(product",{"_index":2149,"title":{},"body":{"injectables/ProductsRepositoryService.html":{}}}],["products.service",{"_index":2146,"title":{},"body":{"injectables/ProductsRepositoryService.html":{}}}],["products.service.ts",{"_index":2159,"title":{},"body":{"injectables/ProductsService.html":{},"coverage.html":{}}}],["products.service.ts:11",{"_index":2160,"title":{},"body":{"injectables/ProductsService.html":{}}}],["products.service.ts:15",{"_index":2164,"title":{},"body":{"injectables/ProductsService.html":{}}}],["products.service.ts:19",{"_index":2165,"title":{},"body":{"injectables/ProductsService.html":{}}}],["products.service.ts:23",{"_index":2162,"title":{},"body":{"injectables/ProductsService.html":{}}}],["products.service.ts:27",{"_index":2166,"title":{},"body":{"injectables/ProductsService.html":{}}}],["products.service.ts:31",{"_index":2163,"title":{},"body":{"injectables/ProductsService.html":{}}}],["products.service.ts:35",{"_index":2161,"title":{},"body":{"injectables/ProductsService.html":{}}}],["products[index].dpprice",{"_index":2232,"title":{},"body":{"injectables/ShopCartRepositoryService.html":{}}}],["products[index].dptitle",{"_index":2231,"title":{},"body":{"injectables/ShopCartRepositoryService.html":{}}}],["productsrepository",{"_index":1908,"title":{},"body":{"components/PageCatalogItemComponent.html":{},"components/UserPageComponent.html":{}}}],["productsrepositoryservice",{"_index":1311,"title":{"injectables/ProductsRepositoryService.html":{}},"body":{"components/DialogProductComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"injectables/ProductsRepositoryService.html":{},"injectables/ShopCartRepositoryService.html":{},"components/UserPageComponent.html":{},"coverage.html":{}}}],["productsservice",{"_index":2133,"title":{"injectables/ProductsService.html":{}},"body":{"injectables/ProductsRepositoryService.html":{},"injectables/ProductsService.html":{},"coverage.html":{}}}],["producttitle",{"_index":811,"title":{},"body":{"interfaces/CartItem.html":{},"interfaces/ICartItem.html":{},"interfaces/IDpOrderDetail.html":{},"components/PageCartComponent.html":{},"injectables/ShopCartRepositoryService.html":{}}}],["proj",{"_index":322,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"injectables/AuthProjRepositoryService.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"injectables/ConfigService.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{},"coverage.html":{}}}],["proj'},{'name",{"_index":302,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{}}}],["proj.component.css",{"_index":1814,"title":{},"body":{"components/LoginProjComponent.html":{},"components/RegisterProjComponent.html":{},"components/UserPageProjComponent.html":{}}}],["proj.component.css,../../../styles/root.css",{"_index":1806,"title":{},"body":{"components/LoginProjComponent.html":{},"components/RegisterProjComponent.html":{}}}],["proj.component.html",{"_index":1807,"title":{},"body":{"components/LoginProjComponent.html":{},"components/RegisterProjComponent.html":{},"components/UserPageProjComponent.html":{}}}],["proj.component.ts",{"_index":1805,"title":{},"body":{"components/LoginProjComponent.html":{},"components/RegisterProjComponent.html":{},"components/UserPageProjComponent.html":{},"coverage.html":{}}}],["proj.component.ts:112",{"_index":2526,"title":{},"body":{"components/UserPageProjComponent.html":{}}}],["proj.component.ts:34",{"_index":1813,"title":{},"body":{"components/LoginProjComponent.html":{},"components/RegisterProjComponent.html":{}}}],["proj.component.ts:37",{"_index":1809,"title":{},"body":{"components/LoginProjComponent.html":{},"components/RegisterProjComponent.html":{},"components/UserPageProjComponent.html":{}}}],["proj.component.ts:38",{"_index":2531,"title":{},"body":{"components/UserPageProjComponent.html":{}}}],["proj.component.ts:39",{"_index":2532,"title":{},"body":{"components/UserPageProjComponent.html":{}}}],["proj.component.ts:40",{"_index":2529,"title":{},"body":{"components/UserPageProjComponent.html":{}}}],["proj.component.ts:41",{"_index":2530,"title":{},"body":{"components/UserPageProjComponent.html":{}}}],["proj.component.ts:42",{"_index":2523,"title":{},"body":{"components/UserPageProjComponent.html":{}}}],["proj.component.ts:45",{"_index":1812,"title":{},"body":{"components/LoginProjComponent.html":{},"components/RegisterProjComponent.html":{}}}],["proj.component.ts:49",{"_index":2527,"title":{},"body":{"components/UserPageProjComponent.html":{}}}],["proj.component.ts:69",{"_index":1811,"title":{},"body":{"components/LoginProjComponent.html":{}}}],["proj.component.ts:70",{"_index":2190,"title":{},"body":{"components/RegisterProjComponent.html":{}}}],["proj.component.ts:81",{"_index":2528,"title":{},"body":{"components/UserPageProjComponent.html":{}}}],["proj.component.ts:85",{"_index":2524,"title":{},"body":{"components/UserPageProjComponent.html":{}}}],["proj.component.ts:91",{"_index":2525,"title":{},"body":{"components/UserPageProjComponent.html":{}}}],["proj.service",{"_index":442,"title":{},"body":{"components/AchievmentsPageForUserComponent.html":{},"injectables/AuthProjRepositoryService.html":{},"components/LoginProjComponent.html":{},"components/RegisterProjComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{}}}],["proj.service.ts",{"_index":529,"title":{},"body":{"injectables/AuthProjService.html":{},"coverage.html":{}}}],["proj.service.ts:11",{"_index":543,"title":{},"body":{"injectables/AuthProjService.html":{}}}],["proj.service.ts:12",{"_index":546,"title":{},"body":{"injectables/AuthProjService.html":{}}}],["proj.service.ts:13",{"_index":535,"title":{},"body":{"injectables/AuthProjService.html":{}}}],["proj.service.ts:19",{"_index":537,"title":{},"body":{"injectables/AuthProjService.html":{}}}],["proj.service.ts:35",{"_index":539,"title":{},"body":{"injectables/AuthProjService.html":{}}}],["proj.service.ts:51",{"_index":541,"title":{},"body":{"injectables/AuthProjService.html":{}}}],["proj.service.ts:55",{"_index":536,"title":{},"body":{"injectables/AuthProjService.html":{}}}],["proj.service.ts:60",{"_index":538,"title":{},"body":{"injectables/AuthProjService.html":{}}}],["proj/login",{"_index":1804,"title":{},"body":{"components/LoginProjComponent.html":{},"coverage.html":{}}}],["proj/register",{"_index":2189,"title":{},"body":{"components/RegisterProjComponent.html":{},"coverage.html":{}}}],["proj/user",{"_index":2522,"title":{},"body":{"components/UserPageProjComponent.html":{},"coverage.html":{}}}],["project",{"_index":2631,"title":{},"body":{"index.html":{}}}],["projs",{"_index":2537,"title":{},"body":{"injectables/UserProjsRepositoryService.html":{},"coverage.html":{}}}],["projs.service",{"_index":2539,"title":{},"body":{"injectables/UserProjsRepositoryService.html":{}}}],["projs.service.ts",{"_index":1495,"title":{},"body":{"injectables/DpUserProjsService.html":{},"coverage.html":{}}}],["projs.service.ts:11",{"_index":1501,"title":{},"body":{"injectables/DpUserProjsService.html":{}}}],["projs.service.ts:15",{"_index":1507,"title":{},"body":{"injectables/DpUserProjsService.html":{}}}],["projs.service.ts:19",{"_index":1509,"title":{},"body":{"injectables/DpUserProjsService.html":{}}}],["projs.service.ts:23",{"_index":1503,"title":{},"body":{"injectables/DpUserProjsService.html":{}}}],["projs.service.ts:27",{"_index":1511,"title":{},"body":{"injectables/DpUserProjsService.html":{}}}],["projs.service.ts:31",{"_index":1506,"title":{},"body":{"injectables/DpUserProjsService.html":{}}}],["projtoken",{"_index":446,"title":{},"body":{"components/AchievmentsPageForUserComponent.html":{},"components/UserPageComponent.html":{}}}],["properties",{"_index":35,"title":{"properties.html":{}},"body":{"components/AboutComponent.html":{},"injectables/AchievementsService.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"injectables/AuthProjService.html":{},"injectables/AuthService.html":{},"components/CarouselImgComponent.html":{},"interfaces/CartItem.html":{},"injectables/ConfigService.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"injectables/DpCategoriesService.html":{},"injectables/DpImagesService.html":{},"injectables/DpOrderCompositionsService.html":{},"injectables/DpOrdersService.html":{},"injectables/DpProductAttributesService.html":{},"injectables/DpSizesService.html":{},"injectables/DpUserProjsService.html":{},"injectables/DpUsersService.html":{},"components/FilterByInputComponent.html":{},"interfaces/IAchievement.html":{},"interfaces/IAddToCartRequest.html":{},"interfaces/ICartItem.html":{},"interfaces/ICartViewModel.html":{},"interfaces/ICreateDpImageRequest.html":{},"interfaces/IDpCategory.html":{},"interfaces/IDpImage.html":{},"interfaces/IDpOrder.html":{},"interfaces/IDpOrderComposition.html":{},"interfaces/IDpOrderDetail.html":{},"interfaces/IDpProduct.html":{},"interfaces/IDpProductAttribute.html":{},"interfaces/IDpSize.html":{},"interfaces/IDpUser.html":{},"interfaces/IDpUserProj.html":{},"interfaces/IRemoveFromCartRequest.html":{},"interfaces/IUpdateCartRequest.html":{},"interfaces/IUpdateDpImageRequest.html":{},"interfaces/IUserHasAchievement.html":{},"injectables/ImagesRepositoryService.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"injectables/ShopCartRepositoryService.html":{},"injectables/ShopCartService.html":{},"components/ThemeToggleComponent.html":{},"interfaces/User.html":{},"injectables/UserAchievementsService.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{},"properties.html":{}}}],["property",{"_index":1630,"title":{},"body":{"interfaces/ICartItem.html":{}}}],["protected",{"_index":484,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"interfaces/CartItem.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/IconTrashComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/PageCartComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{}}}],["provide",{"_index":1537,"title":{},"body":{"components/FilterByInputComponent.html":{},"miscellaneous/variables.html":{}}}],["provideanimations",{"_index":2709,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providedin",{"_index":356,"title":{},"body":{"injectables/AchievementsRepositoryService.html":{},"injectables/AchievementsService.html":{},"injectables/AuthProjRepositoryService.html":{},"injectables/AuthProjService.html":{},"injectables/AuthRepositoryService.html":{},"injectables/AuthService.html":{},"injectables/CategoriesRepositoryService.html":{},"injectables/ConfigService.html":{},"injectables/DpCategoriesService.html":{},"injectables/DpImagesService.html":{},"injectables/DpOrderCompositionsService.html":{},"injectables/DpOrdersService.html":{},"injectables/DpProductAttributesService.html":{},"injectables/DpSizesService.html":{},"injectables/DpUserProjsService.html":{},"injectables/DpUsersService.html":{},"injectables/ImagesRepositoryService.html":{},"injectables/OrderCompositionsRepositoryService.html":{},"injectables/OrderRepositoryService.html":{},"injectables/ProductAttributesRepositoryService.html":{},"injectables/ProductsRepositoryService.html":{},"injectables/ProductsService.html":{},"injectables/ShopCartRepositoryService.html":{},"injectables/ShopCartService.html":{},"injectables/SizesRepositoryService.html":{},"injectables/UserAchievementsRepositoryService.html":{},"injectables/UserAchievementsService.html":{},"injectables/UserProjsRepositoryService.html":{},"injectables/UsersRepositoryService.html":{}}}],["provideeventplugins",{"_index":2714,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providehttpclient(withinterceptorsfromdi",{"_index":2710,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouter(routes",{"_index":2713,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":1536,"title":{},"body":{"components/FilterByInputComponent.html":{},"miscellaneous/variables.html":{}}}],["providezonechangedetection",{"_index":2711,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":530,"title":{},"body":{"injectables/AuthProjService.html":{},"components/ButtonComponent.html":{},"interfaces/CartItem.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/PageCartComponent.html":{}}}],["put(`${this.baseurl}/unlock/${userprojid}/${achievementid",{"_index":2401,"title":{},"body":{"injectables/UserAchievementsService.html":{}}}],["quantity",{"_index":813,"title":{},"body":{"interfaces/CartItem.html":{},"interfaces/IAddToCartRequest.html":{},"interfaces/ICartItem.html":{},"interfaces/IDpOrderDetail.html":{},"interfaces/IUpdateCartRequest.html":{},"components/PageCartComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"injectables/ShopCartRepositoryService.html":{}}}],["radius",{"_index":159,"title":{},"body":{"components/AboutComponent.html":{},"components/ButtonComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/PageCartComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/UserPageComponent.html":{}}}],["radius('l",{"_index":162,"title":{},"body":{"components/AboutComponent.html":{}}}],["ratio",{"_index":2085,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{}}}],["reactive",{"_index":115,"title":{},"body":{"components/AboutComponent.html":{}}}],["reactiveformsmodule",{"_index":1069,"title":{},"body":{"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{}}}],["read",{"_index":1130,"title":{},"body":{"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/PageComponent.html":{}}}],["readonly",{"_index":37,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"interfaces/CartItem.html":{},"injectables/ConfigService.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"injectables/UserAchievementsService.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{}}}],["recommend",{"_index":1938,"title":{},"body":{"components/PageComponent.html":{}}}],["recordachievement",{"_index":2291,"title":{},"body":{"components/ThemeToggleComponent.html":{}}}],["recordachievement(userprojid",{"_index":2294,"title":{},"body":{"components/ThemeToggleComponent.html":{}}}],["reference",{"_index":2695,"title":{},"body":{"index.html":{}}}],["references",{"_index":2692,"title":{},"body":{"index.html":{}}}],["register",{"_index":317,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"injectables/AuthProjRepositoryService.html":{},"injectables/AuthProjService.html":{},"injectables/AuthRepositoryService.html":{},"injectables/AuthService.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"injectables/ConfigService.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{}}}],["register'},{'name",{"_index":315,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{}}}],["register(user",{"_index":574,"title":{},"body":{"injectables/AuthRepositoryService.html":{},"injectables/AuthService.html":{}}}],["register(userproj",{"_index":522,"title":{},"body":{"injectables/AuthProjRepositoryService.html":{},"injectables/AuthProjService.html":{}}}],["register.component.css",{"_index":2178,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.css,../../../styles/root.css",{"_index":2170,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.html",{"_index":2171,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registercomponent",{"_index":314,"title":{"components/RegisterComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{},"coverage.html":{}}}],["registerfailed",{"_index":963,"title":{},"body":{"injectables/ConfigService.html":{}}}],["registeronchange",{"_index":1549,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["registeronchange(fn",{"_index":1563,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["registerontouched",{"_index":1550,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["registerontouched(fn",{"_index":1566,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["registerprojcomponent",{"_index":316,"title":{"components/RegisterProjComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{},"coverage.html":{}}}],["registersuccess",{"_index":916,"title":{},"body":{"injectables/ConfigService.html":{}}}],["relative",{"_index":2083,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{}}}],["reload",{"_index":2644,"title":{},"body":{"index.html":{}}}],["removefromcart",{"_index":1026,"title":{},"body":{"injectables/ConfigService.html":{},"components/PageCartComponent.html":{},"injectables/ShopCartRepositoryService.html":{},"injectables/ShopCartService.html":{}}}],["removefromcart(item",{"_index":848,"title":{},"body":{"interfaces/CartItem.html":{},"components/PageCartComponent.html":{}}}],["removefromcart(request",{"_index":2213,"title":{},"body":{"injectables/ShopCartRepositoryService.html":{},"injectables/ShopCartService.html":{}}}],["removefromcartfailed",{"_index":987,"title":{},"body":{"injectables/ConfigService.html":{}}}],["removefromcartsuccess",{"_index":934,"title":{},"body":{"injectables/ConfigService.html":{}}}],["removeimage",{"_index":1210,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["render",{"_index":1946,"title":{},"body":{"components/PageComponent.html":{}}}],["repositories/achievements",{"_index":437,"title":{},"body":{"components/AchievmentsPageForUserComponent.html":{}}}],["repositories/auth",{"_index":1780,"title":{},"body":{"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{}}}],["repositories/categories",{"_index":1147,"title":{},"body":{"components/DialogCategoryComponent.html":{},"components/UserPageComponent.html":{}}}],["repositories/images",{"_index":743,"title":{},"body":{"components/CarouselImgComponent.html":{},"components/DialogImageComponent.html":{},"components/UserPageComponent.html":{}}}],["repositories/products",{"_index":1346,"title":{},"body":{"components/DialogProductComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/UserPageComponent.html":{}}}],["repositories/shop",{"_index":802,"title":{},"body":{"interfaces/CartItem.html":{},"components/PageCartComponent.html":{},"components/PageItemFromCatalogComponent.html":{}}}],["repositories/user",{"_index":434,"title":{},"body":{"components/AchievmentsPageForUserComponent.html":{},"components/CardItemComponent.html":{},"interfaces/CartItem.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/LoginComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageProjComponent.html":{}}}],["repository.service",{"_index":436,"title":{},"body":{"components/AchievmentsPageForUserComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"interfaces/CartItem.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"injectables/ProductsRepositoryService.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"injectables/ShopCartRepositoryService.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{}}}],["repository.service.ts",{"_index":331,"title":{},"body":{"injectables/AchievementsRepositoryService.html":{},"injectables/AuthProjRepositoryService.html":{},"injectables/AuthRepositoryService.html":{},"injectables/CategoriesRepositoryService.html":{},"injectables/ImagesRepositoryService.html":{},"injectables/OrderCompositionsRepositoryService.html":{},"injectables/OrderRepositoryService.html":{},"injectables/ProductAttributesRepositoryService.html":{},"injectables/ProductsRepositoryService.html":{},"injectables/ShopCartRepositoryService.html":{},"injectables/SizesRepositoryService.html":{},"injectables/UserAchievementsRepositoryService.html":{},"injectables/UserProjsRepositoryService.html":{},"injectables/UsersRepositoryService.html":{},"coverage.html":{}}}],["repository.service.ts:10",{"_index":339,"title":{},"body":{"injectables/AchievementsRepositoryService.html":{},"injectables/UserAchievementsRepositoryService.html":{}}}],["repository.service.ts:11",{"_index":2134,"title":{},"body":{"injectables/ProductsRepositoryService.html":{}}}],["repository.service.ts:114",{"_index":2214,"title":{},"body":{"injectables/ShopCartRepositoryService.html":{}}}],["repository.service.ts:12",{"_index":519,"title":{},"body":{"injectables/AuthProjRepositoryService.html":{},"injectables/AuthRepositoryService.html":{},"injectables/CategoriesRepositoryService.html":{},"injectables/ImagesRepositoryService.html":{},"injectables/OrderCompositionsRepositoryService.html":{},"injectables/OrderRepositoryService.html":{},"injectables/ProductAttributesRepositoryService.html":{},"injectables/SizesRepositoryService.html":{},"injectables/UserProjsRepositoryService.html":{},"injectables/UsersRepositoryService.html":{}}}],["repository.service.ts:124",{"_index":2209,"title":{},"body":{"injectables/ShopCartRepositoryService.html":{}}}],["repository.service.ts:128",{"_index":2207,"title":{},"body":{"injectables/ShopCartRepositoryService.html":{}}}],["repository.service.ts:13",{"_index":351,"title":{},"body":{"injectables/AchievementsRepositoryService.html":{},"injectables/ImagesRepositoryService.html":{}}}],["repository.service.ts:15",{"_index":2204,"title":{},"body":{"injectables/ShopCartRepositoryService.html":{},"injectables/UserAchievementsRepositoryService.html":{}}}],["repository.service.ts:16",{"_index":523,"title":{},"body":{"injectables/AuthProjRepositoryService.html":{},"injectables/AuthRepositoryService.html":{},"injectables/CategoriesRepositoryService.html":{},"injectables/OrderCompositionsRepositoryService.html":{},"injectables/OrderRepositoryService.html":{},"injectables/ProductAttributesRepositoryService.html":{},"injectables/ProductsRepositoryService.html":{},"injectables/SizesRepositoryService.html":{},"injectables/UserProjsRepositoryService.html":{},"injectables/UsersRepositoryService.html":{}}}],["repository.service.ts:17",{"_index":350,"title":{},"body":{"injectables/AchievementsRepositoryService.html":{},"injectables/ImagesRepositoryService.html":{}}}],["repository.service.ts:19",{"_index":2351,"title":{},"body":{"injectables/UserAchievementsRepositoryService.html":{}}}],["repository.service.ts:20",{"_index":521,"title":{},"body":{"injectables/AuthProjRepositoryService.html":{},"injectables/AuthRepositoryService.html":{},"injectables/CategoriesRepositoryService.html":{},"injectables/OrderCompositionsRepositoryService.html":{},"injectables/OrderRepositoryService.html":{},"injectables/ProductAttributesRepositoryService.html":{},"injectables/SizesRepositoryService.html":{},"injectables/UserProjsRepositoryService.html":{},"injectables/UsersRepositoryService.html":{}}}],["repository.service.ts:21",{"_index":342,"title":{},"body":{"injectables/AchievementsRepositoryService.html":{}}}],["repository.service.ts:22",{"_index":2210,"title":{},"body":{"injectables/ShopCartRepositoryService.html":{}}}],["repository.service.ts:23",{"_index":2348,"title":{},"body":{"injectables/UserAchievementsRepositoryService.html":{}}}],["repository.service.ts:24",{"_index":901,"title":{},"body":{"injectables/CategoriesRepositoryService.html":{},"injectables/OrderCompositionsRepositoryService.html":{},"injectables/OrderRepositoryService.html":{},"injectables/ProductAttributesRepositoryService.html":{},"injectables/SizesRepositoryService.html":{},"injectables/UserProjsRepositoryService.html":{},"injectables/UsersRepositoryService.html":{}}}],["repository.service.ts:25",{"_index":353,"title":{},"body":{"injectables/AchievementsRepositoryService.html":{}}}],["repository.service.ts:26",{"_index":1722,"title":{},"body":{"injectables/ImagesRepositoryService.html":{}}}],["repository.service.ts:27",{"_index":2355,"title":{},"body":{"injectables/UserAchievementsRepositoryService.html":{}}}],["repository.service.ts:28",{"_index":898,"title":{},"body":{"injectables/CategoriesRepositoryService.html":{},"injectables/OrderCompositionsRepositoryService.html":{},"injectables/OrderRepositoryService.html":{},"injectables/ProductAttributesRepositoryService.html":{},"injectables/SizesRepositoryService.html":{},"injectables/UserProjsRepositoryService.html":{},"injectables/UsersRepositoryService.html":{}}}],["repository.service.ts:29",{"_index":347,"title":{},"body":{"injectables/AchievementsRepositoryService.html":{}}}],["repository.service.ts:31",{"_index":2142,"title":{},"body":{"injectables/ProductsRepositoryService.html":{},"injectables/UserAchievementsRepositoryService.html":{}}}],["repository.service.ts:42",{"_index":2353,"title":{},"body":{"injectables/UserAchievementsRepositoryService.html":{}}}],["repository.service.ts:44",{"_index":2138,"title":{},"body":{"injectables/ProductsRepositoryService.html":{}}}],["repository.service.ts:48",{"_index":2144,"title":{},"body":{"injectables/ProductsRepositoryService.html":{}}}],["repository.service.ts:49",{"_index":1725,"title":{},"body":{"injectables/ImagesRepositoryService.html":{}}}],["repository.service.ts:52",{"_index":2140,"title":{},"body":{"injectables/ProductsRepositoryService.html":{}}}],["repository.service.ts:55",{"_index":1723,"title":{},"body":{"injectables/ImagesRepositoryService.html":{},"injectables/ShopCartRepositoryService.html":{}}}],["repository.service.ts:56",{"_index":2136,"title":{},"body":{"injectables/ProductsRepositoryService.html":{}}}],["repository.service.ts:59",{"_index":1724,"title":{},"body":{"injectables/ImagesRepositoryService.html":{}}}],["repository.service.ts:70",{"_index":2205,"title":{},"body":{"injectables/ShopCartRepositoryService.html":{}}}],["repository.service.ts:71",{"_index":1720,"title":{},"body":{"injectables/ImagesRepositoryService.html":{}}}],["repository.service.ts:80",{"_index":1726,"title":{},"body":{"injectables/ImagesRepositoryService.html":{}}}],["repository.service.ts:86",{"_index":2212,"title":{},"body":{"injectables/ShopCartRepositoryService.html":{}}}],["repository.service.ts:89",{"_index":1721,"title":{},"body":{"injectables/ImagesRepositoryService.html":{}}}],["repository.service.ts:9",{"_index":516,"title":{},"body":{"injectables/AuthProjRepositoryService.html":{},"injectables/AuthRepositoryService.html":{},"injectables/CategoriesRepositoryService.html":{},"injectables/OrderCompositionsRepositoryService.html":{},"injectables/OrderRepositoryService.html":{},"injectables/ProductAttributesRepositoryService.html":{},"injectables/SizesRepositoryService.html":{},"injectables/UserProjsRepositoryService.html":{},"injectables/UsersRepositoryService.html":{}}}],["repository.service.ts:96",{"_index":2206,"title":{},"body":{"injectables/ShopCartRepositoryService.html":{}}}],["request",{"_index":873,"title":{},"body":{"interfaces/CartItem.html":{},"injectables/DpImagesService.html":{},"injectables/ImagesRepositoryService.html":{},"components/PageCartComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"injectables/ProductsRepositoryService.html":{},"injectables/ProductsService.html":{},"injectables/ShopCartRepositoryService.html":{},"injectables/ShopCartService.html":{}}}],["request).pipe",{"_index":1753,"title":{},"body":{"injectables/ImagesRepositoryService.html":{}}}],["request.dpimagetitle",{"_index":1406,"title":{},"body":{"injectables/DpImagesService.html":{}}}],["request.dpproductid.tostring",{"_index":1404,"title":{},"body":{"injectables/DpImagesService.html":{}}}],["request.file",{"_index":1408,"title":{},"body":{"injectables/DpImagesService.html":{}}}],["request.productid",{"_index":2237,"title":{},"body":{"injectables/ShopCartRepositoryService.html":{}}}],["request.quantity",{"_index":2240,"title":{},"body":{"injectables/ShopCartRepositoryService.html":{}}}],["request.sizeid",{"_index":2238,"title":{},"body":{"injectables/ShopCartRepositoryService.html":{}}}],["requests",{"_index":1735,"title":{},"body":{"injectables/ImagesRepositoryService.html":{}}}],["required",{"_index":641,"title":{},"body":{"components/ButtonComponent.html":{}}}],["reset",{"_index":2292,"title":{},"body":{"components/ThemeToggleComponent.html":{}}}],["resettheme",{"_index":1036,"title":{},"body":{"injectables/ConfigService.html":{}}}],["resetthemesuccess",{"_index":946,"title":{},"body":{"injectables/ConfigService.html":{}}}],["resources",{"_index":2688,"title":{},"body":{"index.html":{}}}],["response",{"_index":497,"title":{},"body":{"components/AlertDeleteComponent.html":{},"interfaces/CartItem.html":{},"components/IconTrashComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/PageCartComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{}}}],["response.orderid",{"_index":870,"title":{},"body":{"interfaces/CartItem.html":{},"components/PageCartComponent.html":{}}}],["response.success",{"_index":876,"title":{},"body":{"interfaces/CartItem.html":{},"components/PageCartComponent.html":{}}}],["response.token",{"_index":557,"title":{},"body":{"injectables/AuthProjService.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{}}}],["response.userprojid",{"_index":2181,"title":{},"body":{"components/RegisterComponent.html":{}}}],["response.userprojid.tostring",{"_index":560,"title":{},"body":{"injectables/AuthProjService.html":{}}}],["responsealert",{"_index":1697,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["responsetype",{"_index":1401,"title":{},"body":{"injectables/DpImagesService.html":{},"injectables/ShopCartService.html":{}}}],["rest",{"_index":131,"title":{},"body":{"components/AboutComponent.html":{}}}],["restful",{"_index":119,"title":{},"body":{"components/AboutComponent.html":{}}}],["result",{"_index":2408,"title":{},"body":{"injectables/UserAchievementsService.html":{}}}],["results",{"_index":325,"title":{},"body":{"components/AboutComponent.html":{},"injectables/AchievementsRepositoryService.html":{},"injectables/AchievementsService.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"injectables/AuthProjRepositoryService.html":{},"injectables/AuthProjService.html":{},"injectables/AuthRepositoryService.html":{},"injectables/AuthService.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"interfaces/CartItem.html":{},"injectables/CategoriesRepositoryService.html":{},"injectables/ConfigService.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"injectables/DpCategoriesService.html":{},"injectables/DpImagesService.html":{},"injectables/DpOrderCompositionsService.html":{},"injectables/DpOrdersService.html":{},"injectables/DpProductAttributesService.html":{},"injectables/DpSizesService.html":{},"injectables/DpUserProjsService.html":{},"injectables/DpUsersService.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IAchievement.html":{},"interfaces/IAddToCartRequest.html":{},"interfaces/ICartItem.html":{},"interfaces/ICartViewModel.html":{},"interfaces/ICreateDpImageRequest.html":{},"interfaces/IDpCategory.html":{},"interfaces/IDpImage.html":{},"interfaces/IDpOrder.html":{},"interfaces/IDpOrderComposition.html":{},"interfaces/IDpOrderDetail.html":{},"interfaces/IDpProduct.html":{},"interfaces/IDpProductAttribute.html":{},"interfaces/IDpSize.html":{},"interfaces/IDpUser.html":{},"interfaces/IDpUserProj.html":{},"interfaces/IRemoveFromCartRequest.html":{},"interfaces/IUpdateCartRequest.html":{},"interfaces/IUpdateDpImageRequest.html":{},"interfaces/IUserHasAchievement.html":{},"components/IconTrashComponent.html":{},"injectables/ImagesRepositoryService.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"injectables/OrderCompositionsRepositoryService.html":{},"injectables/OrderRepositoryService.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"injectables/ProductAttributesRepositoryService.html":{},"injectables/ProductsRepositoryService.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"injectables/ShopCartRepositoryService.html":{},"injectables/ShopCartService.html":{},"injectables/SizesRepositoryService.html":{},"components/ThemeToggleComponent.html":{},"interfaces/User.html":{},"injectables/UserAchievementsRepositoryService.html":{},"injectables/UserAchievementsService.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{},"injectables/UserProjsRepositoryService.html":{},"injectables/UsersRepositoryService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results.foreach",{"_index":772,"title":{},"body":{"components/CarouselImgComponent.html":{}}}],["results.map",{"_index":1740,"title":{},"body":{"injectables/ImagesRepositoryService.html":{}}}],["retrieving",{"_index":2234,"title":{},"body":{"injectables/ShopCartRepositoryService.html":{}}}],["return",{"_index":359,"title":{},"body":{"injectables/AchievementsRepositoryService.html":{},"injectables/AchievementsService.html":{},"components/AchievmentsPageForUserComponent.html":{},"injectables/AuthProjRepositoryService.html":{},"injectables/AuthProjService.html":{},"injectables/AuthRepositoryService.html":{},"injectables/AuthService.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"interfaces/CartItem.html":{},"injectables/CategoriesRepositoryService.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"injectables/DpCategoriesService.html":{},"injectables/DpImagesService.html":{},"injectables/DpOrderCompositionsService.html":{},"injectables/DpOrdersService.html":{},"injectables/DpProductAttributesService.html":{},"injectables/DpSizesService.html":{},"injectables/DpUserProjsService.html":{},"injectables/DpUsersService.html":{},"components/FilterByInputComponent.html":{},"components/IconTrashComponent.html":{},"injectables/ImagesRepositoryService.html":{},"components/LoginComponent.html":{},"injectables/OrderCompositionsRepositoryService.html":{},"injectables/OrderRepositoryService.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"injectables/ProductAttributesRepositoryService.html":{},"injectables/ProductsRepositoryService.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"injectables/ShopCartRepositoryService.html":{},"injectables/ShopCartService.html":{},"injectables/SizesRepositoryService.html":{},"components/ThemeToggleComponent.html":{},"injectables/UserAchievementsRepositoryService.html":{},"injectables/UserAchievementsService.html":{},"components/UserPageComponent.html":{},"injectables/UserProjsRepositoryService.html":{},"injectables/UsersRepositoryService.html":{}}}],["returns",{"_index":60,"title":{},"body":{"components/AboutComponent.html":{},"injectables/AchievementsRepositoryService.html":{},"injectables/AchievementsService.html":{},"components/AchievmentsPageForUserComponent.html":{},"injectables/AuthProjRepositoryService.html":{},"injectables/AuthProjService.html":{},"injectables/AuthRepositoryService.html":{},"injectables/AuthService.html":{},"components/BackButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"injectables/CategoriesRepositoryService.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"injectables/DpCategoriesService.html":{},"injectables/DpImagesService.html":{},"injectables/DpOrderCompositionsService.html":{},"injectables/DpOrdersService.html":{},"injectables/DpProductAttributesService.html":{},"injectables/DpSizesService.html":{},"injectables/DpUserProjsService.html":{},"injectables/DpUsersService.html":{},"components/FilterByInputComponent.html":{},"components/IconTrashComponent.html":{},"injectables/ImagesRepositoryService.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"injectables/OrderCompositionsRepositoryService.html":{},"injectables/OrderRepositoryService.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"injectables/ProductAttributesRepositoryService.html":{},"injectables/ProductsRepositoryService.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"injectables/ShopCartRepositoryService.html":{},"injectables/ShopCartService.html":{},"injectables/SizesRepositoryService.html":{},"components/ThemeToggleComponent.html":{},"injectables/UserAchievementsRepositoryService.html":{},"injectables/UserAchievementsService.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{},"injectables/UserProjsRepositoryService.html":{},"injectables/UsersRepositoryService.html":{}}}],["review",{"_index":1951,"title":{},"body":{"components/PageComponent.html":{}}}],["rgba(0",{"_index":658,"title":{},"body":{"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/PageItemFromCatalogComponent.html":{}}}],["rgba(0,0,0,0.08",{"_index":235,"title":{},"body":{"components/AboutComponent.html":{}}}],["rgba(0,0,0,0.16",{"_index":240,"title":{},"body":{"components/AboutComponent.html":{}}}],["rgba(255",{"_index":2108,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{}}}],["right",{"_index":231,"title":{},"body":{"components/AboutComponent.html":{},"components/HeaderComponent.html":{},"components/PageCartComponent.html":{},"components/PageComponent.html":{}}}],["root",{"_index":357,"title":{},"body":{"injectables/AchievementsRepositoryService.html":{},"injectables/AchievementsService.html":{},"components/AppComponent.html":{},"injectables/AuthProjRepositoryService.html":{},"injectables/AuthProjService.html":{},"injectables/AuthRepositoryService.html":{},"injectables/AuthService.html":{},"injectables/CategoriesRepositoryService.html":{},"injectables/ConfigService.html":{},"injectables/DpCategoriesService.html":{},"injectables/DpImagesService.html":{},"injectables/DpOrderCompositionsService.html":{},"injectables/DpOrdersService.html":{},"injectables/DpProductAttributesService.html":{},"injectables/DpSizesService.html":{},"injectables/DpUserProjsService.html":{},"injectables/DpUsersService.html":{},"injectables/ImagesRepositoryService.html":{},"injectables/OrderCompositionsRepositoryService.html":{},"injectables/OrderRepositoryService.html":{},"injectables/ProductAttributesRepositoryService.html":{},"injectables/ProductsRepositoryService.html":{},"injectables/ProductsService.html":{},"injectables/ShopCartRepositoryService.html":{},"injectables/ShopCartService.html":{},"injectables/SizesRepositoryService.html":{},"injectables/UserAchievementsRepositoryService.html":{},"injectables/UserAchievementsService.html":{},"injectables/UserProjsRepositoryService.html":{},"injectables/UsersRepositoryService.html":{}}}],["root'},{'name",{"_index":271,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{}}}],["route",{"_index":2019,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{}}}],["router",{"_index":48,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/BackButtonComponent.html":{},"components/CardItemComponent.html":{},"interfaces/CartItem.html":{},"components/IconTrashComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{},"miscellaneous/variables.html":{}}}],["routerlink",{"_index":22,"title":{},"body":{"components/AboutComponent.html":{}}}],["routermodule",{"_index":501,"title":{},"body":{"components/AppComponent.html":{}}}],["routeroutlet",{"_index":499,"title":{},"body":{"components/AppComponent.html":{}}}],["routertestingmodule",{"_index":2723,"title":{},"body":{"miscellaneous/variables.html":{}}}],["row",{"_index":220,"title":{},"body":{"components/AboutComponent.html":{},"components/PageItemFromCatalogComponent.html":{}}}],["run",{"_index":2637,"title":{},"body":{"index.html":{}}}],["runner",{"_index":2674,"title":{},"body":{"index.html":{}}}],["running",{"_index":2640,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":86,"title":{},"body":{"components/AboutComponent.html":{},"injectables/AchievementsRepositoryService.html":{},"injectables/AchievementsService.html":{},"components/AlertDeleteComponent.html":{},"injectables/AuthProjRepositoryService.html":{},"injectables/AuthProjService.html":{},"injectables/AuthRepositoryService.html":{},"injectables/AuthService.html":{},"components/CarouselImgComponent.html":{},"injectables/CategoriesRepositoryService.html":{},"components/DialogImageComponent.html":{},"injectables/DpCategoriesService.html":{},"injectables/DpImagesService.html":{},"injectables/DpOrderCompositionsService.html":{},"injectables/DpOrdersService.html":{},"injectables/DpProductAttributesService.html":{},"injectables/DpSizesService.html":{},"injectables/DpUserProjsService.html":{},"injectables/DpUsersService.html":{},"components/IconTrashComponent.html":{},"injectables/ImagesRepositoryService.html":{},"injectables/OrderCompositionsRepositoryService.html":{},"injectables/OrderRepositoryService.html":{},"components/PageCatalogItemComponent.html":{},"injectables/ProductAttributesRepositoryService.html":{},"injectables/ProductsRepositoryService.html":{},"injectables/ProductsService.html":{},"injectables/ShopCartRepositoryService.html":{},"injectables/ShopCartService.html":{},"injectables/SizesRepositoryService.html":{},"injectables/UserAchievementsRepositoryService.html":{},"injectables/UserAchievementsService.html":{},"injectables/UserProjsRepositoryService.html":{},"injectables/UsersRepositoryService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":549,"title":{},"body":{"injectables/AuthProjService.html":{},"injectables/AuthService.html":{}}}],["safeurl",{"_index":735,"title":{},"body":{"components/CarouselImgComponent.html":{},"components/PageItemFromCatalogComponent.html":{}}}],["safevalue",{"_index":1587,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["sample",{"_index":2715,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sanitizer",{"_index":719,"title":{},"body":{"components/CarouselImgComponent.html":{},"components/PageItemFromCatalogComponent.html":{}}}],["sans",{"_index":651,"title":{},"body":{"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/PageComponent.html":{}}}],["savedtheme",{"_index":2319,"title":{},"body":{"components/ThemeToggleComponent.html":{}}}],["scaffolding",{"_index":2649,"title":{},"body":{"index.html":{}}}],["scale(1.05",{"_index":241,"title":{},"body":{"components/AboutComponent.html":{},"components/PageItemFromCatalogComponent.html":{}}}],["schemas",{"_index":101,"title":{},"body":{"components/AboutComponent.html":{},"components/CardItemComponent.html":{},"interfaces/CartItem.html":{},"components/DialogProductComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{}}}],["schematics",{"_index":2656,"title":{},"body":{"index.html":{}}}],["scheme",{"_index":2304,"title":{},"body":{"components/ThemeToggleComponent.html":{}}}],["search",{"_index":1557,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["searchquery",{"_index":1553,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["secondary",{"_index":644,"title":{},"body":{"components/ButtonComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["section",{"_index":184,"title":{},"body":{"components/AboutComponent.html":{},"components/PageCartComponent.html":{}}}],["securitycontext",{"_index":2030,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{}}}],["selectedfile",{"_index":1207,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["selectedsizeid",{"_index":2014,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"interfaces/CartItem.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{}}}],["serif",{"_index":655,"title":{},"body":{"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/PageComponent.html":{}}}],["serveonce",{"_index":2639,"title":{},"body":{"index.html":{}}}],["server",{"_index":2635,"title":{},"body":{"index.html":{}}}],["servererror",{"_index":1061,"title":{},"body":{"injectables/ConfigService.html":{}}}],["service",{"_index":2622,"title":{},"body":{"dependencies.html":{}}}],["services",{"_index":1970,"title":{},"body":{"components/PageComponent.html":{}}}],["services/achievements.service",{"_index":355,"title":{},"body":{"injectables/AchievementsRepositoryService.html":{}}}],["services/auth",{"_index":441,"title":{},"body":{"components/AchievmentsPageForUserComponent.html":{},"injectables/AuthProjRepositoryService.html":{},"components/LoginProjComponent.html":{},"components/RegisterProjComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{}}}],["services/auth.service",{"_index":98,"title":{},"body":{"components/AboutComponent.html":{},"injectables/AuthRepositoryService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/UserPageComponent.html":{}}}],["services/config.service",{"_index":88,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/CardItemComponent.html":{},"interfaces/CartItem.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/LoginComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageProjComponent.html":{}}}],["services/dp",{"_index":903,"title":{},"body":{"injectables/CategoriesRepositoryService.html":{},"injectables/ImagesRepositoryService.html":{},"injectables/OrderCompositionsRepositoryService.html":{},"injectables/OrderRepositoryService.html":{},"injectables/ProductAttributesRepositoryService.html":{},"injectables/ProductsRepositoryService.html":{},"injectables/ShopCartRepositoryService.html":{},"injectables/SizesRepositoryService.html":{},"injectables/UserProjsRepositoryService.html":{},"injectables/UsersRepositoryService.html":{}}}],["services/user",{"_index":89,"title":{},"body":{"components/AboutComponent.html":{},"components/CardItemComponent.html":{},"interfaces/CartItem.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/ThemeToggleComponent.html":{},"injectables/UserAchievementsRepositoryService.html":{},"components/UserPageProjComponent.html":{}}}],["serviceunavailable",{"_index":1062,"title":{},"body":{"injectables/ConfigService.html":{}}}],["setalwaysfailmode",{"_index":2371,"title":{},"body":{"injectables/UserAchievementsService.html":{}}}],["setalwaysfailmode(value",{"_index":2385,"title":{},"body":{"injectables/UserAchievementsService.html":{}}}],["setauthenticated",{"_index":534,"title":{},"body":{"injectables/AuthProjService.html":{},"injectables/AuthService.html":{}}}],["setauthenticated(isauthenticated",{"_index":540,"title":{},"body":{"injectables/AuthProjService.html":{},"injectables/AuthService.html":{}}}],["setdisabledstate",{"_index":1551,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["setdisabledstate(isdisabled",{"_index":1568,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["setdisabledstate?(isdisabled",{"_index":1601,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["settimeout",{"_index":2183,"title":{},"body":{"components/RegisterComponent.html":{}}}],["shadow",{"_index":165,"title":{},"body":{"components/AboutComponent.html":{},"components/ButtonComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/PageCartComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/UserPageComponent.html":{}}}],["sharereplay",{"_index":1727,"title":{},"body":{"injectables/ImagesRepositoryService.html":{}}}],["sharereplay(1",{"_index":1731,"title":{},"body":{"injectables/ImagesRepositoryService.html":{}}}],["shop",{"_index":2218,"title":{},"body":{"injectables/ShopCartRepositoryService.html":{},"injectables/ShopCartService.html":{},"coverage.html":{}}}],["shopcartrepositoryservice",{"_index":801,"title":{"injectables/ShopCartRepositoryService.html":{}},"body":{"interfaces/CartItem.html":{},"components/PageCartComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"injectables/ShopCartRepositoryService.html":{},"coverage.html":{}}}],["shopcartservice",{"_index":2203,"title":{"injectables/ShopCartService.html":{}},"body":{"injectables/ShopCartRepositoryService.html":{},"injectables/ShopCartService.html":{},"coverage.html":{}}}],["shopping_cart",{"_index":2216,"title":{},"body":{"injectables/ShopCartRepositoryService.html":{}}}],["showerror",{"_index":1086,"title":{},"body":{"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{}}}],["showerror(message",{"_index":1107,"title":{},"body":{"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{}}}],["shownotification",{"_index":1696,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["showsuccess",{"_index":1087,"title":{},"body":{"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{}}}],["showsuccess(message",{"_index":1110,"title":{},"body":{"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{}}}],["showwarning",{"_index":1088,"title":{},"body":{"components/DialogCategoryComponent.html":{},"components/DialogProductComponent.html":{}}}],["showwarning(message",{"_index":1112,"title":{},"body":{"components/DialogCategoryComponent.html":{},"components/DialogProductComponent.html":{}}}],["simplechanges",{"_index":729,"title":{},"body":{"components/CarouselImgComponent.html":{}}}],["simulateserverfailure",{"_index":2372,"title":{},"body":{"injectables/UserAchievementsService.html":{}}}],["size",{"_index":187,"title":{},"body":{"components/AboutComponent.html":{},"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IDpCategory.html":{},"interfaces/IDpSize.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/UserPageComponent.html":{},"miscellaneous/variables.html":{}}}],["size('l",{"_index":204,"title":{},"body":{"components/AboutComponent.html":{}}}],["size('m",{"_index":189,"title":{},"body":{"components/AboutComponent.html":{}}}],["sizeid",{"_index":853,"title":{},"body":{"interfaces/CartItem.html":{},"components/DialogCategoryComponent.html":{},"interfaces/IAddToCartRequest.html":{},"interfaces/ICartItem.html":{},"interfaces/IDpCategory.html":{},"interfaces/IDpOrderDetail.html":{},"interfaces/IDpSize.html":{},"interfaces/IRemoveFromCartRequest.html":{},"interfaces/IUpdateCartRequest.html":{},"components/PageCartComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"injectables/ShopCartRepositoryService.html":{},"injectables/ShopCartService.html":{}}}],["sizename",{"_index":1658,"title":{},"body":{"interfaces/IDpOrderDetail.html":{}}}],["sizes.service",{"_index":2277,"title":{},"body":{"injectables/SizesRepositoryService.html":{}}}],["sizes.service.ts",{"_index":1474,"title":{},"body":{"injectables/DpSizesService.html":{},"coverage.html":{}}}],["sizes.service.ts:11",{"_index":1480,"title":{},"body":{"injectables/DpSizesService.html":{}}}],["sizes.service.ts:15",{"_index":1487,"title":{},"body":{"injectables/DpSizesService.html":{}}}],["sizes.service.ts:19",{"_index":1489,"title":{},"body":{"injectables/DpSizesService.html":{}}}],["sizes.service.ts:23",{"_index":1483,"title":{},"body":{"injectables/DpSizesService.html":{}}}],["sizes.service.ts:27",{"_index":1491,"title":{},"body":{"injectables/DpSizesService.html":{}}}],["sizes.service.ts:31",{"_index":1486,"title":{},"body":{"injectables/DpSizesService.html":{}}}],["sizesrepositoryservice",{"_index":2274,"title":{"injectables/SizesRepositoryService.html":{}},"body":{"injectables/SizesRepositoryService.html":{},"coverage.html":{}}}],["sizing",{"_index":169,"title":{},"body":{"components/AboutComponent.html":{},"components/CarouselImgComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/UserPageComponent.html":{}}}],["small",{"_index":629,"title":{},"body":{"components/ButtonComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["solid",{"_index":225,"title":{},"body":{"components/AboutComponent.html":{},"components/HeaderComponent.html":{},"components/PageItemFromCatalogComponent.html":{}}}],["sota6sifront",{"_index":508,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AboutComponent.html":{},"injectables/AchievementsRepositoryService.html":{},"injectables/AchievementsService.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"injectables/AuthProjRepositoryService.html":{},"injectables/AuthProjService.html":{},"injectables/AuthRepositoryService.html":{},"injectables/AuthService.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"interfaces/CartItem.html":{},"injectables/CategoriesRepositoryService.html":{},"injectables/ConfigService.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"injectables/DpCategoriesService.html":{},"injectables/DpImagesService.html":{},"injectables/DpOrderCompositionsService.html":{},"injectables/DpOrdersService.html":{},"injectables/DpProductAttributesService.html":{},"injectables/DpSizesService.html":{},"injectables/DpUserProjsService.html":{},"injectables/DpUsersService.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IAchievement.html":{},"interfaces/IAddToCartRequest.html":{},"interfaces/ICartItem.html":{},"interfaces/ICartViewModel.html":{},"interfaces/ICreateDpImageRequest.html":{},"interfaces/IDpCategory.html":{},"interfaces/IDpImage.html":{},"interfaces/IDpOrder.html":{},"interfaces/IDpOrderComposition.html":{},"interfaces/IDpOrderDetail.html":{},"interfaces/IDpProduct.html":{},"interfaces/IDpProductAttribute.html":{},"interfaces/IDpSize.html":{},"interfaces/IDpUser.html":{},"interfaces/IDpUserProj.html":{},"interfaces/IRemoveFromCartRequest.html":{},"interfaces/IUpdateCartRequest.html":{},"interfaces/IUpdateDpImageRequest.html":{},"interfaces/IUserHasAchievement.html":{},"components/IconTrashComponent.html":{},"injectables/ImagesRepositoryService.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"injectables/OrderCompositionsRepositoryService.html":{},"injectables/OrderRepositoryService.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"injectables/ProductAttributesRepositoryService.html":{},"injectables/ProductsRepositoryService.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"injectables/ShopCartRepositoryService.html":{},"injectables/ShopCartService.html":{},"injectables/SizesRepositoryService.html":{},"components/ThemeToggleComponent.html":{},"interfaces/User.html":{},"injectables/UserAchievementsRepositoryService.html":{},"injectables/UserAchievementsService.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{},"injectables/UserProjsRepositoryService.html":{},"injectables/UsersRepositoryService.html":{},"index.html":{}}}],["space",{"_index":1615,"title":{},"body":{"components/HeaderComponent.html":{},"components/PageItemFromCatalogComponent.html":{}}}],["speed",{"_index":2668,"title":{},"body":{"index.html":{}}}],["spy",{"_index":2728,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.config.ts",{"_index":2707,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../button.stories.ts",{"_index":2701,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../card",{"_index":2702,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../header.stories.ts",{"_index":2703,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../page.stories.ts",{"_index":2704,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":498,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:18",{"_index":509,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:19",{"_index":507,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.ts",{"_index":2559,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/data/components/alert",{"_index":478,"title":{},"body":{"components/AlertDeleteComponent.html":{},"coverage.html":{}}}],["src/app/data/components/back",{"_index":594,"title":{},"body":{"components/BackButtonComponent.html":{},"coverage.html":{}}}],["src/app/data/components/card",{"_index":670,"title":{},"body":{"components/CardItemComponent.html":{},"coverage.html":{}}}],["src/app/data/components/carousel",{"_index":703,"title":{},"body":{"components/CarouselImgComponent.html":{},"coverage.html":{}}}],["src/app/data/components/dialog",{"_index":1065,"title":{},"body":{"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"coverage.html":{}}}],["src/app/data/components/filter",{"_index":1532,"title":{},"body":{"components/FilterByInputComponent.html":{},"coverage.html":{}}}],["src/app/data/components/icon",{"_index":1690,"title":{},"body":{"components/IconTrashComponent.html":{},"coverage.html":{}}}],["src/app/data/components/loading/loading.component.ts",{"_index":1756,"title":{},"body":{"components/LoadingComponent.html":{},"coverage.html":{}}}],["src/app/data/components/loading/loading.component.ts:10",{"_index":1761,"title":{},"body":{"components/LoadingComponent.html":{}}}],["src/app/data/components/login",{"_index":1803,"title":{},"body":{"components/LoginProjComponent.html":{},"coverage.html":{}}}],["src/app/data/components/login/login.component.ts",{"_index":1762,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/data/components/login/login.component.ts:105",{"_index":1775,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/data/components/login/login.component.ts:38",{"_index":1779,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/data/components/login/login.component.ts:41",{"_index":1773,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/data/components/login/login.component.ts:53",{"_index":1776,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/data/components/navbar/navbar.component.ts",{"_index":1821,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["src/app/data/components/navbar/navbar.component.ts:32",{"_index":1833,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/data/components/navbar/navbar.component.ts:33",{"_index":1827,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/data/components/navbar/navbar.component.ts:41",{"_index":1831,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/data/components/navbar/navbar.component.ts:49",{"_index":1832,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/data/components/navbar/navbar.component.ts:53",{"_index":1830,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/data/components/navbar/navbar.component.ts:57",{"_index":1829,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/data/components/navbar/navbar.component.ts:62",{"_index":1828,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/data/components/register",{"_index":2188,"title":{},"body":{"components/RegisterProjComponent.html":{},"coverage.html":{}}}],["src/app/data/components/register/register.component.ts",{"_index":2169,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["src/app/data/components/register/register.component.ts:105",{"_index":2175,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/data/components/register/register.component.ts:37",{"_index":2177,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/data/components/register/register.component.ts:40",{"_index":2174,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/data/components/register/register.component.ts:51",{"_index":2176,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/data/components/theme",{"_index":2283,"title":{},"body":{"components/ThemeToggleComponent.html":{},"coverage.html":{}}}],["src/app/data/page/about/about.component.ts",{"_index":10,"title":{},"body":{"components/AboutComponent.html":{},"coverage.html":{}}}],["src/app/data/page/about/about.component.ts:38",{"_index":73,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/data/page/about/about.component.ts:39",{"_index":69,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/data/page/about/about.component.ts:40",{"_index":67,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/data/page/about/about.component.ts:41",{"_index":50,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/data/page/about/about.component.ts:47",{"_index":63,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/data/page/about/about.component.ts:51",{"_index":58,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/data/page/about/about.component.ts:57",{"_index":62,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/data/page/achievments",{"_index":387,"title":{},"body":{"components/AchievmentsPageForUserComponent.html":{},"coverage.html":{}}}],["src/app/data/page/page",{"_index":783,"title":{},"body":{"interfaces/CartItem.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"coverage.html":{}}}],["src/app/data/page/user",{"_index":2432,"title":{},"body":{"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{},"coverage.html":{}}}],["src/app/interface/iachievement.ts",{"_index":1622,"title":{},"body":{"interfaces/IAchievement.html":{},"coverage.html":{}}}],["src/app/interface/iaddtocartrequest.ts",{"_index":1627,"title":{},"body":{"interfaces/IAddToCartRequest.html":{},"coverage.html":{}}}],["src/app/interface/icartitem.ts",{"_index":1628,"title":{},"body":{"interfaces/ICartItem.html":{},"coverage.html":{}}}],["src/app/interface/icartviewmodel.ts",{"_index":1631,"title":{},"body":{"interfaces/ICartViewModel.html":{},"coverage.html":{}}}],["src/app/interface/icreatedpimagerequest.ts",{"_index":1634,"title":{},"body":{"interfaces/ICreateDpImageRequest.html":{},"coverage.html":{}}}],["src/app/interface/idpcategory.ts",{"_index":1635,"title":{},"body":{"interfaces/IDpCategory.html":{},"coverage.html":{}}}],["src/app/interface/idpimage.ts",{"_index":1638,"title":{},"body":{"interfaces/IDpImage.html":{},"coverage.html":{}}}],["src/app/interface/idporder.ts",{"_index":1644,"title":{},"body":{"interfaces/IDpOrder.html":{},"coverage.html":{}}}],["src/app/interface/idpordercomposition.ts",{"_index":1650,"title":{},"body":{"interfaces/IDpOrderComposition.html":{},"coverage.html":{}}}],["src/app/interface/idporderdetail.ts",{"_index":1657,"title":{},"body":{"interfaces/IDpOrderDetail.html":{},"coverage.html":{}}}],["src/app/interface/idpproduct.ts",{"_index":1660,"title":{},"body":{"interfaces/IDpProduct.html":{},"coverage.html":{}}}],["src/app/interface/idpproductattribute.ts",{"_index":1664,"title":{},"body":{"interfaces/IDpProductAttribute.html":{},"coverage.html":{}}}],["src/app/interface/idpsize.ts",{"_index":1668,"title":{},"body":{"interfaces/IDpSize.html":{},"coverage.html":{}}}],["src/app/interface/idpuser.ts",{"_index":1671,"title":{},"body":{"interfaces/IDpUser.html":{},"coverage.html":{}}}],["src/app/interface/idpuserproj.ts",{"_index":1680,"title":{},"body":{"interfaces/IDpUserProj.html":{},"coverage.html":{}}}],["src/app/interface/iremovefromcartrequest.ts",{"_index":1684,"title":{},"body":{"interfaces/IRemoveFromCartRequest.html":{},"coverage.html":{}}}],["src/app/interface/iupdatecartrequest.ts",{"_index":1685,"title":{},"body":{"interfaces/IUpdateCartRequest.html":{},"coverage.html":{}}}],["src/app/interface/iupdatedpimagerequest.ts",{"_index":1686,"title":{},"body":{"interfaces/IUpdateDpImageRequest.html":{},"coverage.html":{}}}],["src/app/interface/iuserhasachievement.ts",{"_index":1688,"title":{},"body":{"interfaces/IUserHasAchievement.html":{},"coverage.html":{}}}],["src/app/repositories/achievements",{"_index":330,"title":{},"body":{"injectables/AchievementsRepositoryService.html":{},"coverage.html":{}}}],["src/app/repositories/auth",{"_index":513,"title":{},"body":{"injectables/AuthProjRepositoryService.html":{},"injectables/AuthRepositoryService.html":{},"coverage.html":{}}}],["src/app/repositories/categories",{"_index":886,"title":{},"body":{"injectables/CategoriesRepositoryService.html":{},"coverage.html":{}}}],["src/app/repositories/images",{"_index":1715,"title":{},"body":{"injectables/ImagesRepositoryService.html":{},"coverage.html":{}}}],["src/app/repositories/order",{"_index":1848,"title":{},"body":{"injectables/OrderCompositionsRepositoryService.html":{},"injectables/OrderRepositoryService.html":{},"coverage.html":{}}}],["src/app/repositories/product",{"_index":2119,"title":{},"body":{"injectables/ProductAttributesRepositoryService.html":{},"coverage.html":{}}}],["src/app/repositories/products",{"_index":2128,"title":{},"body":{"injectables/ProductsRepositoryService.html":{},"coverage.html":{}}}],["src/app/repositories/shop",{"_index":2195,"title":{},"body":{"injectables/ShopCartRepositoryService.html":{},"coverage.html":{}}}],["src/app/repositories/sizes",{"_index":2275,"title":{},"body":{"injectables/SizesRepositoryService.html":{},"coverage.html":{}}}],["src/app/repositories/user",{"_index":2340,"title":{},"body":{"injectables/UserAchievementsRepositoryService.html":{},"injectables/UserProjsRepositoryService.html":{},"coverage.html":{}}}],["src/app/repositories/users",{"_index":2546,"title":{},"body":{"injectables/UsersRepositoryService.html":{},"coverage.html":{}}}],["src/app/services/achievements.service.ts",{"_index":365,"title":{},"body":{"injectables/AchievementsService.html":{},"coverage.html":{}}}],["src/app/services/achievements.service.ts:10",{"_index":369,"title":{},"body":{"injectables/AchievementsService.html":{}}}],["src/app/services/achievements.service.ts:14",{"_index":373,"title":{},"body":{"injectables/AchievementsService.html":{}}}],["src/app/services/achievements.service.ts:18",{"_index":372,"title":{},"body":{"injectables/AchievementsService.html":{}}}],["src/app/services/achievements.service.ts:22",{"_index":370,"title":{},"body":{"injectables/AchievementsService.html":{}}}],["src/app/services/achievements.service.ts:26",{"_index":377,"title":{},"body":{"injectables/AchievementsService.html":{}}}],["src/app/services/achievements.service.ts:30",{"_index":371,"title":{},"body":{"injectables/AchievementsService.html":{}}}],["src/app/services/achievements.service.ts:35",{"_index":375,"title":{},"body":{"injectables/AchievementsService.html":{}}}],["src/app/services/auth",{"_index":528,"title":{},"body":{"injectables/AuthProjService.html":{},"coverage.html":{}}}],["src/app/services/auth.service.ts",{"_index":579,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/services/auth.service.ts:11",{"_index":586,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:12",{"_index":587,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:13",{"_index":580,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:17",{"_index":584,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:21",{"_index":583,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:37",{"_index":581,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:53",{"_index":582,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/config.service.ts",{"_index":910,"title":{},"body":{"injectables/ConfigService.html":{},"coverage.html":{}}}],["src/app/services/config.service.ts:59",{"_index":1040,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/services/config.service.ts:7",{"_index":1007,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/services/config.service.ts:79",{"_index":1064,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/services/dp",{"_index":1364,"title":{},"body":{"injectables/DpCategoriesService.html":{},"injectables/DpImagesService.html":{},"injectables/DpOrderCompositionsService.html":{},"injectables/DpOrdersService.html":{},"injectables/DpProductAttributesService.html":{},"injectables/DpSizesService.html":{},"injectables/DpUserProjsService.html":{},"injectables/DpUsersService.html":{},"injectables/ProductsService.html":{},"injectables/ShopCartService.html":{},"coverage.html":{}}}],["src/app/services/user",{"_index":2364,"title":{},"body":{"injectables/UserAchievementsService.html":{},"coverage.html":{}}}],["src/stories/button.component.ts",{"_index":611,"title":{},"body":{"components/ButtonComponent.html":{},"coverage.html":{}}}],["src/stories/button.component.ts:21",{"_index":625,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/stories/button.component.ts:25",{"_index":621,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/stories/button.component.ts:29",{"_index":632,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/stories/button.component.ts:37",{"_index":623,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/stories/button.component.ts:41",{"_index":634,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/stories/button.component.ts:43",{"_index":638,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/stories/button.stories.ts",{"_index":2587,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/stories/card",{"_index":2591,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/stories/header.component.ts",{"_index":1604,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/stories/header.component.ts:66",{"_index":1611,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/stories/header.component.ts:69",{"_index":1613,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/stories/header.component.ts:72",{"_index":1614,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/stories/header.component.ts:75",{"_index":1612,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/stories/header.stories.ts",{"_index":2595,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/stories/page.component.ts",{"_index":1935,"title":{},"body":{"components/PageComponent.html":{},"coverage.html":{}}}],["src/stories/page.component.ts:69",{"_index":1991,"title":{},"body":{"components/PageComponent.html":{}}}],["src/stories/page.component.ts:71",{"_index":1990,"title":{},"body":{"components/PageComponent.html":{}}}],["src/stories/page.component.ts:75",{"_index":1989,"title":{},"body":{"components/PageComponent.html":{}}}],["src/stories/page.component.ts:79",{"_index":1988,"title":{},"body":{"components/PageComponent.html":{}}}],["src/stories/page.stories.ts",{"_index":2598,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/stories/user.ts",{"_index":2339,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["standalone",{"_index":128,"title":{},"body":{"components/AboutComponent.html":{},"components/ButtonComponent.html":{},"components/CarouselImgComponent.html":{},"interfaces/CartItem.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/ThemeToggleComponent.html":{}}}],["start",{"_index":211,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["started",{"_index":2630,"title":{"index.html":{}},"body":{}}],["starting",{"_index":1943,"title":{},"body":{"components/PageComponent.html":{}}}],["state",{"_index":868,"title":{},"body":{"interfaces/CartItem.html":{},"components/PageCartComponent.html":{}}}],["statements",{"_index":2557,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":1952,"title":{},"body":{"components/PageComponent.html":{}}}],["static",{"_index":2366,"title":{},"body":{"injectables/UserAchievementsService.html":{}}}],["storage",{"_index":2289,"title":{},"body":{"components/ThemeToggleComponent.html":{}}}],["store",{"_index":2661,"title":{},"body":{"index.html":{}}}],["stories",{"_index":1968,"title":{},"body":{"components/PageComponent.html":{},"miscellaneous/variables.html":{}}}],["story",{"_index":2590,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["storybook",{"_index":275,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{}}}],["storyobj",{"_index":2705,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["stretch",{"_index":779,"title":{},"body":{"components/CarouselImgComponent.html":{},"components/PageItemFromCatalogComponent.html":{}}}],["string",{"_index":57,"title":{},"body":{"components/AboutComponent.html":{},"injectables/AchievementsService.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AppComponent.html":{},"components/ButtonComponent.html":{},"components/CarouselImgComponent.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"interfaces/IAchievement.html":{},"interfaces/ICartItem.html":{},"interfaces/ICreateDpImageRequest.html":{},"interfaces/IDpCategory.html":{},"interfaces/IDpImage.html":{},"interfaces/IDpOrder.html":{},"interfaces/IDpOrderDetail.html":{},"interfaces/IDpProduct.html":{},"interfaces/IDpSize.html":{},"interfaces/IDpUser.html":{},"interfaces/IDpUserProj.html":{},"interfaces/IUpdateDpImageRequest.html":{},"components/LoadingComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"injectables/ShopCartRepositoryService.html":{},"components/ThemeToggleComponent.html":{},"interfaces/User.html":{},"injectables/UserAchievementsRepositoryService.html":{},"injectables/UserAchievementsService.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{}}}],["style",{"_index":208,"title":{},"body":{"components/AboutComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{}}}],["styles/root.css",{"_index":100,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/BackButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"interfaces/CartItem.html":{},"components/FilterByInputComponent.html":{},"components/IconTrashComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{}}}],["styles/variables.css",{"_index":139,"title":{},"body":{"components/AboutComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/UserPageComponent.html":{}}}],["styleurl",{"_index":503,"title":{},"body":{"components/AppComponent.html":{},"components/LoadingComponent.html":{},"components/UserPageProjComponent.html":{}}}],["styleurls",{"_index":30,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"interfaces/CartItem.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{}}}],["subject",{"_index":1236,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["submit",{"_index":1089,"title":{},"body":{"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{}}}],["submit(event",{"_index":1114,"title":{},"body":{"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{}}}],["subscribe",{"_index":463,"title":{},"body":{"components/AchievmentsPageForUserComponent.html":{},"components/CardItemComponent.html":{},"interfaces/CartItem.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"injectables/UserAchievementsService.html":{},"miscellaneous/variables.html":{}}}],["subscription",{"_index":71,"title":{},"body":{"components/AboutComponent.html":{},"components/CarouselImgComponent.html":{}}}],["subscriptions",{"_index":40,"title":{},"body":{"components/AboutComponent.html":{},"components/CarouselImgComponent.html":{}}}],["success",{"_index":695,"title":{},"body":{"components/CardItemComponent.html":{},"interfaces/CartItem.html":{},"injectables/ConfigService.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/PageCartComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"injectables/ShopCartRepositoryService.html":{},"components/ThemeToggleComponent.html":{},"injectables/UserAchievementsService.html":{}}}],["successachievementid",{"_index":2382,"title":{},"body":{"injectables/UserAchievementsService.html":{}}}],["successful",{"_index":1818,"title":{},"body":{"components/LoginProjComponent.html":{},"components/RegisterProjComponent.html":{}}}],["successmessage",{"_index":2352,"title":{},"body":{"injectables/UserAchievementsRepositoryService.html":{},"injectables/UserAchievementsService.html":{}}}],["successmessage.replace",{"_index":2414,"title":{},"body":{"injectables/UserAchievementsService.html":{}}}],["successtofailedmap",{"_index":2425,"title":{},"body":{"injectables/UserAchievementsService.html":{}}}],["successtofailedmap[successachievementid",{"_index":2431,"title":{},"body":{"injectables/UserAchievementsService.html":{}}}],["such",{"_index":1965,"title":{},"body":{"components/PageComponent.html":{},"index.html":{}}}],["suits",{"_index":2685,"title":{},"body":{"index.html":{}}}],["sum",{"_index":841,"title":{},"body":{"interfaces/CartItem.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{}}}],["svg",{"_index":1619,"title":{},"body":{"components/HeaderComponent.html":{},"components/NavbarComponent.html":{},"components/PageComponent.html":{}}}],["switch",{"_index":2490,"title":{},"body":{"components/UserPageComponent.html":{}}}],["switchmap",{"_index":494,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/IconTrashComponent.html":{},"injectables/ImagesRepositoryService.html":{},"injectables/ProductsRepositoryService.html":{},"injectables/UserAchievementsService.html":{}}}],["switchmap((images",{"_index":1733,"title":{},"body":{"injectables/ImagesRepositoryService.html":{}}}],["switchmap((product",{"_index":2153,"title":{},"body":{"injectables/ProductsRepositoryService.html":{}}}],["switchmap((response",{"_index":1708,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["switchmap(exists",{"_index":2417,"title":{},"body":{"injectables/UserAchievementsService.html":{}}}],["switchmap(result",{"_index":2420,"title":{},"body":{"injectables/UserAchievementsService.html":{}}}],["switchtheme",{"_index":1024,"title":{},"body":{"injectables/ConfigService.html":{}}}],["switchtodarkthemefailed",{"_index":981,"title":{},"body":{"injectables/ConfigService.html":{}}}],["switchtodarkthemesuccess",{"_index":932,"title":{},"body":{"injectables/ConfigService.html":{}}}],["switchtolightthemefailed",{"_index":979,"title":{},"body":{"injectables/ConfigService.html":{}}}],["switchtolightthemesuccess",{"_index":931,"title":{},"body":{"injectables/ConfigService.html":{}}}],["systemtheme",{"_index":2333,"title":{},"body":{"components/ThemeToggleComponent.html":{}}}],["table",{"_index":439,"title":{},"body":{"components/AchievmentsPageForUserComponent.html":{},"interfaces/CartItem.html":{},"components/PageCartComponent.html":{},"coverage.html":{},"dependencies.html":{}}}],["tables.css",{"_index":256,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/BackButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"components/FilterByInputComponent.html":{},"components/IconTrashComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2599,"title":{},"body":{"coverage.html":{}}}],["tags",{"_index":2718,"title":{},"body":{"miscellaneous/variables.html":{}}}],["taiga",{"_index":83,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"interfaces/CartItem.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/IconTrashComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"injectables/UserAchievementsService.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{},"dependencies.html":{}}}],["takeuntil",{"_index":495,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/IconTrashComponent.html":{}}}],["takeuntil(this.router.events",{"_index":1713,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["tap",{"_index":548,"title":{},"body":{"injectables/AuthProjService.html":{},"injectables/AuthService.html":{},"injectables/ImagesRepositoryService.html":{},"injectables/UserAchievementsService.html":{}}}],["tap(response",{"_index":556,"title":{},"body":{"injectables/AuthProjService.html":{},"injectables/AuthService.html":{}}}],["targetinput",{"_index":1102,"title":{},"body":{"components/DialogCategoryComponent.html":{}}}],["targetinput.nativeelement.queryselector('input').focus",{"_index":1192,"title":{},"body":{"components/DialogCategoryComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{}}}],["templateurl",{"_index":32,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"interfaces/CartItem.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/IconTrashComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{}}}],["test",{"_index":2673,"title":{},"body":{"index.html":{}}}],["testing",{"_index":2680,"title":{},"body":{"index.html":{}}}],["testrunning",{"_index":2677,"title":{},"body":{"index.html":{}}}],["tests",{"_index":2670,"title":{},"body":{"index.html":{}}}],["text",{"_index":246,"title":{},"body":{"components/AboutComponent.html":{},"components/PageCartComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/UserPageComponent.html":{}}}],["textachievement",{"_index":1624,"title":{},"body":{"interfaces/IAchievement.html":{}}}],["theme",{"_index":318,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"injectables/ConfigService.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{}}}],["theme=\"dark",{"_index":244,"title":{},"body":{"components/AboutComponent.html":{},"components/NavbarComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/UserPageComponent.html":{}}}],["themetogglecomponent",{"_index":25,"title":{"components/ThemeToggleComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{},"coverage.html":{}}}],["this.achievementsservice.createachievement(achievement",{"_index":362,"title":{},"body":{"injectables/AchievementsRepositoryService.html":{}}}],["this.achievementsservice.deleteachievement(id",{"_index":364,"title":{},"body":{"injectables/AchievementsRepositoryService.html":{}}}],["this.achievementsservice.getachievementbyid(id",{"_index":361,"title":{},"body":{"injectables/AchievementsRepositoryService.html":{}}}],["this.achievementsservice.getallachievements",{"_index":360,"title":{},"body":{"injectables/AchievementsRepositoryService.html":{}}}],["this.achievementsservice.updateachievement(id",{"_index":363,"title":{},"body":{"injectables/AchievementsRepositoryService.html":{}}}],["this.alerts",{"_index":1173,"title":{},"body":{"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/IconTrashComponent.html":{}}}],["this.alerts.open",{"_index":1712,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["this.alertservice",{"_index":2409,"title":{},"body":{"injectables/UserAchievementsService.html":{}}}],["this.alertservice.open",{"_index":835,"title":{},"body":{"interfaces/CartItem.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{}}}],["this.alertservice.open(errormessage",{"_index":1795,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{}}}],["this.alertservice.open(response.message",{"_index":2046,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{}}}],["this.alertservice.open(successmessage",{"_index":2421,"title":{},"body":{"injectables/UserAchievementsService.html":{}}}],["this.allachievements",{"_index":456,"title":{},"body":{"components/AchievmentsPageForUserComponent.html":{}}}],["this.allowedtypes.includes(file.type",{"_index":1282,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["this.alwaysfailmode",{"_index":1837,"title":{},"body":{"components/NavbarComponent.html":{},"components/UserPageProjComponent.html":{}}}],["this.authprojrepository.login(userproj).subscribe",{"_index":1816,"title":{},"body":{"components/LoginProjComponent.html":{}}}],["this.authprojrepository.register(userproj).subscribe",{"_index":2191,"title":{},"body":{"components/RegisterProjComponent.html":{}}}],["this.authprojservice.isauthenticated$.subscribe(isauthenticated",{"_index":2486,"title":{},"body":{"components/UserPageComponent.html":{}}}],["this.authprojservice.login(userproj",{"_index":525,"title":{},"body":{"injectables/AuthProjRepositoryService.html":{}}}],["this.authprojservice.logout",{"_index":527,"title":{},"body":{"injectables/AuthProjRepositoryService.html":{}}}],["this.authprojservice.register(userproj",{"_index":526,"title":{},"body":{"injectables/AuthProjRepositoryService.html":{}}}],["this.authprojservice.setauthenticated(false",{"_index":2489,"title":{},"body":{"components/UserPageComponent.html":{}}}],["this.authprojservice.setauthenticated(this.isprojauthenticated",{"_index":2488,"title":{},"body":{"components/UserPageComponent.html":{}}}],["this.authrepository.login(user).subscribe",{"_index":1787,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authrepository.register(user).subscribe",{"_index":2180,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.authservice.isauthenticated$.subscribe(isauthenticated",{"_index":1835,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.authservice.login(user",{"_index":576,"title":{},"body":{"injectables/AuthRepositoryService.html":{}}}],["this.authservice.logout",{"_index":578,"title":{},"body":{"injectables/AuthRepositoryService.html":{}}}],["this.authservice.register(user",{"_index":577,"title":{},"body":{"injectables/AuthRepositoryService.html":{}}}],["this.authservice.setauthenticated(false",{"_index":1839,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.authservice.setauthenticated(this.isauthenticated",{"_index":1841,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.cartitems",{"_index":829,"title":{},"body":{"interfaces/CartItem.html":{},"components/PageCartComponent.html":{}}}],["this.cartitems.filter(cartitem",{"_index":855,"title":{},"body":{"interfaces/CartItem.html":{},"components/PageCartComponent.html":{}}}],["this.cartitems.length",{"_index":860,"title":{},"body":{"interfaces/CartItem.html":{},"components/PageCartComponent.html":{}}}],["this.cartitems.map((item",{"_index":883,"title":{},"body":{"interfaces/CartItem.html":{},"components/PageCartComponent.html":{}}}],["this.cartitems.map(cartitem",{"_index":874,"title":{},"body":{"interfaces/CartItem.html":{},"components/PageCartComponent.html":{}}}],["this.cartitems.reduce((sum",{"_index":840,"title":{},"body":{"interfaces/CartItem.html":{},"components/PageCartComponent.html":{}}}],["this.cartservice.addtocart(request).subscribe",{"_index":2044,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{}}}],["this.cartservice.checkout().subscribe",{"_index":863,"title":{},"body":{"interfaces/CartItem.html":{},"components/PageCartComponent.html":{}}}],["this.cartservice.clearcart",{"_index":865,"title":{},"body":{"interfaces/CartItem.html":{},"components/PageCartComponent.html":{}}}],["this.cartservice.getcart().subscribe",{"_index":826,"title":{},"body":{"interfaces/CartItem.html":{},"components/PageCartComponent.html":{}}}],["this.cartservice.removefromcart",{"_index":850,"title":{},"body":{"interfaces/CartItem.html":{},"components/PageCartComponent.html":{}}}],["this.cartservice.updatecart(request).subscribe",{"_index":875,"title":{},"body":{"interfaces/CartItem.html":{},"components/PageCartComponent.html":{}}}],["this.categoriesrepository.getdpcategorybyid(id).subscribe",{"_index":2511,"title":{},"body":{"components/UserPageComponent.html":{}}}],["this.categoriesrepositoryservice.createdpcategory(categorydata).subscribe",{"_index":1163,"title":{},"body":{"components/DialogCategoryComponent.html":{}}}],["this.categoriesrepositoryservice.updatedpcategory(categorydata.dpcategoryid",{"_index":1168,"title":{},"body":{"components/DialogCategoryComponent.html":{}}}],["this.categorydialog",{"_index":2500,"title":{},"body":{"components/UserPageComponent.html":{}}}],["this.categorydialog(category).subscribe",{"_index":2512,"title":{},"body":{"components/UserPageComponent.html":{}}}],["this.categoryform.get('dpcategorytitle')?.setvalue(finalvalue",{"_index":1188,"title":{},"body":{"components/DialogCategoryComponent.html":{}}}],["this.categoryform.patchvalue(this.data",{"_index":1153,"title":{},"body":{"components/DialogCategoryComponent.html":{}}}],["this.categoryform.valid",{"_index":1148,"title":{},"body":{"components/DialogCategoryComponent.html":{}}}],["this.categoryform.value",{"_index":1156,"title":{},"body":{"components/DialogCategoryComponent.html":{}}}],["this.cd.markforcheck",{"_index":759,"title":{},"body":{"components/CarouselImgComponent.html":{},"components/PageCatalogItemComponent.html":{}}}],["this.cdr.markforcheck",{"_index":833,"title":{},"body":{"interfaces/CartItem.html":{},"components/PageCartComponent.html":{}}}],["this.checkauthstatus",{"_index":550,"title":{},"body":{"injectables/AuthProjService.html":{},"components/NavbarComponent.html":{},"components/UserPageComponent.html":{}}}],["this.checklengthandwarn(cleanedvalue",{"_index":1186,"title":{},"body":{"components/DialogCategoryComponent.html":{},"components/DialogProductComponent.html":{}}}],["this.checkuserachievementexists(userprojid",{"_index":2415,"title":{},"body":{"injectables/UserAchievementsService.html":{}}}],["this.completedachievementids",{"_index":465,"title":{},"body":{"components/AchievmentsPageForUserComponent.html":{}}}],["this.completedachievementids.includes(achievementid",{"_index":469,"title":{},"body":{"components/AchievmentsPageForUserComponent.html":{}}}],["this.configservice.achievementids.addcategoryfailed",{"_index":1162,"title":{},"body":{"components/DialogCategoryComponent.html":{},"injectables/UserAchievementsService.html":{}}}],["this.configservice.achievementids.addcategorysuccess",{"_index":1167,"title":{},"body":{"components/DialogCategoryComponent.html":{},"injectables/UserAchievementsService.html":{}}}],["this.configservice.achievementids.addimagefailed",{"_index":1294,"title":{},"body":{"components/DialogImageComponent.html":{},"injectables/UserAchievementsService.html":{}}}],["this.configservice.achievementids.addimagesuccess",{"_index":1299,"title":{},"body":{"components/DialogImageComponent.html":{},"injectables/UserAchievementsService.html":{}}}],["this.configservice.achievementids.addtocartfailed",{"_index":2040,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{},"injectables/UserAchievementsService.html":{}}}],["this.configservice.achievementids.addtocartsuccess",{"_index":2045,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{},"injectables/UserAchievementsService.html":{}}}],["this.configservice.achievementids.buttonnotworking",{"_index":475,"title":{},"body":{"components/AchievmentsPageForUserComponent.html":{},"injectables/UserAchievementsService.html":{}}}],["this.configservice.achievementids.checkoutemptycart",{"_index":861,"title":{},"body":{"interfaces/CartItem.html":{},"components/PageCartComponent.html":{}}}],["this.configservice.achievementids.checkoutfailed",{"_index":862,"title":{},"body":{"interfaces/CartItem.html":{},"components/PageCartComponent.html":{},"injectables/UserAchievementsService.html":{}}}],["this.configservice.achievementids.checkoutsuccess",{"_index":864,"title":{},"body":{"interfaces/CartItem.html":{},"components/PageCartComponent.html":{},"injectables/UserAchievementsService.html":{}}}],["this.configservice.achievementids.createproductfailed",{"_index":1353,"title":{},"body":{"components/DialogProductComponent.html":{},"injectables/UserAchievementsService.html":{}}}],["this.configservice.achievementids.createproductsuccess",{"_index":1357,"title":{},"body":{"components/DialogProductComponent.html":{},"injectables/UserAchievementsService.html":{}}}],["this.configservice.achievementids.loadproductinfofailed",{"_index":2039,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{},"injectables/UserAchievementsService.html":{}}}],["this.configservice.achievementids.loadproductinfosuccess",{"_index":2037,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{},"injectables/UserAchievementsService.html":{}}}],["this.configservice.achievementids.loadproductsfailed",{"_index":1929,"title":{},"body":{"components/PageCatalogItemComponent.html":{},"injectables/UserAchievementsService.html":{}}}],["this.configservice.achievementids.loadproductssuccess",{"_index":1928,"title":{},"body":{"components/PageCatalogItemComponent.html":{},"injectables/UserAchievementsService.html":{}}}],["this.configservice.achievementids.loginfailed",{"_index":1786,"title":{},"body":{"components/LoginComponent.html":{},"injectables/UserAchievementsService.html":{}}}],["this.configservice.achievementids.loginsuccess",{"_index":1788,"title":{},"body":{"components/LoginComponent.html":{},"injectables/UserAchievementsService.html":{}}}],["this.configservice.achievementids.logoutprojfailed",{"_index":2430,"title":{},"body":{"injectables/UserAchievementsService.html":{}}}],["this.configservice.achievementids.logoutprojsuccess",{"_index":2429,"title":{},"body":{"injectables/UserAchievementsService.html":{}}}],["this.configservice.achievementids.navigatetoproductfailed",{"_index":698,"title":{},"body":{"components/CardItemComponent.html":{},"injectables/UserAchievementsService.html":{}}}],["this.configservice.achievementids.navigatetoproductsuccess",{"_index":697,"title":{},"body":{"components/CardItemComponent.html":{},"injectables/UserAchievementsService.html":{}}}],["this.configservice.achievementids.opencategorydialogsuccess",{"_index":1151,"title":{},"body":{"components/DialogCategoryComponent.html":{},"injectables/UserAchievementsService.html":{}}}],["this.configservice.achievementids.openimagedialogsuccess",{"_index":1262,"title":{},"body":{"components/DialogImageComponent.html":{},"injectables/UserAchievementsService.html":{}}}],["this.configservice.achievementids.openproductdialogsuccess",{"_index":1348,"title":{},"body":{"components/DialogProductComponent.html":{},"injectables/UserAchievementsService.html":{}}}],["this.configservice.achievementids.registerfailed",{"_index":2179,"title":{},"body":{"components/RegisterComponent.html":{},"injectables/UserAchievementsService.html":{}}}],["this.configservice.achievementids.registersuccess",{"_index":2182,"title":{},"body":{"components/RegisterComponent.html":{},"injectables/UserAchievementsService.html":{}}}],["this.configservice.achievementids.removefromcartfailed",{"_index":849,"title":{},"body":{"interfaces/CartItem.html":{},"components/PageCartComponent.html":{},"injectables/UserAchievementsService.html":{}}}],["this.configservice.achievementids.removefromcartsuccess",{"_index":858,"title":{},"body":{"interfaces/CartItem.html":{},"components/PageCartComponent.html":{},"injectables/UserAchievementsService.html":{}}}],["this.configservice.achievementids.resetthemesuccess",{"_index":2338,"title":{},"body":{"components/ThemeToggleComponent.html":{},"injectables/UserAchievementsService.html":{}}}],["this.configservice.achievementids.switchtodarkthemefailed",{"_index":2328,"title":{},"body":{"components/ThemeToggleComponent.html":{},"injectables/UserAchievementsService.html":{}}}],["this.configservice.achievementids.switchtodarkthemesuccess",{"_index":2331,"title":{},"body":{"components/ThemeToggleComponent.html":{},"injectables/UserAchievementsService.html":{}}}],["this.configservice.achievementids.switchtolightthemefailed",{"_index":2329,"title":{},"body":{"components/ThemeToggleComponent.html":{},"injectables/UserAchievementsService.html":{}}}],["this.configservice.achievementids.switchtolightthemesuccess",{"_index":2332,"title":{},"body":{"components/ThemeToggleComponent.html":{},"injectables/UserAchievementsService.html":{}}}],["this.configservice.achievementids.togglethemesuccess",{"_index":2428,"title":{},"body":{"injectables/UserAchievementsService.html":{}}}],["this.configservice.achievementids.updatecartquantityfailed",{"_index":872,"title":{},"body":{"interfaces/CartItem.html":{},"components/PageCartComponent.html":{},"injectables/UserAchievementsService.html":{}}}],["this.configservice.achievementids.updatecartquantitysuccess",{"_index":877,"title":{},"body":{"interfaces/CartItem.html":{},"components/PageCartComponent.html":{},"injectables/UserAchievementsService.html":{}}}],["this.configservice.achievementids.updatecategoryfailed",{"_index":1172,"title":{},"body":{"components/DialogCategoryComponent.html":{},"injectables/UserAchievementsService.html":{}}}],["this.configservice.achievementids.updatecategorysuccess",{"_index":1171,"title":{},"body":{"components/DialogCategoryComponent.html":{},"injectables/UserAchievementsService.html":{}}}],["this.configservice.achievementids.updateimagefailed",{"_index":1301,"title":{},"body":{"components/DialogImageComponent.html":{},"injectables/UserAchievementsService.html":{}}}],["this.configservice.achievementids.updateimagesuccess",{"_index":1305,"title":{},"body":{"components/DialogImageComponent.html":{},"injectables/UserAchievementsService.html":{}}}],["this.configservice.achievementids.updateproductfailed",{"_index":1358,"title":{},"body":{"components/DialogProductComponent.html":{},"injectables/UserAchievementsService.html":{}}}],["this.configservice.achievementids.updateproductsuccess",{"_index":1362,"title":{},"body":{"components/DialogProductComponent.html":{},"injectables/UserAchievementsService.html":{}}}],["this.configservice.achievementids.updateprofilefailed",{"_index":2427,"title":{},"body":{"injectables/UserAchievementsService.html":{}}}],["this.configservice.achievementids.updateprofilesuccess",{"_index":2426,"title":{},"body":{"injectables/UserAchievementsService.html":{}}}],["this.configservice.achievementids.viewproductfailed",{"_index":2038,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{},"injectables/UserAchievementsService.html":{}}}],["this.configservice.achievementids.viewproductsuccess",{"_index":2036,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{},"injectables/UserAchievementsService.html":{}}}],["this.configservice.httpstatuscodes.badrequest",{"_index":2187,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.configservice.httpstatuscodes.conflict",{"_index":2186,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.configservice.httpstatuscodes.notfound",{"_index":2405,"title":{},"body":{"injectables/UserAchievementsService.html":{}}}],["this.configservice.httpstatuscodes.servererror",{"_index":1794,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.configservice.httpstatuscodes.unauthorized",{"_index":1793,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.context.completewith(categorydata",{"_index":1170,"title":{},"body":{"components/DialogCategoryComponent.html":{}}}],["this.context.completewith(createdcategory",{"_index":1165,"title":{},"body":{"components/DialogCategoryComponent.html":{}}}],["this.context.completewith(createdimage",{"_index":1298,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["this.context.completewith(createdproduct",{"_index":1356,"title":{},"body":{"components/DialogProductComponent.html":{}}}],["this.context.completewith(productdata",{"_index":1361,"title":{},"body":{"components/DialogProductComponent.html":{}}}],["this.context.completewith(this.data",{"_index":1304,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["this.context.data",{"_index":1149,"title":{},"body":{"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{}}}],["this.createcategory(categorydata",{"_index":1160,"title":{},"body":{"components/DialogCategoryComponent.html":{}}}],["this.createimage(createrequest",{"_index":1293,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["this.createproduct(productdata",{"_index":1352,"title":{},"body":{"components/DialogProductComponent.html":{}}}],["this.createuserachievement(userprojid",{"_index":2419,"title":{},"body":{"injectables/UserAchievementsService.html":{}}}],["this.darkmode",{"_index":2308,"title":{},"body":{"components/ThemeToggleComponent.html":{}}}],["this.darkmode.set(systemtheme",{"_index":2335,"title":{},"body":{"components/ThemeToggleComponent.html":{}}}],["this.darkmode.set(this.toggle",{"_index":2322,"title":{},"body":{"components/ThemeToggleComponent.html":{}}}],["this.data",{"_index":1152,"title":{},"body":{"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{}}}],["this.data.dpcategoryid",{"_index":1157,"title":{},"body":{"components/DialogCategoryComponent.html":{}}}],["this.data.dpimagesid",{"_index":1287,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["this.data.dpimagetitle",{"_index":1265,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["this.data.dpproductid",{"_index":1264,"title":{},"body":{"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{}}}],["this.dpcategoriesservice.createdpcategory(dpcategory",{"_index":907,"title":{},"body":{"injectables/CategoriesRepositoryService.html":{}}}],["this.dpcategoriesservice.deletedpcategory(id",{"_index":909,"title":{},"body":{"injectables/CategoriesRepositoryService.html":{}}}],["this.dpcategoriesservice.getalldpcategories",{"_index":905,"title":{},"body":{"injectables/CategoriesRepositoryService.html":{}}}],["this.dpcategoriesservice.getdpcategorybyid(id",{"_index":906,"title":{},"body":{"injectables/CategoriesRepositoryService.html":{}}}],["this.dpcategoriesservice.updatedpcategory(id",{"_index":908,"title":{},"body":{"injectables/CategoriesRepositoryService.html":{}}}],["this.dpimagesservice.createdpimage(request).pipe",{"_index":1750,"title":{},"body":{"injectables/ImagesRepositoryService.html":{}}}],["this.dpimagesservice.deletedpimage(id).pipe",{"_index":1755,"title":{},"body":{"injectables/ImagesRepositoryService.html":{}}}],["this.dpimagesservice.getalldpimages().pipe",{"_index":1730,"title":{},"body":{"injectables/ImagesRepositoryService.html":{}}}],["this.dpimagesservice.getdpimagebyid(id",{"_index":1745,"title":{},"body":{"injectables/ImagesRepositoryService.html":{}}}],["this.dpimagesservice.getdpimagedata(id).pipe",{"_index":1748,"title":{},"body":{"injectables/ImagesRepositoryService.html":{}}}],["this.dpimagesservice.updatedpimage(id",{"_index":1752,"title":{},"body":{"injectables/ImagesRepositoryService.html":{}}}],["this.dpordercompositionsservice.createdpordercomposition(dpordercomposition",{"_index":1854,"title":{},"body":{"injectables/OrderCompositionsRepositoryService.html":{}}}],["this.dpordercompositionsservice.deletedpordercomposition(id",{"_index":1856,"title":{},"body":{"injectables/OrderCompositionsRepositoryService.html":{}}}],["this.dpordercompositionsservice.getalldpordercompositions",{"_index":1852,"title":{},"body":{"injectables/OrderCompositionsRepositoryService.html":{}}}],["this.dpordercompositionsservice.getdpordercompositionbyid(id",{"_index":1853,"title":{},"body":{"injectables/OrderCompositionsRepositoryService.html":{}}}],["this.dpordercompositionsservice.updatedpordercomposition(id",{"_index":1855,"title":{},"body":{"injectables/OrderCompositionsRepositoryService.html":{}}}],["this.dpordersservice.createdporder(dporder",{"_index":1862,"title":{},"body":{"injectables/OrderRepositoryService.html":{}}}],["this.dpordersservice.deletedporder(id",{"_index":1864,"title":{},"body":{"injectables/OrderRepositoryService.html":{}}}],["this.dpordersservice.getalldporders",{"_index":1860,"title":{},"body":{"injectables/OrderRepositoryService.html":{}}}],["this.dpordersservice.getdporderbyid(id",{"_index":1861,"title":{},"body":{"injectables/OrderRepositoryService.html":{}}}],["this.dpordersservice.updatedporder(id",{"_index":1863,"title":{},"body":{"injectables/OrderRepositoryService.html":{}}}],["this.dpproductattributesservice.createdpproductattribute(dpproductattribute",{"_index":2125,"title":{},"body":{"injectables/ProductAttributesRepositoryService.html":{}}}],["this.dpproductattributesservice.deletedpproductattribute(id",{"_index":2127,"title":{},"body":{"injectables/ProductAttributesRepositoryService.html":{}}}],["this.dpproductattributesservice.getalldpproductattributes",{"_index":2123,"title":{},"body":{"injectables/ProductAttributesRepositoryService.html":{}}}],["this.dpproductattributesservice.getdpproductattributebyid(id",{"_index":2124,"title":{},"body":{"injectables/ProductAttributesRepositoryService.html":{}}}],["this.dpproductattributesservice.updatedpproductattribute(id",{"_index":2126,"title":{},"body":{"injectables/ProductAttributesRepositoryService.html":{}}}],["this.dpsizesservice.createdpsize(dpsize",{"_index":2280,"title":{},"body":{"injectables/SizesRepositoryService.html":{}}}],["this.dpsizesservice.deletedpsize(id",{"_index":2282,"title":{},"body":{"injectables/SizesRepositoryService.html":{}}}],["this.dpsizesservice.getalldpsizes",{"_index":2278,"title":{},"body":{"injectables/SizesRepositoryService.html":{}}}],["this.dpsizesservice.getdpsizebyid(id",{"_index":2279,"title":{},"body":{"injectables/SizesRepositoryService.html":{}}}],["this.dpsizesservice.updatedpsize(id",{"_index":2281,"title":{},"body":{"injectables/SizesRepositoryService.html":{}}}],["this.dpuserprojsservice.createdpuserproj(dpuserproj",{"_index":2542,"title":{},"body":{"injectables/UserProjsRepositoryService.html":{}}}],["this.dpuserprojsservice.deletedpuserproj(id",{"_index":2544,"title":{},"body":{"injectables/UserProjsRepositoryService.html":{}}}],["this.dpuserprojsservice.getalldpuserprojs",{"_index":2540,"title":{},"body":{"injectables/UserProjsRepositoryService.html":{}}}],["this.dpuserprojsservice.getdpuserprojbyid(id",{"_index":2541,"title":{},"body":{"injectables/UserProjsRepositoryService.html":{}}}],["this.dpuserprojsservice.updatedpuserproj(id",{"_index":2543,"title":{},"body":{"injectables/UserProjsRepositoryService.html":{}}}],["this.dpusersservice.createdpuser(dpuser",{"_index":2551,"title":{},"body":{"injectables/UsersRepositoryService.html":{}}}],["this.dpusersservice.deletedpuser(id",{"_index":2553,"title":{},"body":{"injectables/UsersRepositoryService.html":{}}}],["this.dpusersservice.getalldpusers",{"_index":2549,"title":{},"body":{"injectables/UsersRepositoryService.html":{}}}],["this.dpusersservice.getdpuserbyid(id",{"_index":2550,"title":{},"body":{"injectables/UsersRepositoryService.html":{}}}],["this.dpusersservice.updatedpuser(id",{"_index":2552,"title":{},"body":{"injectables/UsersRepositoryService.html":{}}}],["this.failedimage$.next(file",{"_index":1276,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["this.failedimage$.next(null",{"_index":1268,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["this.failedimage$.next(this.selectedfile",{"_index":1295,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["this.form.controls['search'].setvalue(value",{"_index":1597,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["this.form.controls['search'].valuechanges.subscribe(value",{"_index":1586,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["this.form.disable",{"_index":1602,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["this.form.enable",{"_index":1603,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["this.form.get('search')?.value",{"_index":1582,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["this.form.valid",{"_index":1783,"title":{},"body":{"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{}}}],["this.form.value.login",{"_index":1815,"title":{},"body":{"components/LoginProjComponent.html":{},"components/RegisterProjComponent.html":{}}}],["this.form.value.password",{"_index":1785,"title":{},"body":{"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{}}}],["this.form.value.username",{"_index":1784,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.getalldpimages().pipe",{"_index":1732,"title":{},"body":{"injectables/ImagesRepositoryService.html":{}}}],["this.getalwaysfailmode",{"_index":2396,"title":{},"body":{"injectables/UserAchievementsService.html":{}}}],["this.getdpimagedata(image.dpimagesid).pipe",{"_index":1737,"title":{},"body":{"injectables/ImagesRepositoryService.html":{}}}],["this.getfailedachievementid(achievementid",{"_index":2422,"title":{},"body":{"injectables/UserAchievementsService.html":{}}}],["this.gettotal(item",{"_index":842,"title":{},"body":{"interfaces/CartItem.html":{},"components/PageCartComponent.html":{}}}],["this.hasvalue",{"_index":1155,"title":{},"body":{"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{}}}],["this.http",{"_index":2399,"title":{},"body":{"injectables/UserAchievementsService.html":{}}}],["this.http.delete(`${this.baseurl}/${id",{"_index":384,"title":{},"body":{"injectables/AchievementsService.html":{},"injectables/DpCategoriesService.html":{},"injectables/DpImagesService.html":{},"injectables/DpOrderCompositionsService.html":{},"injectables/DpOrdersService.html":{},"injectables/DpProductAttributesService.html":{},"injectables/DpSizesService.html":{},"injectables/DpUserProjsService.html":{},"injectables/DpUsersService.html":{},"injectables/ProductsService.html":{}}}],["this.http.get(`${this.baseurl}/${id",{"_index":381,"title":{},"body":{"injectables/AchievementsService.html":{},"injectables/DpCategoriesService.html":{},"injectables/DpImagesService.html":{},"injectables/DpOrderCompositionsService.html":{},"injectables/DpOrdersService.html":{},"injectables/DpProductAttributesService.html":{},"injectables/DpSizesService.html":{},"injectables/DpUserProjsService.html":{},"injectables/DpUsersService.html":{},"injectables/ProductsService.html":{}}}],["this.http.get(`${this.baseurl}/${id}/image",{"_index":1400,"title":{},"body":{"injectables/DpImagesService.html":{}}}],["this.http.get(`${this.baseurl}/${userprojid}/${achievementid",{"_index":2398,"title":{},"body":{"injectables/UserAchievementsService.html":{}}}],["this.http.get(`${this.baseurl}/byproduct/${productid",{"_index":1399,"title":{},"body":{"injectables/DpImagesService.html":{}}}],["this.http.get(`${this.baseurl}/exists/${userprojid}/${achievementid}`).pipe",{"_index":2403,"title":{},"body":{"injectables/UserAchievementsService.html":{}}}],["this.http.get(`${this.baseurl}/quantity?productid=${productid}&sizeid=${sizeid",{"_index":2270,"title":{},"body":{"injectables/ShopCartService.html":{}}}],["this.http.get(this.baseurl",{"_index":380,"title":{},"body":{"injectables/AchievementsService.html":{},"injectables/DpCategoriesService.html":{},"injectables/DpImagesService.html":{},"injectables/DpOrderCompositionsService.html":{},"injectables/DpOrdersService.html":{},"injectables/DpProductAttributesService.html":{},"injectables/DpSizesService.html":{},"injectables/DpUserProjsService.html":{},"injectables/DpUsersService.html":{},"injectables/ProductsService.html":{},"injectables/ShopCartService.html":{},"injectables/UserAchievementsService.html":{}}}],["this.http.post(`${this.baseurl}/addtocart",{"_index":2168,"title":{},"body":{"injectables/ProductsService.html":{},"injectables/ShopCartService.html":{}}}],["this.http.post(`${this.baseurl}/checkout",{"_index":2271,"title":{},"body":{"injectables/ShopCartService.html":{}}}],["this.http.post(`${this.baseurl}/export?orderid=${orderid",{"_index":2273,"title":{},"body":{"injectables/ShopCartService.html":{}}}],["this.http.post(`${this.baseurl}/login",{"_index":554,"title":{},"body":{"injectables/AuthProjService.html":{},"injectables/AuthService.html":{}}}],["this.http.post(`${this.baseurl}/register",{"_index":562,"title":{},"body":{"injectables/AuthProjService.html":{},"injectables/AuthService.html":{}}}],["this.http.post(`${this.baseurl}/removefromcart",{"_index":2272,"title":{},"body":{"injectables/ShopCartService.html":{}}}],["this.http.post(`${this.baseurl}/updatecart",{"_index":2269,"title":{},"body":{"injectables/ShopCartService.html":{}}}],["this.http.post(this.baseurl",{"_index":382,"title":{},"body":{"injectables/AchievementsService.html":{},"injectables/DpCategoriesService.html":{},"injectables/DpImagesService.html":{},"injectables/DpOrderCompositionsService.html":{},"injectables/DpOrdersService.html":{},"injectables/DpProductAttributesService.html":{},"injectables/DpSizesService.html":{},"injectables/DpUserProjsService.html":{},"injectables/DpUsersService.html":{},"injectables/ProductsService.html":{}}}],["this.http.put(`${this.baseurl}/${id",{"_index":383,"title":{},"body":{"injectables/AchievementsService.html":{},"injectables/DpCategoriesService.html":{},"injectables/DpImagesService.html":{},"injectables/DpOrderCompositionsService.html":{},"injectables/DpOrdersService.html":{},"injectables/DpProductAttributesService.html":{},"injectables/DpSizesService.html":{},"injectables/DpUserProjsService.html":{},"injectables/DpUsersService.html":{},"injectables/ProductsService.html":{}}}],["this.imageclick.emit(imageurl",{"_index":776,"title":{},"body":{"components/CarouselImgComponent.html":{}}}],["this.imagecontrol.setvalue(file",{"_index":1277,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["this.imagecontrol.setvalue(null",{"_index":1266,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["this.imagedialog",{"_index":2503,"title":{},"body":{"components/UserPageComponent.html":{}}}],["this.imagedialog(image).subscribe",{"_index":2514,"title":{},"body":{"components/UserPageComponent.html":{}}}],["this.imageform.patchvalue",{"_index":1263,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["this.imageform.valid",{"_index":1260,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["this.imageform.value",{"_index":1285,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["this.images",{"_index":756,"title":{},"body":{"components/CarouselImgComponent.html":{}}}],["this.images.filter(image",{"_index":761,"title":{},"body":{"components/CarouselImgComponent.html":{}}}],["this.images.length",{"_index":757,"title":{},"body":{"components/CarouselImgComponent.html":{}}}],["this.imagesdatacache.clear",{"_index":1751,"title":{},"body":{"injectables/ImagesRepositoryService.html":{}}}],["this.imagesdatacache.delete(id",{"_index":1754,"title":{},"body":{"injectables/ImagesRepositoryService.html":{}}}],["this.imagesdatacache.get(id",{"_index":1747,"title":{},"body":{"injectables/ImagesRepositoryService.html":{}}}],["this.imagesdatacache.set(id",{"_index":1749,"title":{},"body":{"injectables/ImagesRepositoryService.html":{}}}],["this.imageslistcache",{"_index":1729,"title":{},"body":{"injectables/ImagesRepositoryService.html":{}}}],["this.imagesrepository.getalldpimageswithdata",{"_index":2148,"title":{},"body":{"injectables/ProductsRepositoryService.html":{}}}],["this.imagesrepository.getdpimagebyid(id).subscribe",{"_index":2513,"title":{},"body":{"components/UserPageComponent.html":{}}}],["this.imagesrepository.getdpimagedata(image.dpimagesid).pipe",{"_index":766,"title":{},"body":{"components/CarouselImgComponent.html":{}}}],["this.imagesrepository.getdpimagesbyproductid(product.dpproductid).pipe",{"_index":2154,"title":{},"body":{"injectables/ProductsRepositoryService.html":{}}}],["this.imagesrepositoryservice.createdpimage(imagedata).subscribe",{"_index":1296,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["this.imagesrepositoryservice.updatedpimage(this.data.dpimagesid",{"_index":1302,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["this.imageurls",{"_index":758,"title":{},"body":{"components/CarouselImgComponent.html":{}}}],["this.imageurls[id",{"_index":774,"title":{},"body":{"components/CarouselImgComponent.html":{}}}],["this.imageurls[image.dpimagesid",{"_index":762,"title":{},"body":{"components/CarouselImgComponent.html":{}}}],["this.innervalue",{"_index":1596,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["this.isauthenticated",{"_index":1836,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.isauthenticatedsubject.asobservable",{"_index":544,"title":{},"body":{"injectables/AuthProjService.html":{},"injectables/AuthService.html":{}}}],["this.isauthenticatedsubject.next(isauthenticated",{"_index":563,"title":{},"body":{"injectables/AuthProjService.html":{},"injectables/AuthService.html":{}}}],["this.isloading",{"_index":832,"title":{},"body":{"interfaces/CartItem.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{}}}],["this.isprojauthenticated",{"_index":2487,"title":{},"body":{"components/UserPageComponent.html":{}}}],["this.item.productid",{"_index":1711,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["this.items.filter(item",{"_index":1584,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["this.loadcartitems",{"_index":824,"title":{},"body":{"interfaces/CartItem.html":{},"components/PageCartComponent.html":{}}}],["this.loadedimage$.next(file",{"_index":1278,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["this.loadedimage$.next(null",{"_index":1267,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["this.loadimageurls",{"_index":749,"title":{},"body":{"components/CarouselImgComponent.html":{}}}],["this.loadingimage$.next(null",{"_index":1269,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["this.loadingimage$.next(this.selectedfile",{"_index":1286,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["this.loadproductinfo",{"_index":2032,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{}}}],["this.loadproducts(userprojid",{"_index":1918,"title":{},"body":{"components/PageCatalogItemComponent.html":{}}}],["this.loadproductsorfail",{"_index":1916,"title":{},"body":{"components/PageCatalogItemComponent.html":{}}}],["this.location.back",{"_index":608,"title":{},"body":{"components/BackButtonComponent.html":{}}}],["this.location.path(true",{"_index":605,"title":{},"body":{"components/BackButtonComponent.html":{}}}],["this.maxfilesize",{"_index":1280,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["this.media.matches",{"_index":2334,"title":{},"body":{"components/ThemeToggleComponent.html":{}}}],["this.navigateto",{"_index":106,"title":{},"body":{"components/AboutComponent.html":{}}}],["this.onchange",{"_index":1599,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["this.onchange(safevalue",{"_index":1589,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["this.ontouched",{"_index":1600,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["this.openimageinfullscreen(imageurl",{"_index":2071,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{}}}],["this.primary",{"_index":643,"title":{},"body":{"components/ButtonComponent.html":{}}}],["this.productdialog",{"_index":2492,"title":{},"body":{"components/UserPageComponent.html":{}}}],["this.productdialog(product).subscribe",{"_index":2508,"title":{},"body":{"components/UserPageComponent.html":{}}}],["this.productform.patchvalue",{"_index":1363,"title":{},"body":{"components/DialogProductComponent.html":{}}}],["this.productform.patchvalue(this.data",{"_index":1349,"title":{},"body":{"components/DialogProductComponent.html":{}}}],["this.productform.valid",{"_index":1347,"title":{},"body":{"components/DialogProductComponent.html":{}}}],["this.productform.value",{"_index":1350,"title":{},"body":{"components/DialogProductComponent.html":{}}}],["this.productinfo",{"_index":2035,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{}}}],["this.productinfo.dpimages",{"_index":692,"title":{},"body":{"components/CardItemComponent.html":{}}}],["this.productinfo.dpproductid",{"_index":2041,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{}}}],["this.productinfo?.dpimages",{"_index":2031,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{}}}],["this.products",{"_index":1917,"title":{},"body":{"components/PageCatalogItemComponent.html":{}}}],["this.products$.subscribe",{"_index":1920,"title":{},"body":{"components/PageCatalogItemComponent.html":{}}}],["this.products.push(data",{"_index":2496,"title":{},"body":{"components/UserPageComponent.html":{}}}],["this.productsrepository.getallproducts",{"_index":1919,"title":{},"body":{"components/PageCatalogItemComponent.html":{}}}],["this.productsrepository.getproductbyid(id).subscribe",{"_index":2507,"title":{},"body":{"components/UserPageComponent.html":{}}}],["this.productsrepositoryservice.createproduct(productdata).subscribe",{"_index":1354,"title":{},"body":{"components/DialogProductComponent.html":{}}}],["this.productsrepositoryservice.getproductbyid(+dpproductid).subscribe",{"_index":2034,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{}}}],["this.productsrepositoryservice.getproductbyid(item.productid",{"_index":2226,"title":{},"body":{"injectables/ShopCartRepositoryService.html":{}}}],["this.productsrepositoryservice.updateproduct(productdata.dpproductid",{"_index":1359,"title":{},"body":{"components/DialogProductComponent.html":{}}}],["this.productsservice.addtocart(request",{"_index":2158,"title":{},"body":{"injectables/ProductsRepositoryService.html":{}}}],["this.productsservice.createproduct(product",{"_index":2155,"title":{},"body":{"injectables/ProductsRepositoryService.html":{}}}],["this.productsservice.deleteproduct(id",{"_index":2157,"title":{},"body":{"injectables/ProductsRepositoryService.html":{}}}],["this.productsservice.getallproducts",{"_index":2147,"title":{},"body":{"injectables/ProductsRepositoryService.html":{}}}],["this.productsservice.getproductbyid(id).pipe",{"_index":2152,"title":{},"body":{"injectables/ProductsRepositoryService.html":{}}}],["this.productsservice.updateproduct(id",{"_index":2156,"title":{},"body":{"injectables/ProductsRepositoryService.html":{}}}],["this.quantity",{"_index":2042,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{}}}],["this.recordachievement",{"_index":2337,"title":{},"body":{"components/ThemeToggleComponent.html":{}}}],["this.recordachievement(userprojid",{"_index":2330,"title":{},"body":{"components/ThemeToggleComponent.html":{}}}],["this.responsealert.emit(true",{"_index":1709,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["this.route.snapshot.parammap.get('dpproductid",{"_index":2033,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{}}}],["this.router.navigate",{"_index":1790,"title":{},"body":{"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/UserPageComponent.html":{}}}],["this.router.navigate(['/login",{"_index":2184,"title":{},"body":{"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{}}}],["this.router.navigate(['/order",{"_index":866,"title":{},"body":{"interfaces/CartItem.html":{},"components/PageCartComponent.html":{}}}],["this.router.navigate(['/register",{"_index":1796,"title":{},"body":{"components/LoginComponent.html":{},"components/LoginProjComponent.html":{}}}],["this.router.navigate([path",{"_index":105,"title":{},"body":{"components/AboutComponent.html":{},"components/NavbarComponent.html":{},"components/UserPageComponent.html":{}}}],["this.router.navigatebyurl",{"_index":609,"title":{},"body":{"components/BackButtonComponent.html":{}}}],["this.sanitizer.bypasssecuritytrusturl(url",{"_index":775,"title":{},"body":{"components/CarouselImgComponent.html":{}}}],["this.sanitizer.sanitize(securitycontext.url",{"_index":2047,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{}}}],["this.searchquery.emit(safevalue",{"_index":1588,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["this.searchquery.emit(value",{"_index":1583,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["this.selectedfile",{"_index":1261,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["this.selectedsizeid",{"_index":2043,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{}}}],["this.setauthenticated(!!token",{"_index":565,"title":{},"body":{"injectables/AuthProjService.html":{}}}],["this.setauthenticated(false",{"_index":569,"title":{},"body":{"injectables/AuthProjService.html":{},"injectables/AuthService.html":{}}}],["this.setauthenticated(true",{"_index":561,"title":{},"body":{"injectables/AuthProjService.html":{},"injectables/AuthService.html":{}}}],["this.shopcartservice.checkout(cartdata",{"_index":2252,"title":{},"body":{"injectables/ShopCartRepositoryService.html":{}}}],["this.shopcartservice.exporttoexcel(orderid",{"_index":2255,"title":{},"body":{"injectables/ShopCartRepositoryService.html":{}}}],["this.showerror",{"_index":1161,"title":{},"body":{"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{}}}],["this.showerror(validationerror",{"_index":1275,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["this.showsuccess",{"_index":1166,"title":{},"body":{"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{}}}],["this.showwarning",{"_index":1191,"title":{},"body":{"components/DialogCategoryComponent.html":{},"components/DialogProductComponent.html":{}}}],["this.simulateserverfailure",{"_index":2397,"title":{},"body":{"injectables/UserAchievementsService.html":{}}}],["this.size",{"_index":645,"title":{},"body":{"components/ButtonComponent.html":{}}}],["this.storage.getitem(this.key",{"_index":2320,"title":{},"body":{"components/ThemeToggleComponent.html":{}}}],["this.storage.removeitem(this.key",{"_index":2336,"title":{},"body":{"components/ThemeToggleComponent.html":{}}}],["this.storage.setitem(this.key",{"_index":2325,"title":{},"body":{"components/ThemeToggleComponent.html":{}}}],["this.subscriptions.add",{"_index":770,"title":{},"body":{"components/CarouselImgComponent.html":{}}}],["this.subscriptions.unsubscribe",{"_index":104,"title":{},"body":{"components/AboutComponent.html":{},"components/CarouselImgComponent.html":{}}}],["this.toggle",{"_index":2321,"title":{},"body":{"components/ThemeToggleComponent.html":{}}}],["this.toggle.tostring",{"_index":2326,"title":{},"body":{"components/ThemeToggleComponent.html":{}}}],["this.togglecount",{"_index":2327,"title":{},"body":{"components/ThemeToggleComponent.html":{}}}],["this.unlockuserachievement(userprojid",{"_index":2412,"title":{},"body":{"injectables/UserAchievementsService.html":{}}}],["this.updatecartitemquantity(item",{"_index":846,"title":{},"body":{"interfaces/CartItem.html":{},"components/PageCartComponent.html":{}}}],["this.updatecategory",{"_index":1158,"title":{},"body":{"components/DialogCategoryComponent.html":{}}}],["this.updateimage(updaterequest",{"_index":1291,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["this.updateproduct",{"_index":1351,"title":{},"body":{"components/DialogProductComponent.html":{}}}],["this.user",{"_index":1993,"title":{},"body":{"components/PageComponent.html":{}}}],["this.userachievementsrepo.getcompletedachievementsbyusername(this.username",{"_index":462,"title":{},"body":{"components/AchievmentsPageForUserComponent.html":{}}}],["this.userachievementsrepository",{"_index":473,"title":{},"body":{"components/AchievmentsPageForUserComponent.html":{},"interfaces/CartItem.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/LoginComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{}}}],["this.userachievementsrepository.handleachievement",{"_index":696,"title":{},"body":{"components/CardItemComponent.html":{}}}],["this.userachievementsservice.createuserachievement(userprojid",{"_index":2359,"title":{},"body":{"injectables/UserAchievementsRepositoryService.html":{}}}],["this.userachievementsservice.getalluserachievements",{"_index":2357,"title":{},"body":{"injectables/UserAchievementsRepositoryService.html":{}}}],["this.userachievementsservice.getalwaysfailmode",{"_index":693,"title":{},"body":{"components/CardItemComponent.html":{},"interfaces/CartItem.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageProjComponent.html":{}}}],["this.userachievementsservice.getcompletedachievementsbyusername(username",{"_index":2361,"title":{},"body":{"injectables/UserAchievementsRepositoryService.html":{}}}],["this.userachievementsservice.getuserachievement(userprojid",{"_index":2358,"title":{},"body":{"injectables/UserAchievementsRepositoryService.html":{}}}],["this.userachievementsservice.handleachievement(userprojid",{"_index":2363,"title":{},"body":{"injectables/UserAchievementsRepositoryService.html":{}}}],["this.userachievementsservice.setalwaysfailmode(this.alwaysfailmode",{"_index":1838,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.userachievementsservice.unlockuserachievement(userprojid",{"_index":2360,"title":{},"body":{"injectables/UserAchievementsRepositoryService.html":{}}}],["this.username",{"_index":452,"title":{},"body":{"components/AchievmentsPageForUserComponent.html":{}}}],["this.validatefile(file",{"_index":1274,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["throwerror",{"_index":2392,"title":{},"body":{"injectables/UserAchievementsService.html":{}}}],["tip",{"_index":1979,"title":{},"body":{"components/PageComponent.html":{}}}],["title",{"_index":175,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"interfaces/IAchievement.html":{},"components/PageItemFromCatalogComponent.html":{},"miscellaneous/variables.html":{}}}],["toggle",{"_index":2285,"title":{},"body":{"components/ThemeToggleComponent.html":{}}}],["toggle'},{'name",{"_index":319,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{}}}],["toggle.component",{"_index":96,"title":{},"body":{"components/AboutComponent.html":{},"components/NavbarComponent.html":{},"components/UserPageComponent.html":{}}}],["toggle.component.css",{"_index":2318,"title":{},"body":{"components/ThemeToggleComponent.html":{}}}],["toggle.component.css,../../../styles/root.css",{"_index":2287,"title":{},"body":{"components/ThemeToggleComponent.html":{}}}],["toggle.component.html",{"_index":2288,"title":{},"body":{"components/ThemeToggleComponent.html":{}}}],["toggle.component.ts",{"_index":2284,"title":{},"body":{"components/ThemeToggleComponent.html":{},"coverage.html":{}}}],["toggle.component.ts:20",{"_index":2302,"title":{},"body":{"components/ThemeToggleComponent.html":{}}}],["toggle.component.ts:21",{"_index":2307,"title":{},"body":{"components/ThemeToggleComponent.html":{}}}],["toggle.component.ts:22",{"_index":2305,"title":{},"body":{"components/ThemeToggleComponent.html":{}}}],["toggle.component.ts:23",{"_index":2300,"title":{},"body":{"components/ThemeToggleComponent.html":{}}}],["toggle.component.ts:24",{"_index":2310,"title":{},"body":{"components/ThemeToggleComponent.html":{}}}],["toggle.component.ts:25",{"_index":2311,"title":{},"body":{"components/ThemeToggleComponent.html":{}}}],["toggle.component.ts:26",{"_index":2298,"title":{},"body":{"components/ThemeToggleComponent.html":{}}}],["toggle.component.ts:27",{"_index":2299,"title":{},"body":{"components/ThemeToggleComponent.html":{}}}],["toggle.component.ts:29",{"_index":2309,"title":{},"body":{"components/ThemeToggleComponent.html":{}}}],["toggle.component.ts:30",{"_index":2293,"title":{},"body":{"components/ThemeToggleComponent.html":{}}}],["toggle.component.ts:42",{"_index":2297,"title":{},"body":{"components/ThemeToggleComponent.html":{}}}],["toggle.component.ts:80",{"_index":2296,"title":{},"body":{"components/ThemeToggleComponent.html":{}}}],["toggle.component.ts:96",{"_index":2295,"title":{},"body":{"components/ThemeToggleComponent.html":{}}}],["toggle/theme",{"_index":95,"title":{},"body":{"components/AboutComponent.html":{},"components/NavbarComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"coverage.html":{}}}],["togglealwaysfail",{"_index":1826,"title":{},"body":{"components/NavbarComponent.html":{},"components/UserPageProjComponent.html":{}}}],["togglecount",{"_index":2290,"title":{},"body":{"components/ThemeToggleComponent.html":{}}}],["toggletheme",{"_index":1034,"title":{},"body":{"injectables/ConfigService.html":{},"components/ThemeToggleComponent.html":{}}}],["togglethemesuccess",{"_index":944,"title":{},"body":{"injectables/ConfigService.html":{}}}],["token",{"_index":564,"title":{},"body":{"injectables/AuthProjService.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/UserPageComponent.html":{}}}],["toolbar",{"_index":1984,"title":{},"body":{"components/PageComponent.html":{}}}],["tools",{"_index":2652,"title":{},"body":{"index.html":{}}}],["top",{"_index":216,"title":{},"body":{"components/AboutComponent.html":{},"components/HeaderComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{}}}],["total",{"_index":1901,"title":{},"body":{"components/PageCartComponent.html":{}}}],["totalprice",{"_index":814,"title":{},"body":{"interfaces/CartItem.html":{},"interfaces/IDpOrderDetail.html":{},"components/PageCartComponent.html":{}}}],["totalsorter",{"_index":816,"title":{},"body":{"interfaces/CartItem.html":{},"components/PageCartComponent.html":{}}}],["trackbyindex",{"_index":1869,"title":{},"body":{"components/PageCartComponent.html":{}}}],["trackbyindex(index",{"_index":837,"title":{},"body":{"interfaces/CartItem.html":{},"components/PageCartComponent.html":{}}}],["trackbyproductid",{"_index":1905,"title":{},"body":{"components/PageCatalogItemComponent.html":{}}}],["trackbyproductid(index",{"_index":1911,"title":{},"body":{"components/PageCatalogItemComponent.html":{}}}],["transform",{"_index":238,"title":{},"body":{"components/AboutComponent.html":{},"components/PageItemFromCatalogComponent.html":{}}}],["transition",{"_index":236,"title":{},"body":{"components/AboutComponent.html":{},"components/PageItemFromCatalogComponent.html":{}}}],["translate",{"_index":2093,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{}}}],["translatey",{"_index":2081,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{}}}],["translatey(0",{"_index":2116,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{}}}],["translatey(10px",{"_index":2115,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{}}}],["transparent",{"_index":662,"title":{},"body":{"components/ButtonComponent.html":{},"components/PageItemFromCatalogComponent.html":{}}}],["trash",{"_index":1693,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["trash'},{'name",{"_index":295,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{}}}],["trash.component.css",{"_index":1703,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["trash.component.css,../../../styles/root.css",{"_index":1694,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["trash.component.html",{"_index":1695,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["trash.component.ts",{"_index":1692,"title":{},"body":{"components/IconTrashComponent.html":{},"coverage.html":{}}}],["trash.component.ts:19",{"_index":1700,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["trash.component.ts:22",{"_index":1699,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["trash.component.ts:28",{"_index":1701,"title":{},"body":{"components/IconTrashComponent.html":{}}}],["trash/icon",{"_index":1691,"title":{},"body":{"components/IconTrashComponent.html":{},"coverage.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{}}}],["true",{"_index":612,"title":{},"body":{"components/ButtonComponent.html":{},"components/CarouselImgComponent.html":{},"interfaces/CartItem.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"injectables/ShopCartRepositoryService.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":449,"title":{},"body":{"components/AchievmentsPageForUserComponent.html":{},"components/BackButtonComponent.html":{},"injectables/ShopCartRepositoryService.html":{}}}],["tslib",{"_index":2625,"title":{},"body":{"dependencies.html":{}}}],["tui",{"_index":155,"title":{},"body":{"components/AboutComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/UserPageComponent.html":{}}}],["tui.border",{"_index":161,"title":{},"body":{"components/AboutComponent.html":{}}}],["tui.breakpoint('sm",{"_index":172,"title":{},"body":{"components/AboutComponent.html":{}}}],["tui.font",{"_index":188,"title":{},"body":{"components/AboutComponent.html":{}}}],["tui.spacing(1",{"_index":178,"title":{},"body":{"components/AboutComponent.html":{}}}],["tui.spacing(2",{"_index":174,"title":{},"body":{"components/AboutComponent.html":{}}}],["tui.spacing(4",{"_index":151,"title":{},"body":{"components/AboutComponent.html":{}}}],["tui_dark_mode",{"_index":510,"title":{},"body":{"components/AppComponent.html":{},"components/ThemeToggleComponent.html":{}}}],["tui_dark_mode_key",{"_index":2312,"title":{},"body":{"components/ThemeToggleComponent.html":{}}}],["tuiaccordion",{"_index":20,"title":{},"body":{"components/AboutComponent.html":{}}}],["tuiaccordionitem",{"_index":21,"title":{},"body":{"components/AboutComponent.html":{}}}],["tuialertoptions",{"_index":491,"title":{},"body":{"components/AlertDeleteComponent.html":{}}}],["tuialertservice",{"_index":82,"title":{},"body":{"components/AboutComponent.html":{},"components/AlertDeleteComponent.html":{},"interfaces/CartItem.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/IconTrashComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"injectables/UserAchievementsService.html":{}}}],["tuiamountpipe",{"_index":706,"title":{},"body":{"components/CarouselImgComponent.html":{}}}],["tuiappearance",{"_index":673,"title":{},"body":{"components/CardItemComponent.html":{},"interfaces/CartItem.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/PageCartComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"miscellaneous/variables.html":{}}}],["tuiautofocus",{"_index":137,"title":{},"body":{"components/AboutComponent.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/UserPageComponent.html":{}}}],["tuiavatar",{"_index":27,"title":{},"body":{"components/AboutComponent.html":{},"components/CarouselImgComponent.html":{},"components/NavbarComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{}}}],["tuibutton",{"_index":18,"title":{},"body":{"components/AboutComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"interfaces/CartItem.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{},"miscellaneous/variables.html":{}}}],["tuicardlarge",{"_index":1763,"title":{},"body":{"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{}}}],["tuicarousel",{"_index":707,"title":{},"body":{"components/CarouselImgComponent.html":{}}}],["tuicomparator",{"_index":794,"title":{},"body":{"interfaces/CartItem.html":{},"components/PageCartComponent.html":{}}}],["tuidatalistwrapper",{"_index":1070,"title":{},"body":{"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{}}}],["tuiday",{"_index":789,"title":{},"body":{"interfaces/CartItem.html":{},"components/PageCartComponent.html":{}}}],["tuiday.currentlocal",{"_index":831,"title":{},"body":{"interfaces/CartItem.html":{},"components/PageCartComponent.html":{}}}],["tuidefaultsort",{"_index":795,"title":{},"body":{"interfaces/CartItem.html":{},"components/PageCartComponent.html":{}}}],["tuidefaultsort(a.price",{"_index":818,"title":{},"body":{"interfaces/CartItem.html":{},"components/PageCartComponent.html":{}}}],["tuidialog",{"_index":2484,"title":{},"body":{"components/UserPageComponent.html":{}}}],["tuidialog(dialogcategorycomponent",{"_index":2465,"title":{},"body":{"components/UserPageComponent.html":{}}}],["tuidialog(dialogimagecomponent",{"_index":2472,"title":{},"body":{"components/UserPageComponent.html":{}}}],["tuidialog(dialogproductcomponent",{"_index":2476,"title":{},"body":{"components/UserPageComponent.html":{}}}],["tuidialogcontext",{"_index":1144,"title":{},"body":{"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{}}}],["tuidialogservice",{"_index":1145,"title":{},"body":{"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/UserPageComponent.html":{}}}],["tuierror",{"_index":1764,"title":{},"body":{"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{}}}],["tuifielderrorpipe",{"_index":1765,"title":{},"body":{"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{}}}],["tuifilelike",{"_index":1256,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["tuifiles",{"_index":1196,"title":{},"body":{"components/DialogImageComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{}}}],["tuiform",{"_index":1766,"title":{},"body":{"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{}}}],["tuiheader",{"_index":1767,"title":{},"body":{"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{}}}],["tuiicon",{"_index":24,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/CartItem.html":{},"components/IconTrashComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{},"miscellaneous/variables.html":{}}}],["tuiiconpipe",{"_index":29,"title":{},"body":{"components/AboutComponent.html":{},"components/IconTrashComponent.html":{},"components/NavbarComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{}}}],["tuiinputmodule",{"_index":1071,"title":{},"body":{"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{}}}],["tuilink",{"_index":23,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/NavbarComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{}}}],["tuiloader",{"_index":709,"title":{},"body":{"components/CarouselImgComponent.html":{}}}],["tuinotification",{"_index":1768,"title":{},"body":{"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{}}}],["tuipagination",{"_index":708,"title":{},"body":{"components/CarouselImgComponent.html":{}}}],["tuipopover",{"_index":489,"title":{},"body":{"components/AlertDeleteComponent.html":{}}}],["tuiroot",{"_index":500,"title":{},"body":{"components/AppComponent.html":{}}}],["tuiscrollable",{"_index":394,"title":{},"body":{"components/AchievmentsPageForUserComponent.html":{}}}],["tuiscrollbar",{"_index":395,"title":{},"body":{"components/AchievmentsPageForUserComponent.html":{},"interfaces/CartItem.html":{},"components/PageCartComponent.html":{}}}],["tuiselectmodule",{"_index":1072,"title":{},"body":{"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{}}}],["tuislider",{"_index":1073,"title":{},"body":{"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{}}}],["tuiswitch",{"_index":2286,"title":{},"body":{"components/ThemeToggleComponent.html":{}}}],["tuitable",{"_index":396,"title":{},"body":{"components/AchievmentsPageForUserComponent.html":{},"interfaces/CartItem.html":{},"components/PageCartComponent.html":{}}}],["tuitextfield",{"_index":1074,"title":{},"body":{"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{}}}],["tuitextfieldcontrollermodule",{"_index":1075,"title":{},"body":{"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{}}}],["tuititle",{"_index":19,"title":{},"body":{"components/AboutComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{}}}],["tutorial",{"_index":1974,"title":{},"body":{"components/PageComponent.html":{}}}],["tutorials",{"_index":1976,"title":{},"body":{"components/PageComponent.html":{}}}],["type",{"_index":54,"title":{},"body":{"components/AboutComponent.html":{},"injectables/AchievementsRepositoryService.html":{},"injectables/AchievementsService.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"injectables/AuthProjRepositoryService.html":{},"injectables/AuthProjService.html":{},"injectables/AuthRepositoryService.html":{},"injectables/AuthService.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"interfaces/CartItem.html":{},"injectables/CategoriesRepositoryService.html":{},"injectables/ConfigService.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"injectables/DpCategoriesService.html":{},"injectables/DpImagesService.html":{},"injectables/DpOrderCompositionsService.html":{},"injectables/DpOrdersService.html":{},"injectables/DpProductAttributesService.html":{},"injectables/DpSizesService.html":{},"injectables/DpUserProjsService.html":{},"injectables/DpUsersService.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IAchievement.html":{},"interfaces/IAddToCartRequest.html":{},"interfaces/ICartItem.html":{},"interfaces/ICartViewModel.html":{},"interfaces/ICreateDpImageRequest.html":{},"interfaces/IDpCategory.html":{},"interfaces/IDpImage.html":{},"interfaces/IDpOrder.html":{},"interfaces/IDpOrderComposition.html":{},"interfaces/IDpOrderDetail.html":{},"interfaces/IDpProduct.html":{},"interfaces/IDpProductAttribute.html":{},"interfaces/IDpSize.html":{},"interfaces/IDpUser.html":{},"interfaces/IDpUserProj.html":{},"interfaces/IRemoveFromCartRequest.html":{},"interfaces/IUpdateCartRequest.html":{},"interfaces/IUpdateDpImageRequest.html":{},"interfaces/IUserHasAchievement.html":{},"components/IconTrashComponent.html":{},"injectables/ImagesRepositoryService.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"injectables/OrderCompositionsRepositoryService.html":{},"injectables/OrderRepositoryService.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"injectables/ProductAttributesRepositoryService.html":{},"injectables/ProductsRepositoryService.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"injectables/ShopCartRepositoryService.html":{},"injectables/ShopCartService.html":{},"injectables/SizesRepositoryService.html":{},"components/ThemeToggleComponent.html":{},"interfaces/User.html":{},"injectables/UserAchievementsRepositoryService.html":{},"injectables/UserAchievementsService.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{},"injectables/UserProjsRepositoryService.html":{},"injectables/UsersRepositoryService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":2699,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":753,"title":{},"body":{"components/CarouselImgComponent.html":{}}}],["typescript",{"_index":114,"title":{},"body":{"components/AboutComponent.html":{}}}],["typography.css",{"_index":257,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/BackButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"components/FilterByInputComponent.html":{},"components/IconTrashComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{}}}],["ui",{"_index":108,"title":{},"body":{"components/AboutComponent.html":{},"components/UserPageComponent.html":{}}}],["ui/addon",{"_index":438,"title":{},"body":{"components/AchievmentsPageForUserComponent.html":{},"components/CarouselImgComponent.html":{},"interfaces/CartItem.html":{},"components/PageCartComponent.html":{},"dependencies.html":{}}}],["ui/cdk",{"_index":490,"title":{},"body":{"components/AlertDeleteComponent.html":{},"interfaces/CartItem.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/PageCartComponent.html":{},"components/UserPageComponent.html":{},"dependencies.html":{}}}],["ui/core",{"_index":84,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"interfaces/CartItem.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/IconTrashComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"injectables/UserAchievementsService.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{},"dependencies.html":{}}}],["ui/event",{"_index":2614,"title":{},"body":{"dependencies.html":{}}}],["ui/icons",{"_index":2617,"title":{},"body":{"dependencies.html":{}}}],["ui/kit",{"_index":85,"title":{},"body":{"components/AboutComponent.html":{},"components/CarouselImgComponent.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{},"dependencies.html":{}}}],["ui/layout",{"_index":1781,"title":{},"body":{"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"dependencies.html":{}}}],["ui/legacy",{"_index":1146,"title":{},"body":{"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{},"dependencies.html":{}}}],["ui/polymorpheus",{"_index":493,"title":{},"body":{"components/AlertDeleteComponent.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/IconTrashComponent.html":{}}}],["uint8array",{"_index":1642,"title":{},"body":{"interfaces/IDpImage.html":{}}}],["uis",{"_index":1940,"title":{},"body":{"components/PageComponent.html":{}}}],["ul",{"_index":2002,"title":{},"body":{"components/PageComponent.html":{}}}],["unauthorized",{"_index":1054,"title":{},"body":{"injectables/ConfigService.html":{}}}],["undefined",{"_index":1741,"title":{},"body":{"injectables/ImagesRepositoryService.html":{},"components/PageItemFromCatalogComponent.html":{}}}],["unit",{"_index":2669,"title":{},"body":{"index.html":{}}}],["unitprice",{"_index":1659,"title":{},"body":{"interfaces/IDpOrderDetail.html":{}}}],["unlockachievement",{"_index":367,"title":{},"body":{"injectables/AchievementsService.html":{}}}],["unlockachievement(achievementtitle",{"_index":374,"title":{},"body":{"injectables/AchievementsService.html":{}}}],["unlocked",{"_index":386,"title":{},"body":{"injectables/AchievementsService.html":{}}}],["unlockuserachievement",{"_index":2345,"title":{},"body":{"injectables/UserAchievementsRepositoryService.html":{},"injectables/UserAchievementsService.html":{}}}],["unlockuserachievement(userprojid",{"_index":2354,"title":{},"body":{"injectables/UserAchievementsRepositoryService.html":{},"injectables/UserAchievementsService.html":{}}}],["updateachievement",{"_index":336,"title":{},"body":{"injectables/AchievementsRepositoryService.html":{},"injectables/AchievementsService.html":{}}}],["updateachievement(id",{"_index":352,"title":{},"body":{"injectables/AchievementsRepositoryService.html":{},"injectables/AchievementsService.html":{}}}],["updatecart",{"_index":2201,"title":{},"body":{"injectables/ShopCartRepositoryService.html":{},"injectables/ShopCartService.html":{}}}],["updatecart(request",{"_index":2215,"title":{},"body":{"injectables/ShopCartRepositoryService.html":{},"injectables/ShopCartService.html":{}}}],["updatecartitemquantity",{"_index":1870,"title":{},"body":{"components/PageCartComponent.html":{}}}],["updatecartitemquantity(item",{"_index":871,"title":{},"body":{"interfaces/CartItem.html":{},"components/PageCartComponent.html":{}}}],["updatecartquantity",{"_index":1028,"title":{},"body":{"injectables/ConfigService.html":{}}}],["updatecartquantityfailed",{"_index":989,"title":{},"body":{"injectables/ConfigService.html":{}}}],["updatecartquantitysuccess",{"_index":936,"title":{},"body":{"injectables/ConfigService.html":{}}}],["updatecategory",{"_index":1090,"title":{},"body":{"components/DialogCategoryComponent.html":{}}}],["updatecategory(categorydata",{"_index":1117,"title":{},"body":{"components/DialogCategoryComponent.html":{}}}],["updatecategoryfailed",{"_index":999,"title":{},"body":{"injectables/ConfigService.html":{}}}],["updatecategorysuccess",{"_index":955,"title":{},"body":{"injectables/ConfigService.html":{}}}],["updated",{"_index":882,"title":{},"body":{"interfaces/CartItem.html":{},"components/PageCartComponent.html":{}}}],["updatedpcategory",{"_index":891,"title":{},"body":{"injectables/CategoriesRepositoryService.html":{},"injectables/DpCategoriesService.html":{}}}],["updatedpcategory(id",{"_index":900,"title":{},"body":{"injectables/CategoriesRepositoryService.html":{},"injectables/DpCategoriesService.html":{}}}],["updatedpimage",{"_index":1381,"title":{},"body":{"injectables/DpImagesService.html":{},"injectables/ImagesRepositoryService.html":{}}}],["updatedpimage(id",{"_index":1394,"title":{},"body":{"injectables/DpImagesService.html":{},"injectables/ImagesRepositoryService.html":{}}}],["updatedporder",{"_index":1437,"title":{},"body":{"injectables/DpOrdersService.html":{},"injectables/OrderRepositoryService.html":{}}}],["updatedporder(id",{"_index":1448,"title":{},"body":{"injectables/DpOrdersService.html":{},"injectables/OrderRepositoryService.html":{}}}],["updatedpordercomposition",{"_index":1416,"title":{},"body":{"injectables/DpOrderCompositionsService.html":{},"injectables/OrderCompositionsRepositoryService.html":{}}}],["updatedpordercomposition(id",{"_index":1427,"title":{},"body":{"injectables/DpOrderCompositionsService.html":{},"injectables/OrderCompositionsRepositoryService.html":{}}}],["updatedpproductattribute",{"_index":1458,"title":{},"body":{"injectables/DpProductAttributesService.html":{},"injectables/ProductAttributesRepositoryService.html":{}}}],["updatedpproductattribute(id",{"_index":1469,"title":{},"body":{"injectables/DpProductAttributesService.html":{},"injectables/ProductAttributesRepositoryService.html":{}}}],["updatedpsize",{"_index":1479,"title":{},"body":{"injectables/DpSizesService.html":{},"injectables/SizesRepositoryService.html":{}}}],["updatedpsize(id",{"_index":1490,"title":{},"body":{"injectables/DpSizesService.html":{},"injectables/SizesRepositoryService.html":{}}}],["updatedpuser",{"_index":1519,"title":{},"body":{"injectables/DpUsersService.html":{},"injectables/UsersRepositoryService.html":{}}}],["updatedpuser(id",{"_index":1529,"title":{},"body":{"injectables/DpUsersService.html":{},"injectables/UsersRepositoryService.html":{}}}],["updatedpuserproj",{"_index":1500,"title":{},"body":{"injectables/DpUserProjsService.html":{},"injectables/UserProjsRepositoryService.html":{}}}],["updatedpuserproj(id",{"_index":1510,"title":{},"body":{"injectables/DpUserProjsService.html":{},"injectables/UserProjsRepositoryService.html":{}}}],["updateimage",{"_index":1211,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["updateimage(imagedata",{"_index":1224,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["updateimagefailed",{"_index":1001,"title":{},"body":{"injectables/ConfigService.html":{}}}],["updateimagesuccess",{"_index":957,"title":{},"body":{"injectables/ConfigService.html":{}}}],["updateon",{"_index":807,"title":{},"body":{"interfaces/CartItem.html":{},"components/PageCartComponent.html":{}}}],["updateproduct",{"_index":1312,"title":{},"body":{"components/DialogProductComponent.html":{},"injectables/ProductsRepositoryService.html":{},"injectables/ProductsService.html":{}}}],["updateproduct(id",{"_index":2143,"title":{},"body":{"injectables/ProductsRepositoryService.html":{},"injectables/ProductsService.html":{}}}],["updateproduct(productdata",{"_index":1324,"title":{},"body":{"components/DialogProductComponent.html":{}}}],["updateproductfailed",{"_index":1003,"title":{},"body":{"injectables/ConfigService.html":{}}}],["updateproductsuccess",{"_index":959,"title":{},"body":{"injectables/ConfigService.html":{}}}],["updateprofile",{"_index":1017,"title":{},"body":{"injectables/ConfigService.html":{}}}],["updateprofilefailed",{"_index":973,"title":{},"body":{"injectables/ConfigService.html":{}}}],["updateprofilesuccess",{"_index":926,"title":{},"body":{"injectables/ConfigService.html":{}}}],["updaterequest",{"_index":1288,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["url",{"_index":754,"title":{},"body":{"components/CarouselImgComponent.html":{},"components/PageItemFromCatalogComponent.html":{}}}],["url.createobjecturl(blob",{"_index":773,"title":{},"body":{"components/CarouselImgComponent.html":{}}}],["url.revokeobjecturl(url",{"_index":755,"title":{},"body":{"components/CarouselImgComponent.html":{}}}],["use",{"_index":622,"title":{},"body":{"components/ButtonComponent.html":{},"components/PageComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["useexisting",{"_index":1539,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["user",{"_index":230,"title":{"interfaces/User.html":{}},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"injectables/AuthRepositoryService.html":{},"injectables/AuthService.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"injectables/DpUserProjsService.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"interfaces/User.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{},"injectables/UserProjsRepositoryService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user'},{'name",{"_index":266,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{}}}],["user.component",{"_index":2533,"title":{},"body":{"components/UserPageProjComponent.html":{}}}],["user.component.css",{"_index":443,"title":{},"body":{"components/AchievmentsPageForUserComponent.html":{}}}],["user.component.css,../../../styles/root.css",{"_index":397,"title":{},"body":{"components/AchievmentsPageForUserComponent.html":{}}}],["user.component.html",{"_index":398,"title":{},"body":{"components/AchievmentsPageForUserComponent.html":{}}}],["user.component.ts",{"_index":389,"title":{},"body":{"components/AchievmentsPageForUserComponent.html":{},"coverage.html":{}}}],["user.component.ts:102",{"_index":420,"title":{},"body":{"components/AchievmentsPageForUserComponent.html":{}}}],["user.component.ts:30",{"_index":421,"title":{},"body":{"components/AchievmentsPageForUserComponent.html":{}}}],["user.component.ts:31",{"_index":424,"title":{},"body":{"components/AchievmentsPageForUserComponent.html":{}}}],["user.component.ts:32",{"_index":433,"title":{},"body":{"components/AchievmentsPageForUserComponent.html":{}}}],["user.component.ts:33",{"_index":432,"title":{},"body":{"components/AchievmentsPageForUserComponent.html":{}}}],["user.component.ts:34",{"_index":423,"title":{},"body":{"components/AchievmentsPageForUserComponent.html":{}}}],["user.component.ts:35",{"_index":428,"title":{},"body":{"components/AchievmentsPageForUserComponent.html":{}}}],["user.component.ts:36",{"_index":430,"title":{},"body":{"components/AchievmentsPageForUserComponent.html":{}}}],["user.component.ts:38",{"_index":426,"title":{},"body":{"components/AchievmentsPageForUserComponent.html":{}}}],["user.component.ts:39",{"_index":414,"title":{},"body":{"components/AchievmentsPageForUserComponent.html":{}}}],["user.component.ts:47",{"_index":419,"title":{},"body":{"components/AchievmentsPageForUserComponent.html":{}}}],["user.component.ts:98",{"_index":416,"title":{},"body":{"components/AchievmentsPageForUserComponent.html":{}}}],["user.dppassword",{"_index":589,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.dpphonenumber",{"_index":591,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.dpusername",{"_index":588,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.name",{"_index":1607,"title":{},"body":{"components/HeaderComponent.html":{}}}],["user/achievments",{"_index":388,"title":{},"body":{"components/AchievmentsPageForUserComponent.html":{},"components/UserPageProjComponent.html":{},"coverage.html":{}}}],["userachievementsrepo",{"_index":411,"title":{},"body":{"components/AchievmentsPageForUserComponent.html":{}}}],["userachievementsrepository",{"_index":404,"title":{},"body":{"components/AchievmentsPageForUserComponent.html":{},"components/CardItemComponent.html":{},"interfaces/CartItem.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/LoginComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageProjComponent.html":{}}}],["userachievementsrepositoryservice",{"_index":412,"title":{"injectables/UserAchievementsRepositoryService.html":{}},"body":{"components/AchievmentsPageForUserComponent.html":{},"components/CardItemComponent.html":{},"interfaces/CartItem.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/LoginComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/ThemeToggleComponent.html":{},"injectables/UserAchievementsRepositoryService.html":{},"components/UserPageProjComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userachievementsservice",{"_index":41,"title":{"injectables/UserAchievementsService.html":{}},"body":{"components/AboutComponent.html":{},"components/CardItemComponent.html":{},"interfaces/CartItem.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/ThemeToggleComponent.html":{},"injectables/UserAchievementsRepositoryService.html":{},"injectables/UserAchievementsService.html":{},"components/UserPageProjComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userevent.click(loginbutton",{"_index":2752,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userid",{"_index":405,"title":{},"body":{"components/AchievmentsPageForUserComponent.html":{}}}],["username",{"_index":406,"title":{},"body":{"components/AchievmentsPageForUserComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserAchievementsRepositoryService.html":{},"injectables/UserAchievementsService.html":{}}}],["userpagecomponent",{"_index":320,"title":{"components/UserPageComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{},"coverage.html":{}}}],["userpageprojcomponent",{"_index":321,"title":{"components/UserPageProjComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{},"coverage.html":{}}}],["userproj",{"_index":520,"title":{},"body":{"injectables/AuthProjRepositoryService.html":{},"injectables/AuthProjService.html":{},"components/LoginProjComponent.html":{},"components/RegisterProjComponent.html":{}}}],["userproj.login",{"_index":551,"title":{},"body":{"injectables/AuthProjService.html":{}}}],["userproj.password",{"_index":553,"title":{},"body":{"injectables/AuthProjService.html":{}}}],["userprojid",{"_index":470,"title":{},"body":{"components/AchievmentsPageForUserComponent.html":{},"components/CardItemComponent.html":{},"interfaces/CartItem.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/LoginComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/ThemeToggleComponent.html":{},"injectables/UserAchievementsRepositoryService.html":{},"injectables/UserAchievementsService.html":{},"components/UserPageProjComponent.html":{}}}],["userprojsrepositoryservice",{"_index":2536,"title":{"injectables/UserProjsRepositoryService.html":{}},"body":{"injectables/UserProjsRepositoryService.html":{},"coverage.html":{}}}],["users.service",{"_index":2548,"title":{},"body":{"injectables/UsersRepositoryService.html":{}}}],["users.service.ts",{"_index":1514,"title":{},"body":{"injectables/DpUsersService.html":{},"coverage.html":{}}}],["users.service.ts:10",{"_index":1520,"title":{},"body":{"injectables/DpUsersService.html":{}}}],["users.service.ts:14",{"_index":1526,"title":{},"body":{"injectables/DpUsersService.html":{}}}],["users.service.ts:18",{"_index":1528,"title":{},"body":{"injectables/DpUsersService.html":{}}}],["users.service.ts:22",{"_index":1522,"title":{},"body":{"injectables/DpUsersService.html":{}}}],["users.service.ts:26",{"_index":1530,"title":{},"body":{"injectables/DpUsersService.html":{}}}],["users.service.ts:30",{"_index":1525,"title":{},"body":{"injectables/DpUsersService.html":{}}}],["usersrepositoryservice",{"_index":2545,"title":{"injectables/UsersRepositoryService.html":{}},"body":{"injectables/UsersRepositoryService.html":{},"coverage.html":{}}}],["usevalue",{"_index":2724,"title":{},"body":{"miscellaneous/variables.html":{}}}],["using",{"_index":1972,"title":{},"body":{"components/PageComponent.html":{},"index.html":{}}}],["ux",{"_index":138,"title":{},"body":{"components/AboutComponent.html":{}}}],["validatefile",{"_index":1212,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["validatefile(file",{"_index":1227,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["validationerror",{"_index":1273,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["validators",{"_index":1143,"title":{},"body":{"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/UserPageComponent.html":{}}}],["validators.max(100",{"_index":1337,"title":{},"body":{"components/DialogProductComponent.html":{}}}],["validators.maxlength(200",{"_index":1241,"title":{},"body":{"components/DialogImageComponent.html":{}}}],["validators.min(0",{"_index":1334,"title":{},"body":{"components/DialogProductComponent.html":{}}}],["validators.minlength(3",{"_index":1777,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["validators.minlength(6",{"_index":1778,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["validators.pattern('^[a",{"_index":1573,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["validators.required",{"_index":1125,"title":{},"body":{"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/UserPageComponent.html":{}}}],["validids",{"_index":454,"title":{},"body":{"components/AchievmentsPageForUserComponent.html":{}}}],["validids.includes(a.achievementid",{"_index":458,"title":{},"body":{"components/AchievmentsPageForUserComponent.html":{}}}],["value",{"_index":65,"title":{},"body":{"components/AboutComponent.html":{},"injectables/AchievementsService.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"injectables/AuthProjService.html":{},"injectables/AuthService.html":{},"components/ButtonComponent.html":{},"components/CarouselImgComponent.html":{},"interfaces/CartItem.html":{},"injectables/ConfigService.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"injectables/DpCategoriesService.html":{},"injectables/DpImagesService.html":{},"injectables/DpOrderCompositionsService.html":{},"injectables/DpOrdersService.html":{},"injectables/DpProductAttributesService.html":{},"injectables/DpSizesService.html":{},"injectables/DpUserProjsService.html":{},"injectables/DpUsersService.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"injectables/ImagesRepositoryService.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"injectables/ShopCartRepositoryService.html":{},"injectables/ShopCartService.html":{},"components/ThemeToggleComponent.html":{},"injectables/UserAchievementsService.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{},"miscellaneous/variables.html":{}}}],["value.length",{"_index":1189,"title":{},"body":{"components/DialogCategoryComponent.html":{},"components/DialogProductComponent.html":{}}}],["value.slice(0",{"_index":1190,"title":{},"body":{"components/DialogCategoryComponent.html":{},"components/DialogProductComponent.html":{}}}],["var",{"_index":154,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/AppComponent.html":{},"components/BackButtonComponent.html":{},"components/ButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/HeaderComponent.html":{},"components/IconTrashComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{}}}],["variable",{"_index":2560,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2706,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["variables.css",{"_index":248,"title":{},"body":{"components/AboutComponent.html":{},"components/AchievmentsPageForUserComponent.html":{},"components/AlertDeleteComponent.html":{},"components/BackButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"components/FilterByInputComponent.html":{},"components/IconTrashComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/ThemeToggleComponent.html":{},"components/UserPageComponent.html":{}}}],["version",{"_index":2633,"title":{},"body":{"index.html":{},"properties.html":{}}}],["vertical",{"_index":181,"title":{},"body":{"components/AboutComponent.html":{},"components/HeaderComponent.html":{},"components/PageComponent.html":{}}}],["viewchild",{"_index":1142,"title":{},"body":{"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{}}}],["viewchild('categorynameinput",{"_index":1129,"title":{},"body":{"components/DialogCategoryComponent.html":{}}}],["viewchild('productnameinput",{"_index":1249,"title":{},"body":{"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{}}}],["viewports",{"_index":1982,"title":{},"body":{"components/PageComponent.html":{}}}],["viewproduct",{"_index":1013,"title":{},"body":{"injectables/ConfigService.html":{}}}],["viewproductfailed",{"_index":969,"title":{},"body":{"injectables/ConfigService.html":{}}}],["viewproductsuccess",{"_index":922,"title":{},"body":{"injectables/ConfigService.html":{}}}],["visit",{"_index":2693,"title":{},"body":{"index.html":{}}}],["void",{"_index":61,"title":{},"body":{"components/AboutComponent.html":{},"injectables/AchievementsService.html":{},"components/AchievmentsPageForUserComponent.html":{},"injectables/AuthProjRepositoryService.html":{},"injectables/AuthProjService.html":{},"injectables/AuthRepositoryService.html":{},"injectables/AuthService.html":{},"components/BackButtonComponent.html":{},"components/CardItemComponent.html":{},"components/CarouselImgComponent.html":{},"interfaces/CartItem.html":{},"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"components/FilterByInputComponent.html":{},"components/IconTrashComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/NavbarComponent.html":{},"components/PageCartComponent.html":{},"components/PageCatalogItemComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"injectables/ShopCartRepositoryService.html":{},"components/ThemeToggleComponent.html":{},"injectables/UserAchievementsService.html":{},"components/UserPageComponent.html":{},"components/UserPageProjComponent.html":{}}}],["wa_local_storage",{"_index":2313,"title":{},"body":{"components/ThemeToggleComponent.html":{}}}],["wa_window",{"_index":2314,"title":{},"body":{"components/ThemeToggleComponent.html":{}}}],["warning",{"_index":1193,"title":{},"body":{"components/DialogCategoryComponent.html":{},"components/DialogProductComponent.html":{}}}],["warningthreshold",{"_index":1094,"title":{},"body":{"components/DialogCategoryComponent.html":{},"components/DialogProductComponent.html":{}}}],["web",{"_index":2316,"title":{},"body":{"components/ThemeToggleComponent.html":{}}}],["webpack",{"_index":125,"title":{},"body":{"components/AboutComponent.html":{}}}],["weight",{"_index":200,"title":{},"body":{"components/AboutComponent.html":{},"components/ButtonComponent.html":{},"components/HeaderComponent.html":{},"components/PageCartComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{}}}],["weight('bold",{"_index":202,"title":{},"body":{"components/AboutComponent.html":{}}}],["welcome",{"_index":1606,"title":{},"body":{"components/HeaderComponent.html":{}}}],["whenever",{"_index":2645,"title":{},"body":{"index.html":{}}}],["white",{"_index":657,"title":{},"body":{"components/ButtonComponent.html":{},"components/PageItemFromCatalogComponent.html":{}}}],["width",{"_index":142,"title":{},"body":{"components/AboutComponent.html":{},"components/CarouselImgComponent.html":{},"components/LoginComponent.html":{},"components/LoginProjComponent.html":{},"components/PageCartComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterProjComponent.html":{},"components/UserPageComponent.html":{}}}],["window.location.origin}/api/achievements",{"_index":378,"title":{},"body":{"injectables/AchievementsService.html":{}}}],["window.location.origin}/api/auth",{"_index":585,"title":{},"body":{"injectables/AuthService.html":{}}}],["window.location.origin}/api/authproj",{"_index":542,"title":{},"body":{"injectables/AuthProjService.html":{}}}],["window.location.origin}/api/dpcategories",{"_index":1372,"title":{},"body":{"injectables/DpCategoriesService.html":{}}}],["window.location.origin}/api/dpimages",{"_index":1396,"title":{},"body":{"injectables/DpImagesService.html":{}}}],["window.location.origin}/api/dpordercompositions",{"_index":1429,"title":{},"body":{"injectables/DpOrderCompositionsService.html":{}}}],["window.location.origin}/api/dporders",{"_index":1450,"title":{},"body":{"injectables/DpOrdersService.html":{}}}],["window.location.origin}/api/dpproductattributes",{"_index":1471,"title":{},"body":{"injectables/DpProductAttributesService.html":{}}}],["window.location.origin}/api/dpsizes",{"_index":1492,"title":{},"body":{"injectables/DpSizesService.html":{}}}],["window.location.origin}/api/dpuserprojs",{"_index":1512,"title":{},"body":{"injectables/DpUserProjsService.html":{}}}],["window.location.origin}/api/dpusers",{"_index":1531,"title":{},"body":{"injectables/DpUsersService.html":{}}}],["window.location.origin}/api/products",{"_index":2167,"title":{},"body":{"injectables/ProductsService.html":{}}}],["window.location.origin}/api/shopcart",{"_index":2267,"title":{},"body":{"injectables/ShopCartService.html":{}}}],["within(canvaselement",{"_index":2745,"title":{},"body":{"miscellaneous/variables.html":{}}}],["without",{"_index":1953,"title":{},"body":{"components/PageComponent.html":{}}}],["wrap",{"_index":223,"title":{},"body":{"components/AboutComponent.html":{},"components/PageItemFromCatalogComponent.html":{},"components/UserPageComponent.html":{}}}],["wrapper",{"_index":777,"title":{},"body":{"components/CarouselImgComponent.html":{},"components/PageComponent.html":{},"components/PageItemFromCatalogComponent.html":{}}}],["writevalue",{"_index":1552,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["writevalue(value",{"_index":1571,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["y",{"_index":2104,"title":{},"body":{"components/PageItemFromCatalogComponent.html":{}}}],["yes",{"_index":1116,"title":{},"body":{"components/DialogCategoryComponent.html":{},"components/DialogImageComponent.html":{},"components/DialogProductComponent.html":{},"injectables/ShopCartRepositoryService.html":{}}}],["z",{"_index":1574,"title":{},"body":{"components/FilterByInputComponent.html":{}}}],["z0",{"_index":1183,"title":{},"body":{"components/DialogCategoryComponent.html":{}}}],["za",{"_index":1182,"title":{},"body":{"components/DialogCategoryComponent.html":{},"components/FilterByInputComponent.html":{}}}],["zone.js",{"_index":2627,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AboutComponent.html":{"url":"components/AboutComponent.html","title":"component - AboutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AboutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/page/about/about.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-about\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                            TuiButton\n                            TuiTitle\n                            TuiAccordion\n                            TuiAccordionItem\n                            RouterLink\n                            CommonModule\n                            TuiLink\n                            TuiIcon\n                            TuiButton\n                                ThemeToggleComponent\n                                BackButtonComponent\n                            TuiAvatar\n                            AsyncPipe\n                            TuiIconPipe\n                \n            \n\n            \n                styleUrls\n                ./about.component.css,../../../styles/root.css\n            \n\n\n\n            \n                templateUrl\n                ./about.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                alertService\n                            \n                            \n                                    Private\n                                    Readonly\n                                configService\n                            \n                            \n                                    Private\n                                    Readonly\n                                subscriptions\n                            \n                            \n                                    Private\n                                    Readonly\n                                userAchievementsService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                navigateTo\n                            \n                            \n                                navigateToHome\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/page/about/about.component.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        navigateTo\n                        \n                    \n                \n            \n            \n                \nnavigateTo(path: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/page/about/about.component.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                path\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        navigateToHome\n                        \n                    \n                \n            \n            \n                \nnavigateToHome()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/page/about/about.component.ts:57\n                        \n                    \n\n\n            \n                \n                        Переходит на главную страницу\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/page/about/about.component.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        alertService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiAlertService)\n                    \n                \n                    \n                        \n                                Defined in src/app/data/page/about/about.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        configService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ConfigService)\n                    \n                \n                    \n                        \n                                Defined in src/app/data/page/about/about.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/app/data/page/about/about.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        userAchievementsService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UserAchievementsService)\n                    \n                \n                    \n                        \n                                Defined in src/app/data/page/about/about.component.ts:38\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ChangeDetectionStrategy, inject, OnInit, OnDestroy, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { AsyncPipe, CommonModule } from '@angular/common';\nimport { TuiButton, TuiTitle, TuiAlertService, TuiIcon, TuiIconPipe, TuiLink } from '@taiga-ui/core';\nimport { TuiAccordion, TuiAccordionItem, TuiAvatar } from '@taiga-ui/kit';\nimport { Subscription } from 'rxjs';\nimport { Router, RouterLink } from '@angular/router';\nimport { ConfigService } from '../../../services/config.service';\nimport { UserAchievementsService } from '../../../services/user-achievements.service';\nimport { BackButtonComponent } from '../../components/back-button/back-button.component';\nimport { ThemeToggleComponent } from '../../components/theme-toggle/theme-toggle.component';\nimport { AuthService } from '../../../services/auth.service';\n\n@Component({\n  selector: 'app-about',\n imports: [\n    CommonModule,\n    TuiButton,\n    TuiTitle,\n    TuiAccordion,\n    TuiAccordionItem,\n    RouterLink,\n     CommonModule,\n    TuiLink,\n    TuiIcon,\n    TuiButton,\n    ThemeToggleComponent,\n    BackButtonComponent,\n    TuiAvatar,\n    AsyncPipe,\n    TuiIconPipe,\n  ],\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css', '../../../styles/root.css'],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AboutComponent {\nprivate readonly userAchievementsService = inject(UserAchievementsService);\n  private readonly configService = inject(ConfigService);\n  private readonly alertService = inject(TuiAlertService);\n  private readonly subscriptions = new Subscription();\n \n  constructor(\n    private router: Router,\n  ) {}\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n navigateTo(path: string): void {\n    this.router.navigate([path]);\n  }\n  /**\n   * Переходит на главную страницу\n   */\n  navigateToHome(): void {\n    this.navigateTo('/');\n  }\n}\n    \n\n    \n        \n  \n    \n      Этот интерактивный образовательный тренажер разработан для обучения разработчиков ПО созданию\n      веб-приложений. Он имитирует реальный интернет-магазин, позволяя практиковаться в разработке\n      фронтенда (Angular, Taiga UI) и взаимодействии с бэкендом (ASP.NET Core, MSSQL). Тренажер\n      включает тест-кейсы с 50% имитацией сбоев сервера для обучения обработке ошибок.\n    \n  \n\n  \n   \n      \n        \n        Возможности тренажера\n      \n      \n        \n          \n            Каталог товаров: Просматривайте товары, переходите к детальной информации о продукте.\n          \n          \n            Корзина: Добавляйте товары, изменяйте количество, удаляйте позиции и оформляйте заказ.\n          \n          \n            Авторизация и регистрация: Практикуйтесь в реализации входа и создания учетной записи.\n          \n          \n            Система тест-кейсов: Выполняйте действия (вход, покупка, смена темы и т.д.) с 50% имитацией сбоев сервера для обучения обработке ошибок.\n          \n          \n            Темы интерфейса: Переключайтесь между светлой и тёмной темой с возможностью сброса к системной.\n          \n          \n            Управление контентом: Создавайте и редактируйте продукты, категории и изображения через диалоговые окна.\n          \n          \n            Адаптивный дизайн: Тренажер оптимизирован для десктопов, планшетов и мобильных устройств.\n          \n        \n      \n    \n\n   \n      \n        \n        Технологии\n      \n      \n        \n          \n            Фронтенд: Angular 18, TypeScript, Taiga UI, RxJS, Angular Reactive Forms, CSS.\n          \n          \n            Бэкенд: ASP.NET Core 8, RESTful API, MSSQL, контроллеры.\n          \n          \n            Интеграция: HTTP-запросы через HttpClient, прокси для API, JWT-авторизация.\n          \n          \n            Инструменты: Angular CLI, Webpack, ESLint, Prettier.\n          \n        \n      \n    \n\n    \n      \n        \n        Архитектура\n      \n      \n        \n          Тренажер использует простую и понятную архитектуру, подходящую для образовательных целей:\n        \n        \n          \n            Фронтенд: Модульная структура с standalone-компонентами, сервисы для бизнес-логики, RxJS для управления состоянием.\n          \n          \n            Бэкенд: ASP.NET Core контроллеры, прямое взаимодействие с MSSQL через Entity Framework Core.\n          \n          \n            Взаимодействие: REST API с обработкой HTTP-статусов (200, 401, 404, 500), централизованная обработка ошибок.\n          \n          \n            Оптимизация: ChangeDetectionStrategy.OnPush, ленивая загрузка модулей, мемоизация.\n          \n        \n      \n    \n\n    \n      \n        \n        Особенности\n      \n      \n        \n          \n            Имитация сбоев: 50% вероятность серверных ошибок в тест-кейсах для обучения устойчивости приложений.\n          \n          \n            Уведомления: TuiAlertService для информирования об успехах и ошибках.\n          \n          \n            Доступность: ARIA-атрибуты, управление фокусом через TuiAutoFocus.\n          \n          \n            UX: Плавные анимации, интуитивные диалоги, кастомизированные Taiga UI компоненты.\n          \n          \n            Обучение: Тренажер разработан для практики разработки, тестирования и отладки веб-приложений.\n          \n        \n      \n    \n  \n\n \n    Перейти в каталог\n    На главную\n    \n\n\n    \n\n    \n                \n                    ./about.component.css\n                \n                @import '../../../styles/variables.css';\n\n.about-page {\n  max-width: 90%; /* Относительная ширина для гибкости */\n  width: min(50rem, 90vw); /* Ограничение ширины ≈ 800px при базовом 1rem = 16px */\n  margin: 1rem auto; /* tui.spacing(4) ≈ 16px → 1rem */\n  padding: 1rem; /* tui.spacing(4) ≈ 16px → 1rem */\n  background: var(--tui-base-01);\n  border-radius: 0.5rem; /* tui.border-radius('l') ≈ 8px → 0.5rem */\n  box-shadow: 0 0.25rem 1rem var(--tui-shadow); /* 4px → 0.25rem, 16px → 1rem */\n  box-sizing: border-box;\n}\n\n@media (max-width: 47.9375rem) { /* tui.breakpoint('sm') ≈ 767px → 47.9375rem */\n  .about-page {\n    margin: 0.5rem; /* tui.spacing(2) ≈ 8px → 0.5rem */\n    padding: 0.5rem; /* tui.spacing(2) ≈ 8px → 0.5rem */\n  }\n}\n\n.title-icon {\n  margin-left: 0.25rem; /* tui.spacing(1) ≈ 4px → 0.25rem */\n  color: var(--tui-primary);\n  vertical-align: middle; /* Четкое выравнивание с заголовком */\n}\n\n.about-section {\n  margin-bottom: 1rem; /* tui.spacing(4) ≈ 16px → 1rem */\n  font-size: 1rem; /* tui.font-size('m') ≈ 16px → 1rem */\n  line-height: 1.5;\n}\n\n.accordion-header {\n  display: flex;\n  align-items: center;\n  gap: 0.25rem; /* tui.spacing(1) ≈ 4px → 0.25rem */\n  font-weight: 700; /* tui.font-weight('bold') */\n  font-size: 1.125rem; /* tui.font-size('l') ≈ 18px → 1.125rem */\n}\n\n.feature-list {\n  list-style: none;\n  padding: 0;\n  margin: 0;\n}\n\n.feature-list li {\n  display: flex;\n  align-items: flex-start;\n  gap: 0.25rem; /* tui.spacing(1) ≈ 4px → 0.25rem */\n  margin-bottom: 0.5rem; /* tui.spacing(2) ≈ 8px → 0.5rem */\n  font-size: 1rem; /* tui.font-size('m') ≈ 16px → 1rem */\n}\n\n.feature-list li::before {\n  content: '•';\n  color: var(--tui-primary);\n  font-size: 1.5rem;\n  line-height: 1;\n  margin-top: 0.125rem; /* Смещение для выравнивания с текстом */\n}\n\n.actions {\n    display: flex;\n    flex-direction: row;\n    gap: 1.5rem; /* увеличенный отступ между элементами */\n    justify-content: center;\n    align-items: center;\n    margin-top: 2rem; /* увеличенный отступ сверху от аккордеона */\n    margin-bottom: 1rem;\n    flex-wrap: wrap;\n    padding: 1rem 0 0 0;\n    border-top: 1px solid var(--tui-base-03, #e5e5e5); /* лёгкая линия для отделения */\n}\n\n.actions button,\n.actions tui-avatar,\n.actions .user-avatar {\n    margin: 0;\n}\n\n.user-avatar {\n    margin-left: 1.5rem;\n    margin-right: 0.5rem;\n    cursor: pointer;\n    box-shadow: 0 2px 8px var(--tui-shadow, rgba(0,0,0,0.08));\n    transition: box-shadow 0.2s, transform 0.2s;\n}\n.user-avatar:hover {\n    box-shadow: 0 4px 16px var(--tui-shadow, rgba(0,0,0,0.16));\n    transform: scale(1.05);\n}\n\n@media (max-width: 47.9375rem) {\n    .actions {\n        flex-direction: column;\n        gap: 1rem;\n        align-items: center;\n        margin-top: 2rem;\n        padding-top: 0.5rem;\n    }\n    .user-avatar {\n        margin: 0.5rem 0 0 0;\n    }\n}\n\n/* Замените их на [data-theme=\"dark\"] */\n[data-theme=\"dark\"] .about-page {\n  background: var(--tui-base-02); /* Используйте правильную переменную для фона */\n  box-shadow: 0 0.25rem 1rem var(--tui-shadow);\n}\n\n[data-theme=\"dark\"] .about-section,\n[data-theme=\"dark\"] .feature-list li {\n  color: var(--text-color-dark); /* Светлый цвет текста */\n}\n\n\n                \n                    ../../../styles/root.css\n                \n                @import 'variables.css';\n@import 'buttons.css';\n@import 'cards.css';\n@import 'navigation.css';\n@import 'header.css';\n@import 'carousel.css';\n@import 'icons.css';\n@import 'layout.css';\n@import 'tables.css';\n@import 'typography.css';\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Этот интерактивный образовательный тренажер разработан для обучения разработчиков ПО созданию      веб-приложений. Он имитирует реальный интернет-магазин, позволяя практиковаться в разработке      фронтенда (Angular, Taiga UI) и взаимодействии с бэкендом (ASP.NET Core, MSSQL). Тренажер      включает тест-кейсы с 50% имитацией сбоев сервера для обучения обработке ошибок.                                 Возможности тренажера                                          Каталог товаров: Просматривайте товары, переходите к детальной информации о продукте.                                Корзина: Добавляйте товары, изменяйте количество, удаляйте позиции и оформляйте заказ.                                Авторизация и регистрация: Практикуйтесь в реализации входа и создания учетной записи.                                Система тест-кейсов: Выполняйте действия (вход, покупка, смена темы и т.д.) с 50% имитацией сбоев сервера для обучения обработке ошибок.                                Темы интерфейса: Переключайтесь между светлой и тёмной темой с возможностью сброса к системной.                                Управление контентом: Создавайте и редактируйте продукты, категории и изображения через диалоговые окна.                                Адаптивный дизайн: Тренажер оптимизирован для десктопов, планшетов и мобильных устройств.                                                     Технологии                                          Фронтенд: Angular 18, TypeScript, Taiga UI, RxJS, Angular Reactive Forms, CSS.                                Бэкенд: ASP.NET Core 8, RESTful API, MSSQL, контроллеры.                                Интеграция: HTTP-запросы через HttpClient, прокси для API, JWT-авторизация.                                Инструменты: Angular CLI, Webpack, ESLint, Prettier.                                                      Архитектура                              Тренажер использует простую и понятную архитектуру, подходящую для образовательных целей:                                      Фронтенд: Модульная структура с standalone-компонентами, сервисы для бизнес-логики, RxJS для управления состоянием.                                Бэкенд: ASP.NET Core контроллеры, прямое взаимодействие с MSSQL через Entity Framework Core.                                Взаимодействие: REST API с обработкой HTTP-статусов (200, 401, 404, 500), централизованная обработка ошибок.                                Оптимизация: ChangeDetectionStrategy.OnPush, ленивая загрузка модулей, мемоизация.                                                      Особенности                                          Имитация сбоев: 50% вероятность серверных ошибок в тест-кейсах для обучения устойчивости приложений.                                Уведомления: TuiAlertService для информирования об успехах и ошибках.                                Доступность: ARIA-атрибуты, управление фокусом через TuiAutoFocus.                                UX: Плавные анимации, интуитивные диалоги, кастомизированные Taiga UI компоненты.                                Обучение: Тренажер разработан для практики разработки, тестирования и отладки веб-приложений.                                   Перейти в каталог    На главную    '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AchievmentsPageForUserComponent', 'selector': 'app-achievments-page-for-user'},{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'ButtonComponent', 'selector': 'storybook-button'},{'name': 'CardItemComponent', 'selector': 'app-card-item'},{'name': 'CarouselImgComponent', 'selector': 'app-carousel-img'},{'name': 'DialogCategoryComponent', 'selector': 'app-dialog-category'},{'name': 'DialogImageComponent', 'selector': 'app-dialog-image'},{'name': 'DialogProductComponent', 'selector': 'app-dialog-product'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'storybook-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginProjComponent', 'selector': 'app-login-proj'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PageCartComponent', 'selector': 'app-page-cart'},{'name': 'PageCatalogItemComponent', 'selector': 'app-page-catalog-item'},{'name': 'PageComponent', 'selector': 'storybook-page'},{'name': 'PageItemFromCatalogComponent', 'selector': 'app-page-item-from-catalog'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RegisterProjComponent', 'selector': 'app-register-proj'},{'name': 'ThemeToggleComponent', 'selector': 'app-theme-toggle'},{'name': 'UserPageComponent', 'selector': 'app-user-page'},{'name': 'UserPageProjComponent', 'selector': 'app-user-page-proj'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AboutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AchievementsRepositoryService.html":{"url":"injectables/AchievementsRepositoryService.html","title":"injectable - AchievementsRepositoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AchievementsRepositoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/repositories/achievements-repository.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createAchievement\n                            \n                            \n                                deleteAchievement\n                            \n                            \n                                getAchievementById\n                            \n                            \n                                getAllAchievements\n                            \n                            \n                                updateAchievement\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(achievementsService: AchievementsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/repositories/achievements-repository.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        achievementsService\n                                                  \n                                                        \n                                                                        AchievementsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createAchievement\n                        \n                    \n                \n            \n            \n                \ncreateAchievement(achievement: IAchievement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/achievements-repository.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                achievement\n                                            \n                                                            IAchievement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteAchievement\n                        \n                    \n                \n            \n            \n                \ndeleteAchievement(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/achievements-repository.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAchievementById\n                        \n                    \n                \n            \n            \n                \ngetAchievementById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/achievements-repository.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllAchievements\n                        \n                    \n                \n            \n            \n                \ngetAllAchievements()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/achievements-repository.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateAchievement\n                        \n                    \n                \n            \n            \n                \nupdateAchievement(id: number, achievement: IAchievement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/achievements-repository.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                achievement\n                                            \n                                                            IAchievement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { IAchievement } from '../interface/IAchievement';\nimport { AchievementsService } from '../services/achievements.service';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AchievementsRepositoryService {\n  constructor(private achievementsService: AchievementsService) {}\n\n  getAllAchievements(): Observable {\n    return this.achievementsService.getAllAchievements();\n  }\n\n  getAchievementById(id: number): Observable {\n    return this.achievementsService.getAchievementById(id);\n  }\n\n  createAchievement(achievement: IAchievement): Observable {\n    return this.achievementsService.createAchievement(achievement);\n  }\n\n  updateAchievement(id: number, achievement: IAchievement): Observable {\n    return this.achievementsService.updateAchievement(id, achievement);\n  }\n\n  deleteAchievement(id: number): Observable {\n    return this.achievementsService.deleteAchievement(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AchievementsService.html":{"url":"injectables/AchievementsService.html","title":"injectable - AchievementsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AchievementsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/achievements.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createAchievement\n                            \n                            \n                                deleteAchievement\n                            \n                            \n                                getAchievementById\n                            \n                            \n                                getAllAchievements\n                            \n                            \n                                unlockAchievement\n                            \n                            \n                                updateAchievement\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/achievements.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createAchievement\n                        \n                    \n                \n            \n            \n                \ncreateAchievement(achievement: IAchievement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/achievements.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                achievement\n                                            \n                                                            IAchievement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteAchievement\n                        \n                    \n                \n            \n            \n                \ndeleteAchievement(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/achievements.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAchievementById\n                        \n                    \n                \n            \n            \n                \ngetAchievementById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/achievements.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllAchievements\n                        \n                    \n                \n            \n            \n                \ngetAllAchievements()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/achievements.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unlockAchievement\n                        \n                    \n                \n            \n            \n                \nunlockAchievement(achievementTitle: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/achievements.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                achievementTitle\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateAchievement\n                        \n                    \n                \n            \n            \n                \nupdateAchievement(id: number, achievement: IAchievement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/achievements.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                achievement\n                                            \n                                                            IAchievement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${window.location.origin}/api/Achievements`\n                    \n                \n                    \n                        \n                                Defined in src/app/services/achievements.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { IAchievement } from '../interface/IAchievement';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AchievementsService {\n  private baseUrl = `${window.location.origin}/api/Achievements`;\n\n  constructor(private http: HttpClient) {}\n\n  getAllAchievements(): Observable {\n    return this.http.get(this.baseUrl);\n  }\n\n  getAchievementById(id: number): Observable {\n    return this.http.get(`${this.baseUrl}/${id}`);\n  }\n\n  createAchievement(achievement: IAchievement): Observable {\n    return this.http.post(this.baseUrl, achievement);\n  }\n\n  updateAchievement(id: number, achievement: IAchievement): Observable {\n    return this.http.put(`${this.baseUrl}/${id}`, achievement);\n  }\n\n  deleteAchievement(id: number): Observable {\n    return this.http.delete(`${this.baseUrl}/${id}`);\n  }\n\n  // Новый метод для разблокировки ачивки\n  unlockAchievement(achievementTitle: string): void {\n    console.log(`Achievement unlocked: ${achievementTitle}`);\n    // Здесь вы можете добавить логику для обновления состояния ачивки на сервере или локально\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AchievmentsPageForUserComponent.html":{"url":"components/AchievmentsPageForUserComponent.html","title":"component - AchievmentsPageForUserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AchievmentsPageForUserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/page/achievments-page-for-user/achievments-page-for-user.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-achievments-page-for-user\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                            CdkFixedSizeVirtualScroll\n                            CdkVirtualForOf\n                            CdkVirtualScrollViewport\n                            TuiScrollable\n                            TuiScrollbar\n                            TuiTable\n                \n            \n\n            \n                styleUrls\n                ./achievments-page-for-user.component.css,../../../styles/root.css\n            \n\n\n\n            \n                templateUrl\n                ./achievments-page-for-user.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allAchievements\n                            \n                            \n                                    Private\n                                    Readonly\n                                authProjService\n                            \n                            \n                                completedAchievementIds\n                            \n                            \n                                isProjAuthenticated\n                            \n                            \n                                    Private\n                                logoutAttempt\n                            \n                            \n                                    Private\n                                    Readonly\n                                router\n                            \n                            \n                                    Private\n                                    Readonly\n                                userAchievementsRepository\n                            \n                            \n                                userId\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isCompleted\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onNotWorkingButtonClick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, userAchievementsRepo: UserAchievementsRepositoryService, achievementsRepo: AchievementsRepositoryService)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/page/achievments-page-for-user/achievments-page-for-user.component.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userAchievementsRepo\n                                                  \n                                                        \n                                                                        UserAchievementsRepositoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        achievementsRepo\n                                                  \n                                                        \n                                                                        AchievementsRepositoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isCompleted\n                        \n                    \n                \n            \n            \n                \nisCompleted(achievementId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/page/achievments-page-for-user/achievments-page-for-user.component.ts:98\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                achievementId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/page/achievments-page-for-user/achievments-page-for-user.component.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onNotWorkingButtonClick\n                        \n                    \n                \n            \n            \n                \nonNotWorkingButtonClick()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/page/achievments-page-for-user/achievments-page-for-user.component.ts:102\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allAchievements\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IAchievement[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/data/page/achievments-page-for-user/achievments-page-for-user.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        authProjService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthProjService)\n                    \n                \n                    \n                        \n                                Defined in src/app/data/page/achievments-page-for-user/achievments-page-for-user.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        completedAchievementIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/data/page/achievments-page-for-user/achievments-page-for-user.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isProjAuthenticated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/data/page/achievments-page-for-user/achievments-page-for-user.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logoutAttempt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/data/page/achievments-page-for-user/achievments-page-for-user.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/data/page/achievments-page-for-user/achievments-page-for-user.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        userAchievementsRepository\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UserAchievementsRepositoryService)\n                    \n                \n                    \n                        \n                                Defined in src/app/data/page/achievments-page-for-user/achievments-page-for-user.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/data/page/achievments-page-for-user/achievments-page-for-user.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/data/page/achievments-page-for-user/achievments-page-for-user.component.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject, OnInit } from '@angular/core';\nimport { IAchievement } from '../../../interface/IAchievement';\nimport { UserAchievementsRepositoryService } from '../../../repositories/user-achievements-repository.service';\nimport { ConfigService } from '../../../services/config.service';\nimport { CommonModule } from '@angular/common';\nimport { AchievementsRepositoryService } from '../../../repositories/achievements-repository.service';\nimport { TuiTable } from '@taiga-ui/addon-table';\nimport { TuiScrollable, TuiScrollbar } from '@taiga-ui/core';\nimport {\n  CdkFixedSizeVirtualScroll,\n  CdkVirtualForOf,\n  CdkVirtualScrollViewport,\n} from '@angular/cdk/scrolling';\nimport { Router } from '@angular/router';\nimport { AuthProjService } from '../../../services/auth-proj.service';\n\n\n@Component({\n  selector: 'app-achievments-page-for-user',\n  imports: [CommonModule, CdkFixedSizeVirtualScroll,\n    CdkVirtualForOf,\n    CdkVirtualScrollViewport,\n    TuiScrollable,\n    TuiScrollbar,\n    TuiTable,],\n  templateUrl: './achievments-page-for-user.component.html',\n  styleUrls: ['./achievments-page-for-user.component.css', '../../../styles/root.css']\n})\nexport class AchievmentsPageForUserComponent implements OnInit {\n  allAchievements: IAchievement[] = [];\n  completedAchievementIds: number[] = [];\n  username: string = '';\n  userId: number | null = null;\nprivate readonly authProjService = inject(AuthProjService);\n  private readonly router = inject(Router);\n  private readonly userAchievementsRepository = inject(UserAchievementsRepositoryService);\n\n  isProjAuthenticated: boolean = false;\n  private logoutAttempt = 0;\n\n  constructor(\n    private readonly configService: ConfigService = inject(ConfigService),\n    private readonly userAchievementsRepo: UserAchievementsRepositoryService = inject(UserAchievementsRepositoryService),\n    private readonly achievementsRepo: AchievementsRepositoryService = inject(AchievementsRepositoryService)\n  ) { }\n\n  ngOnInit(): void {\n    const projToken = localStorage.getItem('projToken');\n    console.log('[Achievements] projToken:', projToken);\n\n    if (projToken) {\n      try {\n        const payload = JSON.parse(atob(projToken.split('.')[1]));\n        this.username = payload.sub; //  {\n        const validIds = Object.values(this.configService.achievementIds);\n        this.allAchievements = achievements.filter(a => validIds.includes(a.achievementId));\n        console.log('[Achievements] Загружены все ачивки:', this.allAchievements);\n      },\n      error: (err) => {\n        console.error('[Achievements] Ошибка при получении всех ачивок:', err);\n      }\n    });\n\n    // Получаем список завершённых ачивок пользователя\n    if (this.username) {\n      this.userAchievementsRepo.getCompletedAchievementsByUsername(this.username)\n        .subscribe({\n          next: (achievements: IAchievement[]) => {\n            this.completedAchievementIds = achievements.map(a => a.achievementId);\n            console.log('[Achievements] Выполненные ачивки пользователя:', this.completedAchievementIds);\n          },\n          error: (err) => {\n            console.error('[Achievements] Ошибка при получении выполненных ачивок пользователя:', err);\n          }\n        });\n    } else {\n      console.warn('[Achievements] Не удалось получить выполненные ачивки: username пустой');\n    }\n  }\n\n  isCompleted(achievementId: number): boolean {\n    return this.completedAchievementIds.includes(achievementId);\n  } \n\n   onNotWorkingButtonClick(): void {\n    const userProjId = parseInt(localStorage.getItem('userProjId') || '0', 10);\n    this.userAchievementsRepository\n      .handleAchievement(userProjId, this.configService.achievementIds.buttonNotWorking, 'Кнопка не работает!')\n      .subscribe();\n    // Можно добавить уведомление или визуальный эффект\n  }\n}\n    \n\n    \n        \n  \n    \n      \n        Название\n        Описание\n        Статус\n      \n    \n    \n      \n        {{ ach.title }}\n        {{ ach.textAchievement }}\n        \n          Выполнено\n          —\n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./achievments-page-for-user.component.css\n                \n                \n                \n                    ../../../styles/root.css\n                \n                @import 'variables.css';\n@import 'buttons.css';\n@import 'cards.css';\n@import 'navigation.css';\n@import 'header.css';\n@import 'carousel.css';\n@import 'icons.css';\n@import 'layout.css';\n@import 'tables.css';\n@import 'typography.css';\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Название        Описание        Статус                            {{ ach.title }}        {{ ach.textAchievement }}                  Выполнено          —                    '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AchievmentsPageForUserComponent', 'selector': 'app-achievments-page-for-user'},{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'ButtonComponent', 'selector': 'storybook-button'},{'name': 'CardItemComponent', 'selector': 'app-card-item'},{'name': 'CarouselImgComponent', 'selector': 'app-carousel-img'},{'name': 'DialogCategoryComponent', 'selector': 'app-dialog-category'},{'name': 'DialogImageComponent', 'selector': 'app-dialog-image'},{'name': 'DialogProductComponent', 'selector': 'app-dialog-product'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'storybook-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginProjComponent', 'selector': 'app-login-proj'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PageCartComponent', 'selector': 'app-page-cart'},{'name': 'PageCatalogItemComponent', 'selector': 'app-page-catalog-item'},{'name': 'PageComponent', 'selector': 'storybook-page'},{'name': 'PageItemFromCatalogComponent', 'selector': 'app-page-item-from-catalog'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RegisterProjComponent', 'selector': 'app-register-proj'},{'name': 'ThemeToggleComponent', 'selector': 'app-theme-toggle'},{'name': 'UserPageComponent', 'selector': 'app-user-page'},{'name': 'UserPageProjComponent', 'selector': 'app-user-page-proj'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AchievmentsPageForUserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AlertDeleteComponent.html":{"url":"components/AlertDeleteComponent.html","title":"component - AlertDeleteComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AlertDeleteComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/alert-delete/alert-delete.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-alert-on-delete\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./alert-delete.component.css,../../../styles/root.css\n            \n\n\n\n            \n                templateUrl\n                ./alert-delete.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                context\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : injectContext, boolean>>()\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/alert-delete/alert-delete.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule, NgForOf } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, inject } from '@angular/core';\nimport type { TuiPopover } from '@taiga-ui/cdk';\nimport type { TuiAlertOptions } from '@taiga-ui/core';\nimport { TuiAlertService } from '@taiga-ui/core';\nimport { injectContext, PolymorpheusComponent } from '@taiga-ui/polymorpheus';\nimport { switchMap, takeUntil } from 'rxjs';\n\n@Component({\n  selector: 'app-alert-on-delete',\n  imports: [CommonModule],\n  templateUrl: './alert-delete.component.html',\n  styleUrls:[ './alert-delete.component.css',\n    '../../../styles/root.css',],\n})\nexport class AlertDeleteComponent {\n  protected readonly context =\n  injectContext, boolean>>();\n}\n    \n\n    \n        \n    {{ response ? 'Да' : 'Нет' }}\n\n    \n\n    \n                \n                    ./alert-delete.component.css\n                \n                \n                \n                    ../../../styles/root.css\n                \n                @import 'variables.css';\n@import 'buttons.css';\n@import 'cards.css';\n@import 'navigation.css';\n@import 'header.css';\n@import 'carousel.css';\n@import 'icons.css';\n@import 'layout.css';\n@import 'tables.css';\n@import 'typography.css';\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ response ? \\'Да\\' : \\'Нет\\' }}'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AchievmentsPageForUserComponent', 'selector': 'app-achievments-page-for-user'},{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'ButtonComponent', 'selector': 'storybook-button'},{'name': 'CardItemComponent', 'selector': 'app-card-item'},{'name': 'CarouselImgComponent', 'selector': 'app-carousel-img'},{'name': 'DialogCategoryComponent', 'selector': 'app-dialog-category'},{'name': 'DialogImageComponent', 'selector': 'app-dialog-image'},{'name': 'DialogProductComponent', 'selector': 'app-dialog-product'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'storybook-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginProjComponent', 'selector': 'app-login-proj'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PageCartComponent', 'selector': 'app-page-cart'},{'name': 'PageCatalogItemComponent', 'selector': 'app-page-catalog-item'},{'name': 'PageComponent', 'selector': 'storybook-page'},{'name': 'PageItemFromCatalogComponent', 'selector': 'app-page-item-from-catalog'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RegisterProjComponent', 'selector': 'app-register-proj'},{'name': 'ThemeToggleComponent', 'selector': 'app-theme-toggle'},{'name': 'UserPageComponent', 'selector': 'app-user-page'},{'name': 'UserPageProjComponent', 'selector': 'app-user-page-proj'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AlertDeleteComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n            \n                imports\n                \n                            RouterOutlet\n                            TuiRoot\n                            RouterModule\n                            TuiLink\n                                NavbarComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                darkMode\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        darkMode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TUI_DARK_MODE)\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Sota6SiFront'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { TUI_DARK_MODE, TuiLink, TuiRoot } from \"@taiga-ui/core\";\nimport { Component, inject } from '@angular/core';\nimport { RouterModule, RouterOutlet } from '@angular/router';\nimport { NavbarComponent } from \"./data/components/navbar/navbar.component\";\n@Component({\n  selector: 'app-root',\n  imports: [  \n    RouterOutlet, \n    TuiRoot, \n    RouterModule,\n    TuiLink,\n    NavbarComponent,\n    ],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.css'\n})\nexport class AppComponent {\n  title = 'Sota6SiFront';\n  protected readonly darkMode = inject(TUI_DARK_MODE);\n}\n\n    \n\n    \n        \n  \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AchievmentsPageForUserComponent', 'selector': 'app-achievments-page-for-user'},{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'ButtonComponent', 'selector': 'storybook-button'},{'name': 'CardItemComponent', 'selector': 'app-card-item'},{'name': 'CarouselImgComponent', 'selector': 'app-carousel-img'},{'name': 'DialogCategoryComponent', 'selector': 'app-dialog-category'},{'name': 'DialogImageComponent', 'selector': 'app-dialog-image'},{'name': 'DialogProductComponent', 'selector': 'app-dialog-product'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'storybook-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginProjComponent', 'selector': 'app-login-proj'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PageCartComponent', 'selector': 'app-page-cart'},{'name': 'PageCatalogItemComponent', 'selector': 'app-page-catalog-item'},{'name': 'PageComponent', 'selector': 'storybook-page'},{'name': 'PageItemFromCatalogComponent', 'selector': 'app-page-item-from-catalog'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RegisterProjComponent', 'selector': 'app-register-proj'},{'name': 'ThemeToggleComponent', 'selector': 'app-theme-toggle'},{'name': 'UserPageComponent', 'selector': 'app-user-page'},{'name': 'UserPageProjComponent', 'selector': 'app-user-page-proj'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthProjRepositoryService.html":{"url":"injectables/AuthProjRepositoryService.html","title":"injectable - AuthProjRepositoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthProjRepositoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/repositories/auth-proj-repository.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authProjService: AuthProjService)\n                    \n                \n                        \n                            \n                                Defined in src/app/repositories/auth-proj-repository.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authProjService\n                                                  \n                                                        \n                                                                        AuthProjService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(userProj: IDpUserProj)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/auth-proj-repository.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userProj\n                                            \n                                                            IDpUserProj\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/auth-proj-repository.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(userProj: IDpUserProj)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/auth-proj-repository.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userProj\n                                            \n                                                            IDpUserProj\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { IDpUserProj } from '../interface/IDpUserProj';\nimport { AuthProjService } from '../services/auth-proj.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthProjRepositoryService {\n  constructor(private authProjService: AuthProjService) {}\n\n  login(userProj: IDpUserProj): Observable {\n    return this.authProjService.login(userProj);\n  }\n\n  register(userProj: IDpUserProj): Observable {\n    return this.authProjService.register(userProj);\n  }\n\n  logout(): void {\n    this.authProjService.logout();\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthProjService.html":{"url":"injectables/AuthProjService.html","title":"injectable - AuthProjService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthProjService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth-proj.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseUrl\n                            \n                            \n                                    Public\n                                isAuthenticated$\n                            \n                            \n                                    Private\n                                isAuthenticatedSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkAuthStatus\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                register\n                            \n                            \n                                setAuthenticated\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth-proj.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkAuthStatus\n                        \n                    \n                \n            \n            \n                \ncheckAuthStatus()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth-proj.service.ts:55\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(userProj: IDpUserProj)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth-proj.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userProj\n                                            \n                                                            IDpUserProj\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth-proj.service.ts:60\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(userProj: IDpUserProj)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth-proj.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userProj\n                                            \n                                                            IDpUserProj\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAuthenticated\n                        \n                    \n                \n            \n            \n                \nsetAuthenticated(isAuthenticated: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth-proj.service.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                isAuthenticated\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${window.location.origin}/api/AuthProj`\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth-proj.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isAuthenticated$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.isAuthenticatedSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth-proj.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isAuthenticatedSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth-proj.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { IDpUserProj } from '../interface/IDpUserProj';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthProjService {\n  private baseUrl = `${window.location.origin}/api/AuthProj`;\n  private isAuthenticatedSubject = new BehaviorSubject(false);\n  public isAuthenticated$ = this.isAuthenticatedSubject.asObservable();\n\n  constructor(private http: HttpClient) {\n    this.checkAuthStatus();\n  }\n\n  login(userProj: IDpUserProj): Observable {\n    const payload = {\n      login: userProj.login,\n      password: userProj.password,\n    };\n    return this.http.post(`${this.baseUrl}/login`, payload).pipe(\n      tap(response => {\n        if (response.token) {\n          localStorage.setItem('projToken', response.token);\n          localStorage.setItem('userProjId', response.userProjId.toString());\n          this.setAuthenticated(true);\n        }\n      })\n    );\n  }\n\n  register(userProj: IDpUserProj): Observable {\n    const payload = {\n      login: userProj.login,\n      password: userProj.password\n    };\n    return this.http.post(`${this.baseUrl}/register`, payload).pipe(\n      tap(response => {\n        if (response.token) {\n          localStorage.setItem('projToken', response.token);\n          localStorage.setItem('userProjId', response.userProjId.toString());\n          this.setAuthenticated(true);\n        }\n      })\n    );\n  }\n\n  setAuthenticated(isAuthenticated: boolean): void {\n    this.isAuthenticatedSubject.next(isAuthenticated);\n  }\n\n  checkAuthStatus(): void {\n    const token = localStorage.getItem('projToken');\n    this.setAuthenticated(!!token);\n  }\n\n  logout(): void {\n    localStorage.removeItem('projToken');\n        localStorage.removeItem('token');\n    localStorage.removeItem('userProjId');\n    this.setAuthenticated(false);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthRepositoryService.html":{"url":"injectables/AuthRepositoryService.html","title":"injectable - AuthRepositoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthRepositoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/repositories/auth-repository.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/repositories/auth-repository.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(user: IDpUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/auth-repository.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IDpUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/auth-repository.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(user: IDpUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/auth-repository.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IDpUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { IDpUser } from '../interface/IDpUser';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthRepositoryService {\n  constructor(private authService: AuthService) {}\n\n  login(user: IDpUser): Observable {\n    return this.authService.login(user);\n  }\n\n  register(user: IDpUser): Observable {\n    return this.authService.register(user);\n  }\n\n  logout(): void {\n    this.authService.logout();\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseUrl\n                            \n                            \n                                isAuthenticated$\n                            \n                            \n                                    Private\n                                isAuthenticatedSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                register\n                            \n                            \n                                setAuthenticated\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(user: IDpUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IDpUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(user: IDpUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IDpUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAuthenticated\n                        \n                    \n                \n            \n            \n                \nsetAuthenticated(isAuthenticated: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                isAuthenticated\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${window.location.origin}/api/Auth`\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAuthenticated$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.isAuthenticatedSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isAuthenticatedSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { IDpUser } from '../interface/IDpUser';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private baseUrl = `${window.location.origin}/api/Auth`;\n  private isAuthenticatedSubject = new BehaviorSubject(false);\n  isAuthenticated$ = this.isAuthenticatedSubject.asObservable();\n\n  constructor(private http: HttpClient) {}\n\n  setAuthenticated(isAuthenticated: boolean): void {\n    this.isAuthenticatedSubject.next(isAuthenticated);\n  }\n\n  register(user: IDpUser): Observable {\n    const payload = {\n      username: user.dpUsername,\n      password: user.dpPassword,\n      phoneNumber: user.dpPhoneNumber || '0000000000'\n    };\n    return this.http.post(`${this.baseUrl}/register`, payload).pipe(\n      tap(response => {\n        if (response.token) {\n          localStorage.setItem('token', response.token);\n          this.setAuthenticated(true);\n        }\n      })\n    );\n  }\n\n  login(user: IDpUser): Observable {\n    const payload = {\n      username: user.dpUsername,\n      password: user.dpPassword,\n      phoneNumber: user.dpPhoneNumber || '0000000000'\n    };\n    return this.http.post(`${this.baseUrl}/login`, payload).pipe(\n      tap(response => {\n        if (response.token) {\n          localStorage.setItem('token', response.token);\n          this.setAuthenticated(true);\n        }\n      })\n    );\n  }\n\n  logout(): void {\n    localStorage.removeItem('token');\n    this.setAuthenticated(false);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BackButtonComponent.html":{"url":"components/BackButtonComponent.html","title":"component - BackButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BackButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/back-button/back-button.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-back-button\n            \n\n\n\n            \n                styleUrls\n                ./back-button.component.css,../../../styles/root.css\n            \n\n\n\n            \n                templateUrl\n                ./back-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goBack\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(location: Location, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/components/back-button/back-button.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                    Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        goBack\n                        \n                    \n                \n            \n            \n                \ngoBack()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/back-button/back-button.component.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-back-button',\n  imports: [],\n  templateUrl: './back-button.component.html',\n  styleUrls: ['./back-button.component.css',\n    '../../../styles/root.css',],\n})\nexport class BackButtonComponent {\n  constructor(private location: Location, private router: Router) {}\n\n  goBack(): void {\n    try {\n      const previousUrl = this.location.path(true); \n      const baseDomain = '/'; \n      if (previousUrl.startsWith(baseDomain)) {\n        this.location.back(); \n      } else {\n        this.router.navigateByUrl('/');\n      }\n    } catch (error) {\n      this.router.navigateByUrl('/');\n    }\n  }\n\n}\n    \n\n    \n        \n  Назад\n\n    \n\n    \n                \n                    ./back-button.component.css\n                \n                \n                \n                    ../../../styles/root.css\n                \n                @import 'variables.css';\n@import 'buttons.css';\n@import 'cards.css';\n@import 'navigation.css';\n@import 'header.css';\n@import 'carousel.css';\n@import 'icons.css';\n@import 'layout.css';\n@import 'tables.css';\n@import 'typography.css';\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Назад'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AchievmentsPageForUserComponent', 'selector': 'app-achievments-page-for-user'},{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'ButtonComponent', 'selector': 'storybook-button'},{'name': 'CardItemComponent', 'selector': 'app-card-item'},{'name': 'CarouselImgComponent', 'selector': 'app-carousel-img'},{'name': 'DialogCategoryComponent', 'selector': 'app-dialog-category'},{'name': 'DialogImageComponent', 'selector': 'app-dialog-image'},{'name': 'DialogProductComponent', 'selector': 'app-dialog-product'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'storybook-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginProjComponent', 'selector': 'app-login-proj'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PageCartComponent', 'selector': 'app-page-cart'},{'name': 'PageCatalogItemComponent', 'selector': 'app-page-catalog-item'},{'name': 'PageComponent', 'selector': 'storybook-page'},{'name': 'PageItemFromCatalogComponent', 'selector': 'app-page-item-from-catalog'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RegisterProjComponent', 'selector': 'app-register-proj'},{'name': 'ThemeToggleComponent', 'selector': 'app-theme-toggle'},{'name': 'UserPageComponent', 'selector': 'app-user-page'},{'name': 'UserPageProjComponent', 'selector': 'app-user-page-proj'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BackButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ButtonComponent.html":{"url":"components/ButtonComponent.html","title":"component - ButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/stories/button.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                storybook-button\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./button.css\n            \n\n\n            \n                template\n                 \n  {{ label }}\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                backgroundColor\n                            \n                            \n                                label\n                            \n                            \n                                primary\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onClick\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    classes\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        backgroundColor\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/stories/button.component.ts:25\n                            \n                        \n                \n                    \n                        What background color to use\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Button'\n                    \n                \n                        \n                            \n                                    Defined in src/stories/button.component.ts:37\n                            \n                        \n                \n                    \n                        Button contents\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        primary\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/stories/button.component.ts:21\n                            \n                        \n                \n                    \n                        Is this the principal call to action on the page?\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :     \"small\" | \"medium\" | \"large\"\n\n                    \n                \n                \n                    \n                        Default value : 'medium'\n                    \n                \n                        \n                            \n                                    Defined in src/stories/button.component.ts:29\n                            \n                        \n                \n                    \n                        How large should the button be?\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/stories/button.component.ts:41\n                            \n                        \n                \n                    \n                        Optional click handler\n\n                    \n                \n            \n        \n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        classes\n                    \n                \n\n                \n                    \n                        getclasses()\n                    \n                \n                            \n                                \n                                    Defined in src/stories/button.component.ts:43\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  standalone: true,\n  imports: [CommonModule],\n  template: ` \n  {{ label }}\n`,\n  styleUrls: ['./button.css'],\n})\nexport class ButtonComponent {\n  /** Is this the principal call to action on the page? */\n  @Input()\n  primary = false;\n\n  /** What background color to use */\n  @Input()\n  backgroundColor?: string;\n\n  /** How large should the button be? */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /** Optional click handler */\n  @Output()\n  onClick = new EventEmitter();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n\n    \n\n\n    \n                \n                    ./button.css\n                \n                .storybook-button {\n  display: inline-block;\n  cursor: pointer;\n  border: 0;\n  border-radius: 3em;\n  font-weight: 700;\n  line-height: 1;\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n}\n.storybook-button--primary {\n  background-color: #555ab9;\n  color: white;\n}\n.storybook-button--secondary {\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n  background-color: transparent;\n  color: #333;\n}\n.storybook-button--small {\n  padding: 10px 16px;\n  font-size: 12px;\n}\n.storybook-button--medium {\n  padding: 11px 20px;\n  font-size: 14px;\n}\n.storybook-button--large {\n  padding: 12px 24px;\n  font-size: 16px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{ label }}'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AchievmentsPageForUserComponent', 'selector': 'app-achievments-page-for-user'},{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'ButtonComponent', 'selector': 'storybook-button'},{'name': 'CardItemComponent', 'selector': 'app-card-item'},{'name': 'CarouselImgComponent', 'selector': 'app-carousel-img'},{'name': 'DialogCategoryComponent', 'selector': 'app-dialog-category'},{'name': 'DialogImageComponent', 'selector': 'app-dialog-image'},{'name': 'DialogProductComponent', 'selector': 'app-dialog-product'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'storybook-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginProjComponent', 'selector': 'app-login-proj'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PageCartComponent', 'selector': 'app-page-cart'},{'name': 'PageCatalogItemComponent', 'selector': 'app-page-catalog-item'},{'name': 'PageComponent', 'selector': 'storybook-page'},{'name': 'PageItemFromCatalogComponent', 'selector': 'app-page-item-from-catalog'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RegisterProjComponent', 'selector': 'app-register-proj'},{'name': 'ThemeToggleComponent', 'selector': 'app-theme-toggle'},{'name': 'UserPageComponent', 'selector': 'app-user-page'},{'name': 'UserPageProjComponent', 'selector': 'app-user-page-proj'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardItemComponent.html":{"url":"components/CardItemComponent.html","title":"component - CardItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CardItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/card-item/card-item.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-card-item\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                            TuiAppearance\n                            TuiButton\n                                CarouselImgComponent\n                \n            \n\n            \n                styleUrls\n                ./card-item.component.css,../../../styles/root.css\n            \n\n\n\n            \n                templateUrl\n                ./card-item.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                navigateToProduct\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                productInfo\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    images\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, configService: ConfigService, userAchievementsRepository: UserAchievementsRepositoryService, userAchievementsService: UserAchievementsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/components/card-item/card-item.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userAchievementsRepository\n                                                  \n                                                        \n                                                                        UserAchievementsRepositoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userAchievementsService\n                                                  \n                                                        \n                                                                        UserAchievementsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        productInfo\n                    \n                \n                \n                    \n                        Type :         IDpProduct\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/card-item/card-item.component.ts:25\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        navigateToProduct\n                        \n                    \n                \n            \n            \n                \nnavigateToProduct(product: IDpProduct)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/card-item/card-item.component.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                product\n                                            \n                                                            IDpProduct\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        images\n                    \n                \n\n                \n                    \n                        getimages()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data/components/card-item/card-item.component.ts:34\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, CUSTOM_ELEMENTS_SCHEMA, inject, Input } from '@angular/core';\nimport { IDpProduct } from '../../../interface/IDpProduct';\nimport { CommonModule } from '@angular/common';\nimport { TuiAppearance, TuiButton } from '@taiga-ui/core';\nimport { CarouselImgComponent } from '../carousel-img/carousel-img.component';\nimport { IDpImage } from '../../../interface/IDpImage';\nimport { Router } from '@angular/router';\nimport { UserAchievementsRepositoryService } from '../../../repositories/user-achievements-repository.service';\nimport { ConfigService } from '../../../services/config.service';\nimport { UserAchievementsService } from '../../../services/user-achievements.service';\n\n@Component({\n  selector: 'app-card-item',\n  imports: [\n    CommonModule,\n    TuiAppearance,\n    TuiButton,\n    CarouselImgComponent\n  ],\n  templateUrl: './card-item.component.html',\n  styleUrls: ['./card-item.component.css', '../../../styles/root.css'],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class CardItemComponent {\n  @Input() productInfo!: IDpProduct;\n\n  constructor(\n    private router: Router,\n    private configService: ConfigService,\n    private userAchievementsRepository: UserAchievementsRepositoryService,\n    private userAchievementsService: UserAchievementsService = inject(UserAchievementsService)\n  ) { }\n\n  get images(): IDpImage[] {\n    return this.productInfo.dpImages || [];\n  }\n\n  navigateToProduct(product: IDpProduct): void {\n    const userProjId = parseInt(localStorage.getItem('userProjId') || '0', 10);\n    // Проверка: если включён режим \"всегда ошибка\" — только негативный тест-кейс\n    if (this.userAchievementsService.getAlwaysFailMode()) {\n      // Галочка включена — 50% шанс на ошибку\n      if (Math.random()  {\n        if (success) {\n          this.userAchievementsRepository.handleAchievement(\n            userProjId,\n            this.configService.achievementIds.navigateToProductSuccess, // Используем числовой ID\n            'тест-кейс: Переход к товару выполнен!'\n          ).subscribe();\n        } else {\n          this.userAchievementsRepository.handleAchievement(\n            userProjId,\n            this.configService.achievementIds.navigateToProductFailed, // Используем числовой ID\n            'тест-кейс: Ошибка перехода к товару!'\n          ).subscribe();\n        }\n      })\n      .catch(() => {\n        this.userAchievementsRepository.handleAchievement(\n          userProjId,\n          this.configService.achievementIds.navigateToProductFailed, // Используем числовой ID\n          'тест-кейс: Ошибка перехода к товару!'\n        ).subscribe();\n      });\n  }\n}\n    \n\n    \n        \n    \n    {{ productInfo.dpTitle }}\n    {{ productInfo.dpPrice | currency:'RUB ' }}\n    \n        \n        Перейти к товару\n    \n\n    \n\n    \n                \n                    ./card-item.component.css\n                \n                \n                \n                    ../../../styles/root.css\n                \n                @import 'variables.css';\n@import 'buttons.css';\n@import 'cards.css';\n@import 'navigation.css';\n@import 'header.css';\n@import 'carousel.css';\n@import 'icons.css';\n@import 'layout.css';\n@import 'tables.css';\n@import 'typography.css';\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        {{ productInfo.dpTitle }}    {{ productInfo.dpPrice | currency:\\'RUB \\' }}                    Перейти к товару    '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AchievmentsPageForUserComponent', 'selector': 'app-achievments-page-for-user'},{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'ButtonComponent', 'selector': 'storybook-button'},{'name': 'CardItemComponent', 'selector': 'app-card-item'},{'name': 'CarouselImgComponent', 'selector': 'app-carousel-img'},{'name': 'DialogCategoryComponent', 'selector': 'app-dialog-category'},{'name': 'DialogImageComponent', 'selector': 'app-dialog-image'},{'name': 'DialogProductComponent', 'selector': 'app-dialog-product'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'storybook-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginProjComponent', 'selector': 'app-login-proj'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PageCartComponent', 'selector': 'app-page-cart'},{'name': 'PageCatalogItemComponent', 'selector': 'app-page-catalog-item'},{'name': 'PageComponent', 'selector': 'storybook-page'},{'name': 'PageItemFromCatalogComponent', 'selector': 'app-page-item-from-catalog'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RegisterProjComponent', 'selector': 'app-register-proj'},{'name': 'ThemeToggleComponent', 'selector': 'app-theme-toggle'},{'name': 'UserPageComponent', 'selector': 'app-user-page'},{'name': 'UserPageProjComponent', 'selector': 'app-user-page-proj'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CardItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CarouselImgComponent.html":{"url":"components/CarouselImgComponent.html","title":"component - CarouselImgComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CarouselImgComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/carousel-img/carousel-img.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-carousel-img\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            AsyncPipe\n                            TuiAmountPipe\n                            TuiAvatar\n                            TuiButton\n                            TuiCarousel\n                            TuiPagination\n                            TuiLoader\n                \n            \n\n            \n                styleUrls\n                ./carousel-img.component.css,../../../styles/root.css\n            \n\n\n\n            \n                templateUrl\n                ./carousel-img.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                imageUrls\n                            \n                            \n                                index\n                            \n                            \n                                    Private\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loadImageUrls\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onImageClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                images\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                imageClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(imagesRepository: ImagesRepositoryService, sanitizer: DomSanitizer, cd: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/components/carousel-img/carousel-img.component.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        imagesRepository\n                                                  \n                                                        \n                                                                        ImagesRepositoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sanitizer\n                                                  \n                                                        \n                                                                    DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        images\n                    \n                \n                \n                    \n                        Type :         IDpImage[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/carousel-img/carousel-img.component.ts:32\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        imageClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/carousel-img/carousel-img.component.ts:33\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loadImageUrls\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadImageUrls()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/carousel-img/carousel-img.component.ts:63\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/carousel-img/carousel-img.component.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/carousel-img/carousel-img.component.ts:54\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/carousel-img/carousel-img.component.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onImageClick\n                        \n                    \n                \n            \n            \n                \nonImageClick(imageUrl: SafeUrl)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/carousel-img/carousel-img.component.ts:93\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                imageUrl\n                                            \n                                                        SafeUrl\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        imageUrls\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/carousel-img/carousel-img.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        index\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/carousel-img/carousel-img.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/carousel-img/carousel-img.component.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectorRef, Component, EventEmitter, Input, OnInit, Output, SimpleChanges, OnDestroy, ChangeDetectionStrategy } from '@angular/core';\nimport { SafeUrl, DomSanitizer } from '@angular/platform-browser';\nimport { IDpImage } from '../../../interface/IDpImage';\nimport { ImagesRepositoryService } from '../../../repositories/images-repository.service';\nimport { AsyncPipe, CommonModule } from '@angular/common';\nimport { TuiButton, TuiLoader } from '@taiga-ui/core';\nimport { TuiAvatar, TuiCarousel, TuiPagination } from '@taiga-ui/kit';\nimport { TuiAmountPipe } from '@taiga-ui/addon-commerce';\nimport { Subscription, forkJoin, map } from 'rxjs';\n\n@Component({\n  selector: 'app-carousel-img',\n  standalone: true,\n  imports: [\n    CommonModule,\n    AsyncPipe,\n    TuiAmountPipe,\n    TuiAvatar,\n    TuiButton,\n    TuiCarousel,\n    TuiPagination,\n    TuiLoader\n  ],\n  templateUrl: './carousel-img.component.html',\n  styleUrls: [\n    './carousel-img.component.css',\n    '../../../styles/root.css'\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CarouselImgComponent implements OnInit, OnDestroy {\n  @Input() images: IDpImage[] = [];\n  @Output() imageClick = new EventEmitter();\n  imageUrls: { [key: number]: SafeUrl } = {};\n  index = 0;\n  private subscriptions: Subscription = new Subscription();\n\n  constructor(\n    private imagesRepository: ImagesRepositoryService,\n    private sanitizer: DomSanitizer,\n    private cd: ChangeDetectorRef\n  ) {}\n\n  ngOnInit(): void {\n    this.loadImageUrls();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['images'] && !changes['images'].firstChange) {\n      this.loadImageUrls();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n    Object.values(this.imageUrls).forEach(url => {\n      if (typeof url === 'string') {\n        URL.revokeObjectURL(url);\n      }\n    });\n  }\n\n  private loadImageUrls(): void {\n    if (!this.images || this.images.length === 0) {\n      this.imageUrls = {};\n      this.cd.markForCheck();\n      return;\n    }\n\n    const newImages = this.images.filter(image => !this.imageUrls[image.dpImagesId]);\n    if (newImages.length === 0) {\n      this.cd.markForCheck();\n      return;\n    }\n\n    const imageRequests = newImages.map(image =>\n      this.imagesRepository.getDpImageData(image.dpImagesId).pipe(\n        map(blob => ({ id: image.dpImagesId, blob }))\n      )\n    );\n\n    this.subscriptions.add(\n      forkJoin(imageRequests).subscribe(results => {\n        results.forEach(({ id, blob }) => {\n          const url = URL.createObjectURL(blob);\n          this.imageUrls[id] = this.sanitizer.bypassSecurityTrustUrl(url);\n        });\n        this.cd.markForCheck();\n      })\n    );\n  }\n\n  onImageClick(imageUrl: SafeUrl): void {\n    this.imageClick.emit(imageUrl);\n  }\n}\n    \n\n    \n        \n    \n        \n            \n                \n            \n        \n    \n    \n\n    \n\n    \n                \n                    ./carousel-img.component.css\n                \n                .wrapper {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: stretch;\n    align-items: stretch;\n    box-sizing: border-box;\n}\n                \n                    ../../../styles/root.css\n                \n                @import 'variables.css';\n@import 'buttons.css';\n@import 'cards.css';\n@import 'navigation.css';\n@import 'header.css';\n@import 'carousel.css';\n@import 'icons.css';\n@import 'layout.css';\n@import 'tables.css';\n@import 'typography.css';\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                    '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AchievmentsPageForUserComponent', 'selector': 'app-achievments-page-for-user'},{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'ButtonComponent', 'selector': 'storybook-button'},{'name': 'CardItemComponent', 'selector': 'app-card-item'},{'name': 'CarouselImgComponent', 'selector': 'app-carousel-img'},{'name': 'DialogCategoryComponent', 'selector': 'app-dialog-category'},{'name': 'DialogImageComponent', 'selector': 'app-dialog-image'},{'name': 'DialogProductComponent', 'selector': 'app-dialog-product'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'storybook-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginProjComponent', 'selector': 'app-login-proj'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PageCartComponent', 'selector': 'app-page-cart'},{'name': 'PageCatalogItemComponent', 'selector': 'app-page-catalog-item'},{'name': 'PageComponent', 'selector': 'storybook-page'},{'name': 'PageItemFromCatalogComponent', 'selector': 'app-page-item-from-catalog'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RegisterProjComponent', 'selector': 'app-register-proj'},{'name': 'ThemeToggleComponent', 'selector': 'app-theme-toggle'},{'name': 'UserPageComponent', 'selector': 'app-user-page'},{'name': 'UserPageProjComponent', 'selector': 'app-user-page-proj'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CarouselImgComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CartItem.html":{"url":"interfaces/CartItem.html","title":"interface - CartItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CartItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/page/page-cart/page-cart.component.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            ICartItem\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            date\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        date:     TuiDay\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TuiDay\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AsyncPipe, CommonModule, CurrencyPipe, NgForOf, NgIf } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, CUSTOM_ELEMENTS_SCHEMA, inject, Inject, OnInit } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { TuiButton, TuiAppearance, TuiAlertService, TuiScrollbar, TuiIcon } from '@taiga-ui/core';\nimport { TuiTable, TuiComparator } from '@taiga-ui/addon-table';\nimport { TuiDay, tuiDefaultSort } from '@taiga-ui/cdk';\nimport { ICartItem } from '../../../interface/ICartItem';\nimport { ICartViewModel } from '../../../interface/ICartViewModel';\nimport { ChangeDetectorRef } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { IUpdateCartRequest } from '../../../interface/IUpdateCartRequest';\nimport { ShopCartRepositoryService } from '../../../repositories/shop-cart-repository.service';\nimport { UserAchievementsRepositoryService } from '../../../repositories/user-achievements-repository.service';\nimport { ConfigService } from '../../../services/config.service';\nimport { UserAchievementsService } from '../../../services/user-achievements.service';\n\ninterface CartItem extends ICartItem {\n  readonly date: TuiDay;\n}\n\n@Component({\n  selector: 'app-page-cart',\n  standalone: true,\n  imports: [\n    AsyncPipe,\n    CurrencyPipe,\n    FormsModule,\n    NgForOf,\n    NgIf,\n    TuiButton,\n    TuiTable,\n    CommonModule,\n    TuiScrollbar,\n    TuiIcon\n  ],\n  templateUrl: './page-cart.component.html',\n  styleUrls: ['./page-cart.component.css', '../../../styles/root.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n})\nexport class PageCartComponent implements OnInit {\n  protected readonly options = { updateOn: 'blur' } as const;\n  protected cartItems: CartItem[] = [];\n  protected readonly columns = ['productTitle', 'price', 'quantity', 'totalPrice', 'actions'] as const;\n  protected isLoading = false;\n  private readonly userAchievementsService = inject(UserAchievementsService);\n  protected readonly totalSorter: TuiComparator = (a, b) =>\n    tuiDefaultSort(a.price * a.quantity, b.price * b.quantity);\n\n  constructor(\n    private cartService: ShopCartRepositoryService,\n    private cdr: ChangeDetectorRef,\n    public router: Router,\n    private userAchievementsRepository: UserAchievementsRepositoryService,\n    private configService: ConfigService,\n    @Inject(TuiAlertService) private readonly alertService: TuiAlertService\n  ) { }\n\n  ngOnInit(): void {\n    this.loadCartItems();\n  }\n\n  private loadCartItems(): void {\n    this.cartService.getCart().subscribe({\n      next: (cartViewModel: ICartViewModel) => {\n        console.log(cartViewModel);\n        this.cartItems = cartViewModel.cartItems.map(item => ({\n          ...item,\n          date: TuiDay.currentLocal(),\n        }));\n        this.isLoading = false;\n        this.cdr.markForCheck();\n      },\n      error: (error) => {\n        console.error('Ошибка при загрузке корзины:', error);\n        this.alertService.open('Не удалось загрузить корзину. Попробуйте ещё раз!', { appearance: 'error' }).subscribe();\n        this.isLoading = false;\n        this.cdr.markForCheck();\n      }\n    });\n  }\n\n  protected trackByIndex(index: number): number {\n    return index;\n  }\n\n  protected getTotal({ price, quantity }: CartItem): number {\n    return price * quantity;\n  }\n\n  protected getTotalAmount(): number {\n    return this.cartItems.reduce((sum, item) => sum + this.getTotal(item), 0);\n  }\n\n  increaseQuantity(item: CartItem): void {\n    const newQuantity = item.quantity + 1;\n    this.updateCartItemQuantity(item, newQuantity);\n  }\n\n  decreaseQuantity(item: CartItem): void {\n    if (item.quantity > 1) {\n      const newQuantity = item.quantity - 1;\n      this.updateCartItemQuantity(item, newQuantity);\n    }\n  }\n\n  removeFromCart(item: CartItem): void {\n    const userProjId = parseInt(localStorage.getItem('userProjId') || '0', 10);\n    // Если включён режим \"всегда ошибка\" — только негативный тест-кейс\n    if (this.userAchievementsService.getAlwaysFailMode()) {\n      this.userAchievementsRepository\n        .handleAchievement(userProjId, this.configService.achievementIds.removeFromCartFailed, 'Тест-кейс: ошибка удаления товара из корзины!')\n        .subscribe();\n      this.alertService.open('Тест-кейс: не удалось удалить товар (режим всегда ошибка включён)', { appearance: 'error' }).subscribe();\n      return;\n    }\n    this.isLoading = true;\n    this.cartService.removeFromCart({ productId: item.productId, sizeId: item.sizeId }).subscribe({\n      next: () => {\n        this.cartItems = this.cartItems.filter(cartItem =>\n          !(cartItem.productId === item.productId && cartItem.sizeId === item.sizeId)\n        );\n        this.isLoading = false;\n        this.cdr.markForCheck();\n        this.userAchievementsRepository\n          .handleAchievement(userProjId, this.configService.achievementIds.removeFromCartSuccess, 'Товар успешно удалён из корзины!')\n          .subscribe();\n        this.alertService.open('Товар удалён из корзины', { appearance: 'success' }).subscribe();\n      },\n      error: (error) => {\n        console.error('Ошибка при удалении товара из корзины:', error);\n        this.isLoading = false;\n        this.cdr.markForCheck();\n        this.userAchievementsRepository\n          .handleAchievement(userProjId, this.configService.achievementIds.removeFromCartFailed, 'Ошибка удаления товара из корзины!')\n          .subscribe();\n        this.alertService.open('Не удалось удалить товар. Попробуйте ещё раз!', { appearance: 'error' }).subscribe();\n      }\n    });\n  }\n\n  checkout(): void {\n    const userProjId = parseInt(localStorage.getItem('userProjId') || '0', 10);\n\n    if (this.cartItems.length === 0) {\n      this.userAchievementsRepository\n        .handleAchievement(userProjId, this.configService.achievementIds.checkoutEmptyCart, 'Тест-кейс: Попытка оформления пустой корзины!')\n        .subscribe();\n      this.alertService.open('Корзина пуста, добавьте товары перед оформлением', { appearance: 'error' }).subscribe();\n      return;\n    }\n\n    // Если включён режим \"всегда ошибка\" — только негативный тест-кейс\n    if (this.userAchievementsService.getAlwaysFailMode()) {\n      this.userAchievementsRepository\n        .handleAchievement(userProjId, this.configService.achievementIds.checkoutFailed, 'Тест-кейс: ошибка оформления заказа!')\n        .subscribe();\n      this.alertService.open('Тест-кейс: не удалось оформить заказ (режим всегда ошибка включён)', { appearance: 'error' }).subscribe();\n      return;\n    }\n    this.isLoading = true;\n    this.cartService.checkout().subscribe({\n      next: (response) => {\n        this.userAchievementsRepository\n          .handleAchievement(userProjId, this.configService.achievementIds.checkoutSuccess, 'Заказ успешно оформлен!')\n          .subscribe();\n        this.alertService.open('Заказ успешно оформлен!', { appearance: 'success' }).subscribe();\n        this.cartService.clearCart();\n        this.cartItems = [];\n        this.isLoading = false;\n        this.cdr.markForCheck();\n        this.router.navigate(['/order-confirmation'], { state: { orderId: response.orderId } });\n      },\n      error: (error) => {\n        console.error('Ошибка при оформлении заказа:', error);\n        this.isLoading = false;\n        this.cdr.markForCheck();\n        this.userAchievementsRepository\n          .handleAchievement(userProjId, this.configService.achievementIds.checkoutFailed, 'Ошибка оформления заказа!')\n          .subscribe();\n        this.alertService.open('Не удалось оформить заказ. Попробуйте ещё раз!', { appearance: 'error' }).subscribe();\n      }\n    });\n  }\n\n  private updateCartItemQuantity(item: CartItem, newQuantity: number): void {\n    const userProjId = parseInt(localStorage.getItem('userProjId') || '0', 10);\n    \n    // Если включён режим \"всегда ошибка\" — только негативный тест-кейс\n    if (this.userAchievementsService.getAlwaysFailMode()) {\n      this.userAchievementsRepository\n        .handleAchievement(userProjId, this.configService.achievementIds.updateCartQuantityFailed, 'Тест-кейс: ошибка обновления количества товара!')\n        .subscribe();\n      this.alertService.open('Тест-кейс: не удалось обновить количество (режим всегда ошибка включён)', { appearance: 'error' }).subscribe();\n      return;\n    }\n    \n    const request: IUpdateCartRequest = {\n      productId: item.productId,\n      quantity: newQuantity,\n      sizeId: item.sizeId\n    };\n\n    this.cartItems = this.cartItems.map(cartItem =>\n      cartItem.productId === item.productId && cartItem.sizeId === item.sizeId\n        ? { ...cartItem, quantity: newQuantity }\n        : cartItem\n    );\n    this.cdr.markForCheck();\n\n    this.cartService.updateCart(request).subscribe({\n      next: (response) => {\n        if (response.success) {\n          this.userAchievementsRepository\n            .handleAchievement(userProjId, this.configService.achievementIds.updateCartQuantitySuccess, 'Количество товара успешно обновлено!')\n            .subscribe();\n          this.alertService.open('Количество товара успешно обновлено', { appearance: 'success' }).subscribe();\n        } else {\n          this.cartItems = this.cartItems.map(cartItem =>\n            cartItem.productId === item.productId && cartItem.sizeId === item.sizeId\n              ? { ...cartItem, quantity: item.quantity }\n              : cartItem\n          );\n          this.cdr.markForCheck();\n          this.userAchievementsRepository\n            .handleAchievement(userProjId, this.configService.achievementIds.updateCartQuantityFailed, 'Ошибка обновления количества товара!')\n            .subscribe();\n          this.alertService.open('Не удалось обновить количество. Попробуйте ещё раз!', { appearance: 'error' }).subscribe();\n        }\n        this.isLoading = false;\n        this.cdr.markForCheck();\n      },\n      error: (error) => {\n        this.cartItems = this.cartItems.map(cartItem =>\n          cartItem.productId === item.productId && cartItem.sizeId === item.sizeId\n            ? { ...cartItem, quantity: item.quantity }\n            : cartItem\n        );\n        this.cdr.markForCheck();\n        this.userAchievementsRepository\n          .handleAchievement(userProjId, this.configService.achievementIds.updateCartQuantityFailed, 'Ошибка обновления количества товара!')\n          .subscribe();\n        this.alertService.open('Ошибка при обновлении количества. Попробуйте ещё раз!', { appearance: 'error' }).subscribe();\n        this.isLoading = false;\n        this.cdr.markForCheck();\n      }\n    });\n  }\n\n  protected onValueChange(\n    value: CartItem[K],\n    key: K,\n    current: CartItem\n  ): void {\n    const updated = { ...current, [key]: value };\n    this.cartItems = this.cartItems.map((item) => (item === current ? updated : item));\n    this.cdr.markForCheck();\n  }\n\n  protected onSortChange(event: any): void {\n    // Логика сортировки, если нужна\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CategoriesRepositoryService.html":{"url":"injectables/CategoriesRepositoryService.html","title":"injectable - CategoriesRepositoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CategoriesRepositoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/repositories/categories-repository.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createDpCategory\n                            \n                            \n                                deleteDpCategory\n                            \n                            \n                                getAllDpCategories\n                            \n                            \n                                getDpCategoryById\n                            \n                            \n                                updateDpCategory\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dpCategoriesService: DpCategoriesService)\n                    \n                \n                        \n                            \n                                Defined in src/app/repositories/categories-repository.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dpCategoriesService\n                                                  \n                                                        \n                                                                        DpCategoriesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createDpCategory\n                        \n                    \n                \n            \n            \n                \ncreateDpCategory(dpCategory: IDpCategory)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/categories-repository.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dpCategory\n                                            \n                                                            IDpCategory\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteDpCategory\n                        \n                    \n                \n            \n            \n                \ndeleteDpCategory(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/categories-repository.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllDpCategories\n                        \n                    \n                \n            \n            \n                \ngetAllDpCategories()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/categories-repository.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDpCategoryById\n                        \n                    \n                \n            \n            \n                \ngetDpCategoryById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/categories-repository.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateDpCategory\n                        \n                    \n                \n            \n            \n                \nupdateDpCategory(id: number, dpCategory: IDpCategory)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/categories-repository.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dpCategory\n                                            \n                                                            IDpCategory\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { IDpCategory } from '../interface/IDpCategory';\nimport { DpCategoriesService } from '../services/dp-categories.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoriesRepositoryService {\n  constructor(private dpCategoriesService: DpCategoriesService) {}\n\n  getAllDpCategories(): Observable {\n    return this.dpCategoriesService.getAllDpCategories();\n  }\n\n  getDpCategoryById(id: number): Observable {\n    return this.dpCategoriesService.getDpCategoryById(id);\n  }\n\n  createDpCategory(dpCategory: IDpCategory): Observable {\n    return this.dpCategoriesService.createDpCategory(dpCategory);\n  }\n\n  updateDpCategory(id: number, dpCategory: IDpCategory): Observable {\n    return this.dpCategoriesService.updateDpCategory(id, dpCategory);\n  }\n\n  deleteDpCategory(id: number): Observable {\n    return this.dpCategoriesService.deleteDpCategory(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfigService.html":{"url":"injectables/ConfigService.html","title":"injectable - ConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/config.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                achievementIds\n                            \n                            \n                                    Readonly\n                                apiEndpoints\n                            \n                            \n                                    Readonly\n                                httpStatusCodes\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        achievementIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    loginSuccess: 1,             // Успешный вход\n    registerSuccess: 2,          // Успешная регистрация\n    addToCartSuccess: 3,         // Добавление в корзину\n    checkoutSuccess: 4,          // Оформление заказа\n    viewProductSuccess: 5,       // Просмотр продукта\n    createProductSuccess: 6,     // Создание продукта\n    updateProfileSuccess: 7,     // Обновление профиля\n    addImageSuccess: 8,          // Добавление изображения\n    addCategorySuccess: 9,       // Добавление категории\n    switchToLightThemeSuccess: 10, // Светлая тема\n    switchToDarkThemeSuccess: 11, // Тёмная тема\n    removeFromCartSuccess: 12,   // Удаление из корзины\n    updateCartQuantitySuccess: 13, // Обновление количества\n    loadProductsSuccess: 14,     // Загрузка продуктов\n    loadProductInfoSuccess: 15,  // Загрузка информации о продукте\n    navigateToProductSuccess: 16, // Навигация к продукту\n    toggleThemeSuccess: 17,      // Переключение темы\n    resetThemeSuccess: 18,       // Сброс темы\n    openProductDialogSuccess: 19, // Открытие диалога продукта\n    openCategoryDialogSuccess: 20, // Открытие диалога категории\n    openImageDialogSuccess: 21,  // Открытие диалога изображения\n    logoutProjSuccess: 22,       // Выход из системы\n    updateCategorySuccess: 23,   // Обновление категории\n    updateImageSuccess: 24,      // Обновление изображения\n    updateProductSuccess: 25,    // Обновление продукта\n    // Отрицательные тест-кейсы\n    loginFailed: 26,             // Ошибка входа\n    registerFailed: 27,          // Ошибка регистрации\n    addToCartFailed: 28,         // Ошибка добавления в корзину\n    checkoutFailed: 29,          // Ошибка оформления заказа\n    viewProductFailed: 30,       // Ошибка просмотра продукта\n    createProductFailed: 31,     // Ошибка создания продукта\n    updateProfileFailed: 32,     // Ошибка обновления профиля\n    addImageFailed: 33,          // Ошибка добавления изображения\n    addCategoryFailed: 34,       // Ошибка добавления категории\n    switchToLightThemeFailed: 35, // Ошибка светлой темы\n    switchToDarkThemeFailed: 36, // Ошибка тёмной темы\n    failedToLoad: 37,            // Ошибка загрузки\n    buttonNotWorking: 38,        // Ошибка кнопки\n    removeFromCartFailed: 39,    // Ошибка удаления из корзины\n    updateCartQuantityFailed: 40, // Ошибка обновления количества\n    loadProductsFailed: 41,      // Ошибка загрузки продуктов\n    loadProductInfoFailed: 42,   // Ошибка загрузки информации о продукте\n    navigateToProductFailed: 43, // Ошибка навигации к продукту\n    logoutProjFailed: 44,        // Ошибка выхода\n    updateCategoryFailed: 45,    // Ошибка обновления категории\n    updateImageFailed: 46,       // Ошибка обновления изображения\n    updateProductFailed: 47,     // Ошибка обновления продукта\n    checkoutEmptyCart: 48,       // Пустая корзина (переназначено)\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/services/config.service.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        apiEndpoints\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    login: '/api/login',\n    register: '/api/register',\n    addToCart: '/api/cart/add',\n    checkout: '/api/checkout',\n    viewProduct: '/api/products',\n    createProduct: '/api/products/create',\n    updateProfile: '/api/profile/update',\n    addImage: '/api/products/add-image',\n    addCategory: '/api/categories/add',\n    switchTheme: '/api/settings/switch-theme',\n    removeFromCart: '/api/cart/remove',\n    updateCartQuantity: '/api/cart/update',\n    loadProducts: '/api/products/all',\n    loadProductInfo: '/api/products/info',\n    toggleTheme: '/api/settings/toggle-theme',\n    resetTheme: '/api/settings/reset-theme',\n    logoutProj: '/api/auth/logout-proj'\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/services/config.service.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        httpStatusCodes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    // 2xx: Успешные\n    success: 200,          // Успешный запрос\n    created: 201,          // Ресурс создан\n    noContent: 204,        // Успешно, но нет содержимого\n\n    // 3xx: Перенаправления\n    movedPermanently: 301, // Ресурс перемещён навсегда\n    found: 302,            // Ресурс временно перемещён\n\n    // 4xx: Ошибки клиента\n    badRequest: 400,       // Неверный запрос\n    unauthorized: 401,     // Неавторизован\n    forbidden: 403,        // Доступ запрещён\n    notFound: 404,         // Ресурс не найден\n    conflict: 409,         // Конфликт (например, дубликат)\n\n    // 5xx: Ошибки сервера\n    serverError: 500,      // Внутренняя ошибка сервера\n    serviceUnavailable: 503 // Сервис недоступен\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/services/config.service.ts:79\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfigService {\n  readonly achievementIds = {\n    loginSuccess: 1,             // Успешный вход\n    registerSuccess: 2,          // Успешная регистрация\n    addToCartSuccess: 3,         // Добавление в корзину\n    checkoutSuccess: 4,          // Оформление заказа\n    viewProductSuccess: 5,       // Просмотр продукта\n    createProductSuccess: 6,     // Создание продукта\n    updateProfileSuccess: 7,     // Обновление профиля\n    addImageSuccess: 8,          // Добавление изображения\n    addCategorySuccess: 9,       // Добавление категории\n    switchToLightThemeSuccess: 10, // Светлая тема\n    switchToDarkThemeSuccess: 11, // Тёмная тема\n    removeFromCartSuccess: 12,   // Удаление из корзины\n    updateCartQuantitySuccess: 13, // Обновление количества\n    loadProductsSuccess: 14,     // Загрузка продуктов\n    loadProductInfoSuccess: 15,  // Загрузка информации о продукте\n    navigateToProductSuccess: 16, // Навигация к продукту\n    toggleThemeSuccess: 17,      // Переключение темы\n    resetThemeSuccess: 18,       // Сброс темы\n    openProductDialogSuccess: 19, // Открытие диалога продукта\n    openCategoryDialogSuccess: 20, // Открытие диалога категории\n    openImageDialogSuccess: 21,  // Открытие диалога изображения\n    logoutProjSuccess: 22,       // Выход из системы\n    updateCategorySuccess: 23,   // Обновление категории\n    updateImageSuccess: 24,      // Обновление изображения\n    updateProductSuccess: 25,    // Обновление продукта\n    // Отрицательные тест-кейсы\n    loginFailed: 26,             // Ошибка входа\n    registerFailed: 27,          // Ошибка регистрации\n    addToCartFailed: 28,         // Ошибка добавления в корзину\n    checkoutFailed: 29,          // Ошибка оформления заказа\n    viewProductFailed: 30,       // Ошибка просмотра продукта\n    createProductFailed: 31,     // Ошибка создания продукта\n    updateProfileFailed: 32,     // Ошибка обновления профиля\n    addImageFailed: 33,          // Ошибка добавления изображения\n    addCategoryFailed: 34,       // Ошибка добавления категории\n    switchToLightThemeFailed: 35, // Ошибка светлой темы\n    switchToDarkThemeFailed: 36, // Ошибка тёмной темы\n    failedToLoad: 37,            // Ошибка загрузки\n    buttonNotWorking: 38,        // Ошибка кнопки\n    removeFromCartFailed: 39,    // Ошибка удаления из корзины\n    updateCartQuantityFailed: 40, // Ошибка обновления количества\n    loadProductsFailed: 41,      // Ошибка загрузки продуктов\n    loadProductInfoFailed: 42,   // Ошибка загрузки информации о продукте\n    navigateToProductFailed: 43, // Ошибка навигации к продукту\n    logoutProjFailed: 44,        // Ошибка выхода\n    updateCategoryFailed: 45,    // Ошибка обновления категории\n    updateImageFailed: 46,       // Ошибка обновления изображения\n    updateProductFailed: 47,     // Ошибка обновления продукта\n    checkoutEmptyCart: 48,       // Пустая корзина (переназначено)\n  };\n\n  readonly apiEndpoints = {\n    login: '/api/login',\n    register: '/api/register',\n    addToCart: '/api/cart/add',\n    checkout: '/api/checkout',\n    viewProduct: '/api/products',\n    createProduct: '/api/products/create',\n    updateProfile: '/api/profile/update',\n    addImage: '/api/products/add-image',\n    addCategory: '/api/categories/add',\n    switchTheme: '/api/settings/switch-theme',\n    removeFromCart: '/api/cart/remove',\n    updateCartQuantity: '/api/cart/update',\n    loadProducts: '/api/products/all',\n    loadProductInfo: '/api/products/info',\n    toggleTheme: '/api/settings/toggle-theme',\n    resetTheme: '/api/settings/reset-theme',\n    logoutProj: '/api/auth/logout-proj'\n  };\n\n  readonly httpStatusCodes = {\n    // 2xx: Успешные\n    success: 200,          // Успешный запрос\n    created: 201,          // Ресурс создан\n    noContent: 204,        // Успешно, но нет содержимого\n\n    // 3xx: Перенаправления\n    movedPermanently: 301, // Ресурс перемещён навсегда\n    found: 302,            // Ресурс временно перемещён\n\n    // 4xx: Ошибки клиента\n    badRequest: 400,       // Неверный запрос\n    unauthorized: 401,     // Неавторизован\n    forbidden: 403,        // Доступ запрещён\n    notFound: 404,         // Ресурс не найден\n    conflict: 409,         // Конфликт (например, дубликат)\n\n    // 5xx: Ошибки сервера\n    serverError: 500,      // Внутренняя ошибка сервера\n    serviceUnavailable: 503 // Сервис недоступен\n  };\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DialogCategoryComponent.html":{"url":"components/DialogCategoryComponent.html","title":"component - DialogCategoryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DialogCategoryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/dialog-category/dialog-category.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dialog-category\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            TuiAutoFocus\n                            TuiButton\n                            TuiDataListWrapper\n                            TuiInputModule\n                            TuiSelectModule\n                            TuiSlider\n                            TuiTextfield\n                            TuiTextfieldControllerModule\n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./dialog-category.component.css\n            \n\n\n\n            \n                templateUrl\n                ./dialog-category.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                alerts\n                            \n                            \n                                    Private\n                                    Readonly\n                                categoriesRepositoryService\n                            \n                            \n                                    Protected\n                                    Readonly\n                                categoryForm\n                            \n                            \n                                    \n                                categoryNameInputRef\n                            \n                            \n                                    Private\n                                    Readonly\n                                configService\n                            \n                            \n                                    Public\n                                    Readonly\n                                context\n                            \n                            \n                                    Private\n                                    Readonly\n                                dialogs\n                            \n                            \n                                    Private\n                                    Readonly\n                                userAchievementsRepository\n                            \n                            \n                                    Private\n                                    Readonly\n                                userAchievementsService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkLengthAndWarn\n                            \n                            \n                                    Private\n                                createCategory\n                            \n                            \n                                    Protected\n                                moveFocus\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                onInput\n                            \n                            \n                                    Private\n                                showError\n                            \n                            \n                                    Private\n                                showSuccess\n                            \n                            \n                                    Private\n                                showWarning\n                            \n                            \n                                    Protected\n                                submit\n                            \n                            \n                                    Private\n                                updateCategory\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hasValue\n                                \n                                \n                                    data\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkLengthAndWarn\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkLengthAndWarn(value: string, maxLength: number, warningThreshold: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/dialog-category/dialog-category.component.ts:191\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                maxLength\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                warningThreshold\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    15\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createCategory\n                        \n                    \n                \n            \n            \n                \n                        \n                    createCategory(categoryData: IDpCategory, userProjId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/dialog-category/dialog-category.component.ts:91\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                categoryData\n                                            \n                                                            IDpCategory\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userProjId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moveFocus\n                        \n                    \n                \n            \n            \n                \n                        \n                    moveFocus(targetInput: ElementRef)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/dialog-category/dialog-category.component.ts:201\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                targetInput\n                                            \n                                                        ElementRef\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/dialog-category/dialog-category.component.ts:59\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        onInput\n                        \n                    \n                \n            \n            \n                \n                        \n                    onInput(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/dialog-category/dialog-category.component.ts:181\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        showError\n                        \n                    \n                \n            \n            \n                \n                        \n                    showError(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/dialog-category/dialog-category.component.ts:161\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        showSuccess\n                        \n                    \n                \n            \n            \n                \n                        \n                    showSuccess(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/dialog-category/dialog-category.component.ts:171\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        showWarning\n                        \n                    \n                \n            \n            \n                \n                        \n                    showWarning(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/dialog-category/dialog-category.component.ts:205\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        submit\n                        \n                    \n                \n            \n            \n                \n                        \n                    submit(event?: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/dialog-category/dialog-category.component.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        updateCategory\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateCategory(categoryData: IDpCategory, userProjId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/dialog-category/dialog-category.component.ts:130\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                categoryData\n                                            \n                                                            IDpCategory\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userProjId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        alerts\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiAlertService)\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/dialog-category/dialog-category.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        categoriesRepositoryService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(CategoriesRepositoryService)\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/dialog-category/dialog-category.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        categoryForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    dpCategoryTitle: new FormControl('', Validators.required),\n    sizeId: new FormControl(null)\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/dialog-category/dialog-category.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        categoryNameInputRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('categoryNameInput', {read: ElementRef})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/dialog-category/dialog-category.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        configService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ConfigService)\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/dialog-category/dialog-category.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : injectContext>()\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/dialog-category/dialog-category.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        dialogs\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiDialogService)\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/dialog-category/dialog-category.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        userAchievementsRepository\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UserAchievementsRepositoryService)\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/dialog-category/dialog-category.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        userAchievementsService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UserAchievementsService)\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/dialog-category/dialog-category.component.ts:42\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hasValue\n                    \n                \n\n                \n                    \n                        gethasValue()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data/components/dialog-category/dialog-category.component.ts:51\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n\n                \n                    \n                        getdata()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data/components/dialog-category/dialog-category.component.ts:55\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, inject, ViewChild, ElementRef, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { TuiAutoFocus } from '@taiga-ui/cdk';\nimport { TuiAlertService, TuiButton, TuiDialogContext, TuiDialogService, TuiTextfield } from '@taiga-ui/core';\nimport { TuiDataListWrapper, TuiSlider } from '@taiga-ui/kit';\nimport { TuiInputModule, TuiSelectModule, TuiTextfieldControllerModule } from '@taiga-ui/legacy';\nimport { injectContext } from '@taiga-ui/polymorpheus';\nimport { IDpCategory } from '../../../interface/IDpCategory';\nimport { CategoriesRepositoryService } from '../../../repositories/categories-repository.service';\nimport { CommonModule } from '@angular/common';\nimport { ConfigService } from '../../../services/config.service';\nimport { UserAchievementsRepositoryService } from '../../../repositories/user-achievements-repository.service';\nimport { UserAchievementsService } from '../../../services/user-achievements.service';\n\n@Component({\n  selector: 'app-dialog-category',\n  standalone: true,\n  imports: [\n    ReactiveFormsModule,\n    TuiAutoFocus,\n    TuiButton,\n    TuiDataListWrapper,\n    TuiInputModule,\n    TuiSelectModule,\n    TuiSlider,\n    TuiTextfield,\n    TuiTextfieldControllerModule,\n    CommonModule\n  ],\n  templateUrl: './dialog-category.component.html',\n  styleUrls: ['./dialog-category.component.css']\n})\nexport class DialogCategoryComponent implements OnInit {\n  @ViewChild('categoryNameInput', { read: ElementRef }) categoryNameInputRef!: ElementRef;\n\n  private readonly alerts = inject(TuiAlertService);\n  private readonly dialogs = inject(TuiDialogService);\n  private readonly categoriesRepositoryService = inject(CategoriesRepositoryService);\n  private readonly userAchievementsRepository = inject(UserAchievementsRepositoryService);\n  private readonly configService = inject(ConfigService);\n  private readonly userAchievementsService = inject(UserAchievementsService);\n\n  public readonly context = injectContext>();\n\n  protected readonly categoryForm = new FormGroup({\n    dpCategoryTitle: new FormControl('', Validators.required),\n    sizeId: new FormControl(null)\n  });\n\n  protected get hasValue(): boolean {\n    return this.categoryForm.valid;\n  }\n\n  protected get data(): IDpCategory {\n    return this.context.data;\n  }\n\n  ngOnInit(): void {\n    const userProjId = parseInt(localStorage.getItem('userProjId') || '0', 10);\n    this.userAchievementsRepository\n      .handleAchievement(\n        userProjId,\n        this.configService.achievementIds.openCategoryDialogSuccess,\n        'Достижение: диалог категории открыт!'\n      )\n      .subscribe();\n    if (this.data) {\n      this.categoryForm.patchValue(this.data);\n    }\n  }\n\n  protected submit(event?: Event): void {\n    if (event) {\n      event.preventDefault();\n    }\n    if (this.hasValue) {\n      const categoryData = this.categoryForm.value;\n      const userProjId = parseInt(localStorage.getItem('userProjId') || '0', 10);\n\n      if (this.data.dpCategoryId) {\n        this.updateCategory({ ...categoryData, dpCategoryId: this.data.dpCategoryId } as IDpCategory, userProjId);\n      } else {\n        this.createCategory(categoryData as IDpCategory, userProjId);\n      }\n    } else {\n      this.showError('Форма заполнена некорректно.');\n    }\n  }\n\n  private createCategory(categoryData: IDpCategory, userProjId: number): void {\n    // Проверка: если включён режим \"всегда ошибка\" — только негативный тест-кейс\n    if (this.userAchievementsService.getAlwaysFailMode()) {\n      this.userAchievementsRepository\n        .handleAchievement(\n          userProjId,\n          this.configService.achievementIds.addCategoryFailed,\n          'Тест-кейс: ошибка создания категории!'\n        )\n        .subscribe();\n      this.showError('Тест-кейс: ошибка создания категории!');\n      return;\n    }\n    this.categoriesRepositoryService.createDpCategory(categoryData).subscribe({\n      next: (createdCategory) => {\n        this.context.completeWith(createdCategory);\n        this.showSuccess('Категория успешно создана.');\n        this.userAchievementsRepository\n          .handleAchievement(\n            userProjId,\n            this.configService.achievementIds.addCategorySuccess,\n            'Достижение: категория успешно создана!'\n          )\n          .subscribe();\n      },\n      error: (error) => {\n        console.error('Ошибка при создании категории:', error);\n        this.showError('Ошибка при создании категории.');\n        this.userAchievementsRepository\n          .handleAchievement(\n            userProjId,\n            this.configService.achievementIds.addCategoryFailed, // Исправляем\n            'Достижения: ошибка создания категории!'\n          )\n          .subscribe();\n      }\n    });\n  }\n\n  private updateCategory(categoryData: IDpCategory, userProjId: number): void {\n    // Проверка: если включён режим \"всегда ошибка\" — только негативный тест-кейс\n    if (this.userAchievementsService.getAlwaysFailMode()) {\n      this.userAchievementsRepository\n        .handleAchievement(\n          userProjId,\n          this.configService.achievementIds.addCategoryFailed,\n          'Тест-кейс: ошибка создания категории!'\n        )\n        .subscribe();\n      this.showError('Тест-кейс: ошибка создания категории!');\n      return;\n    }\n    this.categoriesRepositoryService.updateDpCategory(categoryData.dpCategoryId, categoryData).subscribe({\n      next: () => {\n        this.context.completeWith(categoryData);\n        this.showSuccess('Категория успешно обновлена.');\n        this.userAchievementsRepository\n          .handleAchievement(userProjId, this.configService.achievementIds.updateCategorySuccess, 'Достижение: категория успешно обновлена!')\n          .subscribe();\n      },\n      error: (error) => {\n        console.error('Ошибка при обновлении категории:', error);\n        this.showError('Ошибка при обновлении категории.');\n        this.userAchievementsRepository\n          .handleAchievement(userProjId, this.configService.achievementIds.updateCategoryFailed, 'Достижение: ошибка обновления категории!')\n          .subscribe();\n      }\n    });\n  }\n\n  private showError(message: string): void {\n    this.alerts\n      .open(message, {\n        label: 'Ошибка',\n        appearance: 'negative',\n        autoClose: 5000\n      })\n      .subscribe();\n  }\n\n  private showSuccess(message: string): void {\n    this.alerts\n      .open(message, {\n        label: 'Успех',\n        appearance: 'success',\n        autoClose: 5000\n      })\n      .subscribe();\n  }\n\n  protected onInput(event: Event): void {\n    const input = event.target as HTMLInputElement;\n    const cleanedValue = input.value.replace(/[^a-zA-Z0-9]/g, '');\n    const maxLength = 200;\n    const finalValue = this.checkLengthAndWarn(cleanedValue, maxLength);\n\n    input.value = finalValue;\n    this.categoryForm.get('dpCategoryTitle')?.setValue(finalValue);\n  }\n\n  private checkLengthAndWarn(value: string, maxLength: number, warningThreshold: number = 15): string {\n    if (value.length > maxLength) {\n      this.showError(`Вы превысили максимальную длину в ${maxLength} символов.`);\n      return value.slice(0, maxLength);\n    } else if (value.length > maxLength - warningThreshold) {\n      this.showWarning(`Вы приближаетесь к лимиту символов. Осталось ${maxLength - value.length} символов.`);\n    }\n    return value;\n  }\n\n  protected moveFocus(targetInput: ElementRef): void {\n    targetInput.nativeElement.querySelector('input').focus();\n  }\n\n  private showWarning(message: string): void {\n    this.alerts\n      .open(message, {\n        label: 'Предупреждение',\n        appearance: 'warning',\n        autoClose: 5000\n      })\n      .subscribe();\n  }\n}\n    \n\n    \n        \n  \n    название категории\n  \n  \n  Добавить категорию\n\n\n    \n\n    \n                \n                    ./dialog-category.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      название категории      Добавить категорию'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AchievmentsPageForUserComponent', 'selector': 'app-achievments-page-for-user'},{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'ButtonComponent', 'selector': 'storybook-button'},{'name': 'CardItemComponent', 'selector': 'app-card-item'},{'name': 'CarouselImgComponent', 'selector': 'app-carousel-img'},{'name': 'DialogCategoryComponent', 'selector': 'app-dialog-category'},{'name': 'DialogImageComponent', 'selector': 'app-dialog-image'},{'name': 'DialogProductComponent', 'selector': 'app-dialog-product'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'storybook-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginProjComponent', 'selector': 'app-login-proj'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PageCartComponent', 'selector': 'app-page-cart'},{'name': 'PageCatalogItemComponent', 'selector': 'app-page-catalog-item'},{'name': 'PageComponent', 'selector': 'storybook-page'},{'name': 'PageItemFromCatalogComponent', 'selector': 'app-page-item-from-catalog'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RegisterProjComponent', 'selector': 'app-register-proj'},{'name': 'ThemeToggleComponent', 'selector': 'app-theme-toggle'},{'name': 'UserPageComponent', 'selector': 'app-user-page'},{'name': 'UserPageProjComponent', 'selector': 'app-user-page-proj'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DialogCategoryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DialogImageComponent.html":{"url":"components/DialogImageComponent.html","title":"component - DialogImageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DialogImageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/dialog-image/dialog-image.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dialog-image\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            AsyncPipe\n                            ReactiveFormsModule\n                            TuiAutoFocus\n                            TuiButton\n                            TuiDataListWrapper\n                            TuiFiles\n                            TuiInputModule\n                            TuiSelectModule\n                            TuiSlider\n                            TuiTextfield\n                            TuiTextfieldControllerModule\n                            NgIf\n                \n            \n\n            \n                styleUrls\n                ./dialog-image.component.css\n            \n\n\n\n            \n                templateUrl\n                ./dialog-image.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                alerts\n                            \n                            \n                                    Private\n                                    Readonly\n                                allowedTypes\n                            \n                            \n                                    Private\n                                    Readonly\n                                configService\n                            \n                            \n                                    Public\n                                    Readonly\n                                context\n                            \n                            \n                                    Private\n                                    Readonly\n                                dialogs\n                            \n                            \n                                    Protected\n                                    Readonly\n                                failedImage$\n                            \n                            \n                                    Protected\n                                    Readonly\n                                imageControl\n                            \n                            \n                                    Protected\n                                    Readonly\n                                imageForm\n                            \n                            \n                                    Private\n                                    Readonly\n                                imagesRepositoryService\n                            \n                            \n                                    Protected\n                                    Readonly\n                                loadedImage$\n                            \n                            \n                                    Protected\n                                    Readonly\n                                loadingImage$\n                            \n                            \n                                    Private\n                                    Readonly\n                                maxFileSize\n                            \n                            \n                                    \n                                productNameInputRef\n                            \n                            \n                                selectedFile\n                            \n                            \n                                    Private\n                                    Readonly\n                                userAchievementsRepository\n                            \n                            \n                                    Private\n                                    Readonly\n                                userAchievementsService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createImage\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                onFileChange\n                            \n                            \n                                    Protected\n                                removeImage\n                            \n                            \n                                    Private\n                                showError\n                            \n                            \n                                    Private\n                                showSuccess\n                            \n                            \n                                    Protected\n                                submit\n                            \n                            \n                                    Private\n                                updateImage\n                            \n                            \n                                    Private\n                                validateFile\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hasValue\n                                \n                                \n                                    data\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createImage\n                        \n                    \n                \n            \n            \n                \n                        \n                    createImage(imageData: ICreateDpImageRequest, userProjId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/dialog-image/dialog-image.component.ts:151\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                imageData\n                                            \n                                                            ICreateDpImageRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userProjId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/dialog-image/dialog-image.component.ts:73\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        onFileChange\n                        \n                    \n                \n            \n            \n                \n                        \n                    onFileChange(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/dialog-image/dialog-image.component.ts:94\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        removeImage\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeImage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/dialog-image/dialog-image.component.ts:86\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        showError\n                        \n                    \n                \n            \n            \n                \n                        \n                    showError(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/dialog-image/dialog-image.component.ts:233\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        showSuccess\n                        \n                    \n                \n            \n            \n                \n                        \n                    showSuccess(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/dialog-image/dialog-image.component.ts:243\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        submit\n                        \n                    \n                \n            \n            \n                \n                        \n                    submit(event?: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/dialog-image/dialog-image.component.ts:122\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        updateImage\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateImage(imageData: IUpdateDpImageRequest, userProjId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/dialog-image/dialog-image.component.ts:197\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                imageData\n                                            \n                                                            IUpdateDpImageRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userProjId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        validateFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateFile(file: File)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/dialog-image/dialog-image.component.ts:112\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        alerts\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiAlertService)\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/dialog-image/dialog-image.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        allowedTypes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['image/jpeg', 'image/png']\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/dialog-image/dialog-image.component.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        configService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ConfigService)\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/dialog-image/dialog-image.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : injectContext>()\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/dialog-image/dialog-image.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        dialogs\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiDialogService)\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/dialog-image/dialog-image.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        failedImage$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/dialog-image/dialog-image.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        imageControl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl(null, Validators.required)\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/dialog-image/dialog-image.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        imageForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    dpProductId: new FormControl(null, Validators.required),\n    dpImageTitle: new FormControl('', [Validators.required, Validators.maxLength(200)])\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/dialog-image/dialog-image.component.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        imagesRepositoryService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ImagesRepositoryService)\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/dialog-image/dialog-image.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        loadedImage$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/dialog-image/dialog-image.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        loadingImage$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/dialog-image/dialog-image.component.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        maxFileSize\n                        \n                    \n                \n            \n                \n                    \n                        Default value : 5 * 1024 * 1024\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/dialog-image/dialog-image.component.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        productNameInputRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('productNameInput', {read: ElementRef})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/dialog-image/dialog-image.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedFile\n                        \n                    \n                \n            \n                \n                    \n                        Type :     File | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/dialog-image/dialog-image.component.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        userAchievementsRepository\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UserAchievementsRepositoryService)\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/dialog-image/dialog-image.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        userAchievementsService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UserAchievementsService)\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/dialog-image/dialog-image.component.ts:47\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hasValue\n                    \n                \n\n                \n                    \n                        gethasValue()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data/components/dialog-image/dialog-image.component.ts:65\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n\n                \n                    \n                        getdata()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data/components/dialog-image/dialog-image.component.ts:69\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, inject, ViewChild, ElementRef, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { AsyncPipe, NgIf } from '@angular/common';\nimport { TuiAutoFocus } from '@taiga-ui/cdk';\nimport { TuiAlertService, TuiButton, TuiDialogContext, TuiDialogService, TuiTextfield } from '@taiga-ui/core';\nimport { TuiDataListWrapper, TuiFileLike, TuiFiles, TuiSlider } from '@taiga-ui/kit';\nimport { TuiInputModule, TuiSelectModule, TuiTextfieldControllerModule } from '@taiga-ui/legacy';\nimport { injectContext } from '@taiga-ui/polymorpheus';\nimport { Subject, Observable, of } from 'rxjs';\nimport { ICreateDpImageRequest } from '../../../interface/ICreateDpImageRequest';\nimport { ImagesRepositoryService } from '../../../repositories/images-repository.service';\nimport { IDpImage } from '../../../interface/IDpImage';\nimport { IUpdateDpImageRequest } from '../../../interface/IUpdateDpImageRequest';\nimport { UserAchievementsRepositoryService } from '../../../repositories/user-achievements-repository.service';\nimport { ConfigService } from '../../../services/config.service';\nimport { UserAchievementsService } from '../../../services/user-achievements.service';\n\n@Component({\n  selector: 'app-dialog-image',\n  standalone: true,\n  imports: [\n    AsyncPipe,\n    ReactiveFormsModule,\n    TuiAutoFocus,\n    TuiButton,\n    TuiDataListWrapper,\n    TuiFiles,\n    TuiInputModule,\n    TuiSelectModule,\n    TuiSlider,\n    TuiTextfield,\n    TuiTextfieldControllerModule,\n    NgIf\n  ],\n  templateUrl: './dialog-image.component.html',\n  styleUrls: ['./dialog-image.component.css']\n})\nexport class DialogImageComponent implements OnInit {\n  @ViewChild('productNameInput', { read: ElementRef }) productNameInputRef!: ElementRef;\n\n  private readonly alerts = inject(TuiAlertService);\n  private readonly dialogs = inject(TuiDialogService);\n  private readonly imagesRepositoryService = inject(ImagesRepositoryService);\n  private readonly userAchievementsRepository = inject(UserAchievementsRepositoryService);\n  private readonly configService = inject(ConfigService);\n  private readonly userAchievementsService = inject(UserAchievementsService);\n\n  public readonly context = injectContext>();\n\n  protected readonly imageControl = new FormControl(null, Validators.required);\n  protected readonly failedImage$ = new Subject();\n  protected readonly loadingImage$ = new Subject();\n  protected readonly loadedImage$ = new Subject();\n\n  protected readonly imageForm = new FormGroup({\n    dpProductId: new FormControl(null, Validators.required),\n    dpImageTitle: new FormControl('', [Validators.required, Validators.maxLength(200)])\n  });\n\n  selectedFile: File | null = null;\n  private readonly maxFileSize = 5 * 1024 * 1024; // 5MB\n  private readonly allowedTypes = ['image/jpeg', 'image/png'];\n\n  protected get hasValue(): boolean {\n    return this.imageForm.valid && !!this.selectedFile;\n  }\n\n  protected get data(): IDpImage {\n    return this.context.data;\n  }\n\n  ngOnInit(): void {\n    const userProjId = parseInt(localStorage.getItem('userProjId') || '0', 10);\n    this.userAchievementsRepository\n      .handleAchievement(userProjId, this.configService.achievementIds.openImageDialogSuccess, 'тест-кейс: диалог изображения открыт!')\n      .subscribe();\n    if (this.data) {\n      this.imageForm.patchValue({\n        dpProductId: this.data.dpProductId,\n        dpImageTitle: this.data.dpImageTitle\n      });\n    }\n  }\n\n  protected removeImage(): void {\n    this.imageControl.setValue(null);\n    this.selectedFile = null;\n    this.loadedImage$.next(null);\n    this.failedImage$.next(null);\n    this.loadingImage$.next(null);\n  }\n\n  protected onFileChange(event: Event): void {\n    const input = event.target as HTMLInputElement;\n    if (input.files && input.files.length > 0) {\n      const file = input.files[0];\n      const validationError = this.validateFile(file);\n      if (validationError) {\n        this.showError(validationError);\n        this.failedImage$.next(file);\n        this.imageControl.setValue(null);\n        this.selectedFile = null;\n        return;\n      }\n      this.selectedFile = file;\n      this.imageControl.setValue(file);\n      this.loadedImage$.next(file);\n    }\n  }\n\n  private validateFile(file: File): string | null {\n    if (file.size > this.maxFileSize) {\n      return `Файл слишком большой (максимум ${this.maxFileSize / 1024 / 1024}MB).`;\n    }\n    if (!this.allowedTypes.includes(file.type)) {\n      return 'Поддерживаются только JPEG и PNG.';\n    }\n    return null;\n  }\n\n  protected submit(event?: Event): void {\n    if (event) {\n      event.preventDefault();\n    }\n    if (this.hasValue) {\n      const imageData = this.imageForm.value;\n      const userProjId = parseInt(localStorage.getItem('userProjId') || '0', 10);\n      this.loadingImage$.next(this.selectedFile);\n\n      if (this.data.dpImagesId) {\n        const updateRequest: IUpdateDpImageRequest = {\n          dpProductId: imageData.dpProductId!,\n          dpImageTitle: imageData.dpImageTitle!,\n          file: this.selectedFile!\n        };\n        this.updateImage(updateRequest, userProjId);\n      } else {\n        const createRequest: ICreateDpImageRequest = {\n          dpProductId: imageData.dpProductId!,\n          dpImageTitle: imageData.dpImageTitle!,\n          file: this.selectedFile!\n        };\n        this.createImage(createRequest, userProjId);\n      }\n    } else {\n      this.showError('Форма заполнена некорректно.');\n    }\n  }\n\n  private createImage(imageData: ICreateDpImageRequest, userProjId: number): void {\n    // Проверка: если включён режим \"всегда ошибка\" — только негативный тест-кейс\n    if (this.userAchievementsService.getAlwaysFailMode()) {\n      this.userAchievementsRepository\n        .handleAchievement(\n          userProjId,\n          this.configService.achievementIds.addImageFailed,\n          'тест-кейс: ошибка добавления изображения!'\n        )\n        .subscribe();\n      this.showError('Тест-кейс: ошибка добавления изображения!');\n      this.failedImage$.next(this.selectedFile);\n      this.loadingImage$.next(null);\n      return;\n    }\n\n    // Обычная логика\n    this.imagesRepositoryService.createDpImage(imageData).subscribe({\n      next: (createdImage) => {\n        this.context.completeWith(createdImage);\n        this.showSuccess('Изображение успешно загружено.');\n        this.userAchievementsRepository\n          .handleAchievement(\n            userProjId,\n            this.configService.achievementIds.addImageSuccess,\n            'тест-кейс: изображение успешно добавлено!'\n          )\n          .subscribe();\n        this.loadingImage$.next(null);\n      },\n      error: (error) => {\n        console.error('Ошибка при загрузке изображения:', error);\n        this.showError(`Ошибка при загрузке изображения: ${error.message || 'неизвестная ошибка'}`);\n        this.userAchievementsRepository\n          .handleAchievement(\n            userProjId,\n            this.configService.achievementIds.addImageFailed,\n            'тест-кейс: ошибка добавления изображения!'\n          )\n          .subscribe();\n        this.failedImage$.next(this.selectedFile);\n        this.loadingImage$.next(null);\n      }\n    });\n  }\n\n  private updateImage(imageData: IUpdateDpImageRequest, userProjId: number): void {\n    // Проверка: если включён режим \"всегда ошибка\" — только негативный тест-кейс\n    if (this.userAchievementsService.getAlwaysFailMode()) {\n      this.userAchievementsRepository\n        .handleAchievement(\n          userProjId,\n          this.configService.achievementIds.updateImageFailed,\n          'тест-кейс: ошибка обновления изображения!'\n        )\n        .subscribe();\n      this.showError('Тест-кейс: ошибка обновления изображения!');\n      return;\n    }\n\n    // Обычная логика обновления изображения\n    this.imagesRepositoryService.updateDpImage(this.data.dpImagesId, imageData).subscribe({\n      next: () => {\n        this.context.completeWith(this.data);\n        this.showSuccess('Изображение успешно обновлено.');\n        this.userAchievementsRepository\n          .handleAchievement(userProjId, this.configService.achievementIds.updateImageSuccess, 'тест-кейс: изображение успешно обновлено!')\n          .subscribe();\n        this.loadingImage$.next(null);\n      },\n      error: (error) => {\n        console.error('Ошибка при обновлении изображения:', error);\n        this.showError(`Ошибка при обновлении изображения: ${error.message || 'неизвестная ошибка'}`);\n        this.userAchievementsRepository\n          .handleAchievement(userProjId, this.configService.achievementIds.updateImageFailed, 'тест-кейс: ошибка обновления изображения!')\n          .subscribe();\n        this.failedImage$.next(this.selectedFile);\n        this.loadingImage$.next(null);\n      }\n    });\n  }\n\n  private showError(message: string): void {\n    this.alerts\n      .open(message, {\n        label: 'Ошибка',\n        appearance: 'negative',\n        autoClose: 5000\n      })\n      .subscribe();\n  }\n\n  private showSuccess(message: string): void {\n    this.alerts\n      .open(message, {\n        label: 'Успех',\n        appearance: 'success',\n        autoClose: 5000\n      })\n      .subscribe();\n  }\n}\n    \n\n    \n        \n  \n    \n      ID продукта\n    \n    \n    \n      Название изображения\n    \n    \n    \n      \n    \n    \n    Загрузить изображение\n  \n\n  \n    \n\n    \n\n    \n\n    \n  \n\n\n    \n\n    \n                \n                    ./dialog-image.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            ID продукта                  Название изображения                              Загрузить изображение                      '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AchievmentsPageForUserComponent', 'selector': 'app-achievments-page-for-user'},{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'ButtonComponent', 'selector': 'storybook-button'},{'name': 'CardItemComponent', 'selector': 'app-card-item'},{'name': 'CarouselImgComponent', 'selector': 'app-carousel-img'},{'name': 'DialogCategoryComponent', 'selector': 'app-dialog-category'},{'name': 'DialogImageComponent', 'selector': 'app-dialog-image'},{'name': 'DialogProductComponent', 'selector': 'app-dialog-product'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'storybook-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginProjComponent', 'selector': 'app-login-proj'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PageCartComponent', 'selector': 'app-page-cart'},{'name': 'PageCatalogItemComponent', 'selector': 'app-page-catalog-item'},{'name': 'PageComponent', 'selector': 'storybook-page'},{'name': 'PageItemFromCatalogComponent', 'selector': 'app-page-item-from-catalog'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RegisterProjComponent', 'selector': 'app-register-proj'},{'name': 'ThemeToggleComponent', 'selector': 'app-theme-toggle'},{'name': 'UserPageComponent', 'selector': 'app-user-page'},{'name': 'UserPageProjComponent', 'selector': 'app-user-page-proj'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DialogImageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DialogProductComponent.html":{"url":"components/DialogProductComponent.html","title":"component - DialogProductComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DialogProductComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/dialog-product/dialog-product.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dialog-product\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            TuiAutoFocus\n                            TuiButton\n                            TuiDataListWrapper\n                            TuiInputModule\n                            TuiSelectModule\n                            TuiSlider\n                            TuiTextfield\n                            TuiTextfieldControllerModule\n                            AsyncPipe\n                            NgIf\n                \n            \n\n            \n                styleUrls\n                ./dialog-product.component.css\n            \n\n\n\n            \n                templateUrl\n                ./dialog-product.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                alerts\n                            \n                            \n                                    Private\n                                    Readonly\n                                configService\n                            \n                            \n                                    Public\n                                    Readonly\n                                context\n                            \n                            \n                                    Private\n                                    Readonly\n                                dialogs\n                            \n                            \n                                    Protected\n                                    Readonly\n                                productForm\n                            \n                            \n                                    \n                                productNameInputRef\n                            \n                            \n                                    Private\n                                    Readonly\n                                productsRepositoryService\n                            \n                            \n                                    Private\n                                    Readonly\n                                userAchievementsRepository\n                            \n                            \n                                    Private\n                                    Readonly\n                                userAchievementsService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkLengthAndWarn\n                            \n                            \n                                    Private\n                                createProduct\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                onInput\n                            \n                            \n                                    Private\n                                showError\n                            \n                            \n                                    Private\n                                showSuccess\n                            \n                            \n                                    Private\n                                showWarning\n                            \n                            \n                                    Protected\n                                submit\n                            \n                            \n                                    Private\n                                updateProduct\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hasValue\n                                \n                                \n                                    data\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkLengthAndWarn\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkLengthAndWarn(value: string, maxLength: number, controlName: string, warningThreshold: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/dialog-product/dialog-product.component.ts:204\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                maxLength\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                controlName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                warningThreshold\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    15\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    createProduct(productData: IDpProduct, userProjId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/dialog-product/dialog-product.component.ts:94\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                productData\n                                            \n                                                            IDpProduct\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userProjId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/dialog-product/dialog-product.component.ts:66\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        onInput\n                        \n                    \n                \n            \n            \n                \n                        \n                    onInput(event: Event, controlName: string, maxLength: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/dialog-product/dialog-product.component.ts:196\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                controlName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                maxLength\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        showError\n                        \n                    \n                \n            \n            \n                \n                        \n                    showError(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/dialog-product/dialog-product.component.ts:176\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        showSuccess\n                        \n                    \n                \n            \n            \n                \n                        \n                    showSuccess(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/dialog-product/dialog-product.component.ts:186\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        showWarning\n                        \n                    \n                \n            \n            \n                \n                        \n                    showWarning(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/dialog-product/dialog-product.component.ts:214\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        submit\n                        \n                    \n                \n            \n            \n                \n                        \n                    submit(event?: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/dialog-product/dialog-product.component.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        updateProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateProduct(productData: IDpProduct, userProjId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/dialog-product/dialog-product.component.ts:135\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                productData\n                                            \n                                                            IDpProduct\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userProjId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        alerts\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiAlertService)\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/dialog-product/dialog-product.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        configService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ConfigService)\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/dialog-product/dialog-product.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : injectContext>()\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/dialog-product/dialog-product.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        dialogs\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiDialogService)\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/dialog-product/dialog-product.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        productForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    dpTitle: new FormControl('', Validators.required),\n    dpDescription: new FormControl(''),\n    dpPrice: new FormControl(0, [Validators.required, Validators.min(0)]),\n    dpPurchasePrice: new FormControl(0, [Validators.required, Validators.min(0)]),\n    dpCategoryId: new FormControl(0),\n    dpDiscountPercent: new FormControl(0, [Validators.min(0), Validators.max(100)])\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/dialog-product/dialog-product.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        productNameInputRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('productNameInput', {read: ElementRef})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/dialog-product/dialog-product.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        productsRepositoryService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ProductsRepositoryService)\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/dialog-product/dialog-product.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        userAchievementsRepository\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UserAchievementsRepositoryService)\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/dialog-product/dialog-product.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        userAchievementsService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UserAchievementsService)\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/dialog-product/dialog-product.component.ts:45\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hasValue\n                    \n                \n\n                \n                    \n                        gethasValue()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data/components/dialog-product/dialog-product.component.ts:58\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n\n                \n                    \n                        getdata()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data/components/dialog-product/dialog-product.component.ts:62\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, inject, ViewChild, ElementRef, OnInit, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { FormControl, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { TuiAutoFocus } from '@taiga-ui/cdk';\nimport { TuiAlertService, TuiButton, TuiDialogContext, TuiDialogService, TuiTextfield } from '@taiga-ui/core';\nimport { TuiDataListWrapper, TuiSlider } from '@taiga-ui/kit';\nimport { TuiInputModule, TuiSelectModule, TuiTextfieldControllerModule } from '@taiga-ui/legacy';\nimport { injectContext } from '@taiga-ui/polymorpheus';\nimport { IDpProduct } from '../../../interface/IDpProduct';\nimport { ProductsRepositoryService } from '../../../repositories/products-repository.service';\nimport { AsyncPipe, CommonModule, NgIf } from '@angular/common';\nimport { ConfigService } from '../../../services/config.service';\nimport { UserAchievementsRepositoryService } from '../../../repositories/user-achievements-repository.service';\nimport { UserAchievementsService } from '../../../services/user-achievements.service';\n\n@Component({\n  selector: 'app-dialog-product',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    TuiAutoFocus,\n    TuiButton,\n    TuiDataListWrapper,\n    TuiInputModule,\n    TuiSelectModule,\n    TuiSlider,\n    TuiTextfield,\n    TuiTextfieldControllerModule,\n    AsyncPipe,\n    NgIf\n  ],\n  templateUrl: './dialog-product.component.html',\n  styleUrls: ['./dialog-product.component.css'],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class DialogProductComponent implements OnInit {\n  @ViewChild('productNameInput', { read: ElementRef }) productNameInputRef!: ElementRef;\n\n  private readonly alerts = inject(TuiAlertService);\n  private readonly dialogs = inject(TuiDialogService);\n  private readonly productsRepositoryService = inject(ProductsRepositoryService);\n  private readonly userAchievementsRepository = inject(UserAchievementsRepositoryService);\n  private readonly configService = inject(ConfigService);\n  private readonly userAchievementsService = inject(UserAchievementsService);\n\n  public readonly context = injectContext>();\n\n  protected readonly productForm = new FormGroup({\n    dpTitle: new FormControl('', Validators.required),\n    dpDescription: new FormControl(''),\n    dpPrice: new FormControl(0, [Validators.required, Validators.min(0)]),\n    dpPurchasePrice: new FormControl(0, [Validators.required, Validators.min(0)]),\n    dpCategoryId: new FormControl(0),\n    dpDiscountPercent: new FormControl(0, [Validators.min(0), Validators.max(100)])\n  });\n\n  protected get hasValue(): boolean {\n    return this.productForm.valid;\n  }\n\n  protected get data(): IDpProduct {\n    return this.context.data;\n  }\n\n  ngOnInit(): void {\n    const userProjId = parseInt(localStorage.getItem('userProjId') || '0', 10);\n    this.userAchievementsRepository\n      .handleAchievement(userProjId, this.configService.achievementIds.openProductDialogSuccess, 'тест-кейс: диалог продукта открыт!')\n      .subscribe();\n    if (this.data) {\n      this.productForm.patchValue(this.data);\n    }\n  }\n\n  protected submit(event?: Event): void {\n    if (event) {\n      event.preventDefault();\n    }\n    if (this.hasValue) {\n      const productData = this.productForm.value;\n      const userProjId = parseInt(localStorage.getItem('userProjId') || '0', 10);\n\n      if (this.data.dpProductId) {\n        this.updateProduct({ ...productData, dpProductId: this.data.dpProductId } as IDpProduct, userProjId);\n      } else {\n        this.createProduct(productData as IDpProduct, userProjId);\n      }\n    } else {\n      this.showError('Форма заполнена некорректно.');\n    }\n  }\n\n  private createProduct(productData: IDpProduct, userProjId: number): void {\n    // Проверка: если включён режим \"всегда ошибка\" — только негативный тест-кейс\n    if (this.userAchievementsService.getAlwaysFailMode()) {\n      this.userAchievementsRepository\n        .handleAchievement(\n          userProjId,\n          this.configService.achievementIds.createProductFailed,\n          'тест-кейс: ошибка создания продукта!'\n        )\n        .subscribe();\n      this.showError('Тест-кейс: ошибка создания продукта!');\n      return;\n    }\n\n    // Обычная логика создания продукта\n    this.productsRepositoryService.createProduct(productData).subscribe({\n      next: (createdProduct) => {\n        this.context.completeWith(createdProduct);\n        this.showSuccess('Продукт успешно создан.');\n        this.userAchievementsRepository\n          .handleAchievement(\n            userProjId,\n            this.configService.achievementIds.createProductSuccess,\n            'тест-кейс: продукт успешно создан!'\n          )\n          .subscribe();\n      },\n      error: (error) => {\n        console.error('Ошибка при создании продукта:', error);\n        this.showError('Ошибка при создании продукта.');\n        this.userAchievementsRepository\n          .handleAchievement(\n            userProjId,\n            this.configService.achievementIds.createProductFailed,\n            'тест-кейс: ошибка создания продукта!'\n          )\n          .subscribe();\n      }\n    });\n  }\n\n  private updateProduct(productData: IDpProduct, userProjId: number): void {\n    // Проверка: если включён режим \"всегда ошибка\" — только негативный тест-кейс\n    if (this.userAchievementsService.getAlwaysFailMode()) {\n      this.userAchievementsRepository\n        .handleAchievement(\n          userProjId,\n          this.configService.achievementIds.updateProductFailed,\n          'тест-кейс: ошибка обновления продукта!'\n        )\n        .subscribe();\n      this.showError('Тест-кейс: ошибка обновления продукта!');\n      return;\n    }\n\n    // Обычная логика обновления продукта\n    this.productsRepositoryService.updateProduct(productData.dpProductId, productData).subscribe({\n      next: () => {\n        this.context.completeWith(productData);\n        this.showSuccess('Продукт успешно обновлён.');\n        this.userAchievementsRepository\n          .handleAchievement(\n            userProjId,\n            this.configService.achievementIds.updateProductSuccess,\n            'тест-кейс: продукт успешно обновлён!'\n          )\n          .subscribe();\n      },\n      error: (error) => {\n        console.error('Ошибка при обновлении продукта:', error);\n        this.showError('Ошибка при обновлении продукта.');\n        this.userAchievementsRepository\n          .handleAchievement(\n            userProjId,\n            this.configService.achievementIds.updateProductFailed,\n            'тест-кейс: ошибка обновления продукта!'\n          )\n          .subscribe();\n      }\n    });\n  }\n\n  private showError(message: string): void {\n    this.alerts\n      .open(message, {\n        label: 'Ошибка',\n        appearance: 'negative',\n        autoClose: 5000\n      })\n      .subscribe();\n  }\n\n  private showSuccess(message: string): void {\n    this.alerts\n      .open(message, {\n        label: 'Успех',\n        appearance: 'success',\n        autoClose: 5000\n      })\n      .subscribe();\n  }\n\n  protected onInput(event: Event, controlName: string, maxLength: number): void {\n    const input = event.target as HTMLInputElement;\n    const cleanedValue = input.value;\n    const finalValue = this.checkLengthAndWarn(cleanedValue, maxLength, controlName);\n    input.value = finalValue;\n    this.productForm.patchValue({ [controlName]: finalValue });\n  }\n\n  private checkLengthAndWarn(value: string, maxLength: number, controlName: string, warningThreshold: number = 15): string {\n    if (value.length > maxLength) {\n      this.showError(`Вы превысили максимальную длину в ${maxLength} символов для ${controlName}.`);\n      return value.slice(0, maxLength);\n    } else if (value.length > maxLength - warningThreshold) {\n      this.showWarning(`Вы приближаетесь к лимиту символов для ${controlName}. Осталось ${maxLength - value.length} символов.`);\n    }\n    return value;\n  }\n\n  private showWarning(message: string): void {\n    this.alerts\n      .open(message, {\n        label: 'Предупреждение',\n        appearance: 'warning',\n        autoClose: 5000\n      })\n      .subscribe();\n  }\n}\n    \n\n    \n        \n  \n    \n      Название продукта\n    \n    \n    \n      Описание продукта\n    \n    \n    \n      Цена продукта\n    \n    \n    \n      Закупочная цена\n    \n    \n    \n      ID категории\n    \n    \n    \n      Процент скидки\n    \n    \n    Добавить продукт\n  \n\n\n    \n\n    \n                \n                    ./dialog-product.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Название продукта                  Описание продукта                  Цена продукта                  Закупочная цена                  ID категории                  Процент скидки            Добавить продукт  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AchievmentsPageForUserComponent', 'selector': 'app-achievments-page-for-user'},{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'ButtonComponent', 'selector': 'storybook-button'},{'name': 'CardItemComponent', 'selector': 'app-card-item'},{'name': 'CarouselImgComponent', 'selector': 'app-carousel-img'},{'name': 'DialogCategoryComponent', 'selector': 'app-dialog-category'},{'name': 'DialogImageComponent', 'selector': 'app-dialog-image'},{'name': 'DialogProductComponent', 'selector': 'app-dialog-product'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'storybook-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginProjComponent', 'selector': 'app-login-proj'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PageCartComponent', 'selector': 'app-page-cart'},{'name': 'PageCatalogItemComponent', 'selector': 'app-page-catalog-item'},{'name': 'PageComponent', 'selector': 'storybook-page'},{'name': 'PageItemFromCatalogComponent', 'selector': 'app-page-item-from-catalog'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RegisterProjComponent', 'selector': 'app-register-proj'},{'name': 'ThemeToggleComponent', 'selector': 'app-theme-toggle'},{'name': 'UserPageComponent', 'selector': 'app-user-page'},{'name': 'UserPageProjComponent', 'selector': 'app-user-page-proj'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DialogProductComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DpCategoriesService.html":{"url":"injectables/DpCategoriesService.html","title":"injectable - DpCategoriesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DpCategoriesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/dp-categories.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createDpCategory\n                            \n                            \n                                deleteDpCategory\n                            \n                            \n                                getAllDpCategories\n                            \n                            \n                                getDpCategoryById\n                            \n                            \n                                updateDpCategory\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/dp-categories.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createDpCategory\n                        \n                    \n                \n            \n            \n                \ncreateDpCategory(dpCategory: IDpCategory)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/dp-categories.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dpCategory\n                                            \n                                                            IDpCategory\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteDpCategory\n                        \n                    \n                \n            \n            \n                \ndeleteDpCategory(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/dp-categories.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllDpCategories\n                        \n                    \n                \n            \n            \n                \ngetAllDpCategories()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/dp-categories.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDpCategoryById\n                        \n                    \n                \n            \n            \n                \ngetDpCategoryById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/dp-categories.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateDpCategory\n                        \n                    \n                \n            \n            \n                \nupdateDpCategory(id: number, dpCategory: IDpCategory)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/dp-categories.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dpCategory\n                                            \n                                                            IDpCategory\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${window.location.origin}/api/DpCategories`\n                    \n                \n                    \n                        \n                                Defined in src/app/services/dp-categories.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { IDpCategory } from '../interface/IDpCategory';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class DpCategoriesService {\n  private baseUrl = `${window.location.origin}/api/DpCategories`;\n\n  constructor(private http: HttpClient) {}\n\n  getAllDpCategories(): Observable {\n    return this.http.get(this.baseUrl);\n  }\n\n  getDpCategoryById(id: number): Observable {\n    return this.http.get(`${this.baseUrl}/${id}`);\n  }\n\n  createDpCategory(dpCategory: IDpCategory): Observable {\n    return this.http.post(this.baseUrl, dpCategory);\n  }\n\n  updateDpCategory(id: number, dpCategory: IDpCategory): Observable {\n    return this.http.put(`${this.baseUrl}/${id}`, dpCategory);\n  }\n\n  deleteDpCategory(id: number): Observable {\n    return this.http.delete(`${this.baseUrl}/${id}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DpImagesService.html":{"url":"injectables/DpImagesService.html","title":"injectable - DpImagesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DpImagesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/dp-images.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createDpImage\n                            \n                            \n                                deleteDpImage\n                            \n                            \n                                getAllDpImages\n                            \n                            \n                                getDpImageById\n                            \n                            \n                                getDpImageData\n                            \n                            \n                                getDpImagesByProductId\n                            \n                            \n                                updateDpImage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/dp-images.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createDpImage\n                        \n                    \n                \n            \n            \n                \ncreateDpImage(request: ICreateDpImageRequest)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/dp-images.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                            ICreateDpImageRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteDpImage\n                        \n                    \n                \n            \n            \n                \ndeleteDpImage(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/dp-images.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllDpImages\n                        \n                    \n                \n            \n            \n                \ngetAllDpImages()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/dp-images.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDpImageById\n                        \n                    \n                \n            \n            \n                \ngetDpImageById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/dp-images.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDpImageData\n                        \n                    \n                \n            \n            \n                \ngetDpImageData(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/dp-images.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDpImagesByProductId\n                        \n                    \n                \n            \n            \n                \ngetDpImagesByProductId(productId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/dp-images.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                productId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateDpImage\n                        \n                    \n                \n            \n            \n                \nupdateDpImage(id: number, request: IUpdateDpImageRequest)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/dp-images.service.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                            IUpdateDpImageRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${window.location.origin}/api/DpImages`\n                    \n                \n                    \n                        \n                                Defined in src/app/services/dp-images.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { IDpImage } from '../interface/IDpImage';\nimport { ICreateDpImageRequest } from '../interface/ICreateDpImageRequest';\nimport { IUpdateDpImageRequest } from '../interface/IUpdateDpImageRequest';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DpImagesService {\n  private baseUrl = `${window.location.origin}/api/DpImages`;\n\n  constructor(private http: HttpClient) {}\n\n getAllDpImages(): Observable {\n    console.log('[DpImagesService] HTTP GET всех изображений');\n    return this.http.get(this.baseUrl);\n}\n\ngetDpImagesByProductId(productId: number): Observable {\n    console.log(`[DpImagesService] HTTP GET изображений для товара ${productId}`);\n    return this.http.get(`${this.baseUrl}/ByProduct/${productId}`);\n}\n\n  getDpImageById(id: number): Observable {\n    return this.http.get(`${this.baseUrl}/${id}`);\n  }\n\n  getDpImageData(id: number): Observable {\n    return this.http.get(`${this.baseUrl}/${id}/image`, { responseType: 'blob' });\n  }\n\n  createDpImage(request: ICreateDpImageRequest): Observable {\n    const formData = new FormData();\n    formData.append('DpProductId', request.dpProductId.toString());\n    formData.append('DpImageTitle', request.dpImageTitle);\n    formData.append('File', request.file);\n\n    return this.http.post(this.baseUrl, formData);\n  }\n\n  updateDpImage(id: number, request: IUpdateDpImageRequest): Observable {\n    const formData = new FormData();\n    formData.append('DpProductId', request.dpProductId.toString());\n    formData.append('DpImageTitle', request.dpImageTitle);\n    if (request.file) {\n      formData.append('File', request.file);\n    }\n\n    return this.http.put(`${this.baseUrl}/${id}`, formData);\n  }\n\n  deleteDpImage(id: number): Observable {\n    return this.http.delete(`${this.baseUrl}/${id}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DpOrderCompositionsService.html":{"url":"injectables/DpOrderCompositionsService.html","title":"injectable - DpOrderCompositionsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DpOrderCompositionsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/dp-order-compositions.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createDpOrderComposition\n                            \n                            \n                                deleteDpOrderComposition\n                            \n                            \n                                getAllDpOrderCompositions\n                            \n                            \n                                getDpOrderCompositionById\n                            \n                            \n                                updateDpOrderComposition\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/dp-order-compositions.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createDpOrderComposition\n                        \n                    \n                \n            \n            \n                \ncreateDpOrderComposition(dpOrderComposition: IDpOrderComposition)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/dp-order-compositions.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dpOrderComposition\n                                            \n                                                            IDpOrderComposition\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteDpOrderComposition\n                        \n                    \n                \n            \n            \n                \ndeleteDpOrderComposition(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/dp-order-compositions.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllDpOrderCompositions\n                        \n                    \n                \n            \n            \n                \ngetAllDpOrderCompositions()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/dp-order-compositions.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDpOrderCompositionById\n                        \n                    \n                \n            \n            \n                \ngetDpOrderCompositionById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/dp-order-compositions.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateDpOrderComposition\n                        \n                    \n                \n            \n            \n                \nupdateDpOrderComposition(id: number, dpOrderComposition: IDpOrderComposition)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/dp-order-compositions.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dpOrderComposition\n                                            \n                                                            IDpOrderComposition\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${window.location.origin}/api/DpOrderCompositions`\n                    \n                \n                    \n                        \n                                Defined in src/app/services/dp-order-compositions.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { IDpOrderComposition } from '../interface/IDpOrderComposition';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DpOrderCompositionsService {\n  private baseUrl = `${window.location.origin}/api/DpOrderCompositions`;\n\n  constructor(private http: HttpClient) {}\n\n  getAllDpOrderCompositions(): Observable {\n    return this.http.get(this.baseUrl);\n  }\n\n  getDpOrderCompositionById(id: number): Observable {\n    return this.http.get(`${this.baseUrl}/${id}`);\n  }\n\n  createDpOrderComposition(dpOrderComposition: IDpOrderComposition): Observable {\n    return this.http.post(this.baseUrl, dpOrderComposition);\n  }\n\n  updateDpOrderComposition(id: number, dpOrderComposition: IDpOrderComposition): Observable {\n    return this.http.put(`${this.baseUrl}/${id}`, dpOrderComposition);\n  }\n\n  deleteDpOrderComposition(id: number): Observable {\n    return this.http.delete(`${this.baseUrl}/${id}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DpOrdersService.html":{"url":"injectables/DpOrdersService.html","title":"injectable - DpOrdersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DpOrdersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/dp-orders.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createDpOrder\n                            \n                            \n                                deleteDpOrder\n                            \n                            \n                                getAllDpOrders\n                            \n                            \n                                getDpOrderById\n                            \n                            \n                                updateDpOrder\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/dp-orders.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createDpOrder\n                        \n                    \n                \n            \n            \n                \ncreateDpOrder(dpOrder: IDpOrder)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/dp-orders.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dpOrder\n                                            \n                                                            IDpOrder\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteDpOrder\n                        \n                    \n                \n            \n            \n                \ndeleteDpOrder(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/dp-orders.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllDpOrders\n                        \n                    \n                \n            \n            \n                \ngetAllDpOrders()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/dp-orders.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDpOrderById\n                        \n                    \n                \n            \n            \n                \ngetDpOrderById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/dp-orders.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateDpOrder\n                        \n                    \n                \n            \n            \n                \nupdateDpOrder(id: number, dpOrder: IDpOrder)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/dp-orders.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dpOrder\n                                            \n                                                            IDpOrder\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${window.location.origin}/api/DpOrders`\n                    \n                \n                    \n                        \n                                Defined in src/app/services/dp-orders.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { IDpOrder } from '../interface/IDpOrder';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DpOrdersService {\n  private baseUrl = `${window.location.origin}/api/DpOrders`;\n\n  constructor(private http: HttpClient) {}\n\n  getAllDpOrders(): Observable {\n    return this.http.get(this.baseUrl);\n  }\n\n  getDpOrderById(id: number): Observable {\n    return this.http.get(`${this.baseUrl}/${id}`);\n  }\n\n  createDpOrder(dpOrder: IDpOrder): Observable {\n    return this.http.post(this.baseUrl, dpOrder);\n  }\n\n  updateDpOrder(id: number, dpOrder: IDpOrder): Observable {\n    return this.http.put(`${this.baseUrl}/${id}`, dpOrder);\n  }\n\n  deleteDpOrder(id: number): Observable {\n    return this.http.delete(`${this.baseUrl}/${id}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DpProductAttributesService.html":{"url":"injectables/DpProductAttributesService.html","title":"injectable - DpProductAttributesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DpProductAttributesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/dp-product-attributes.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createDpProductAttribute\n                            \n                            \n                                deleteDpProductAttribute\n                            \n                            \n                                getAllDpProductAttributes\n                            \n                            \n                                getDpProductAttributeById\n                            \n                            \n                                updateDpProductAttribute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/dp-product-attributes.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createDpProductAttribute\n                        \n                    \n                \n            \n            \n                \ncreateDpProductAttribute(dpProductAttribute: IDpProductAttribute)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/dp-product-attributes.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dpProductAttribute\n                                            \n                                                            IDpProductAttribute\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteDpProductAttribute\n                        \n                    \n                \n            \n            \n                \ndeleteDpProductAttribute(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/dp-product-attributes.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllDpProductAttributes\n                        \n                    \n                \n            \n            \n                \ngetAllDpProductAttributes()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/dp-product-attributes.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDpProductAttributeById\n                        \n                    \n                \n            \n            \n                \ngetDpProductAttributeById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/dp-product-attributes.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateDpProductAttribute\n                        \n                    \n                \n            \n            \n                \nupdateDpProductAttribute(id: number, dpProductAttribute: IDpProductAttribute)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/dp-product-attributes.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dpProductAttribute\n                                            \n                                                            IDpProductAttribute\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${window.location.origin}/api/DpProductAttributes`\n                    \n                \n                    \n                        \n                                Defined in src/app/services/dp-product-attributes.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { IDpProductAttribute } from '../interface/IDpProductAttribute';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class DpProductAttributesService {\n  private baseUrl = `${window.location.origin}/api/DpProductAttributes`;\n\n  constructor(private http: HttpClient) {}\n\n  getAllDpProductAttributes(): Observable {\n    return this.http.get(this.baseUrl);\n  }\n\n  getDpProductAttributeById(id: number): Observable {\n    return this.http.get(`${this.baseUrl}/${id}`);\n  }\n\n  createDpProductAttribute(dpProductAttribute: IDpProductAttribute): Observable {\n    return this.http.post(this.baseUrl, dpProductAttribute);\n  }\n\n  updateDpProductAttribute(id: number, dpProductAttribute: IDpProductAttribute): Observable {\n    return this.http.put(`${this.baseUrl}/${id}`, dpProductAttribute);\n  }\n\n  deleteDpProductAttribute(id: number): Observable {\n    return this.http.delete(`${this.baseUrl}/${id}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DpSizesService.html":{"url":"injectables/DpSizesService.html","title":"injectable - DpSizesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DpSizesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/dp-sizes.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createDpSize\n                            \n                            \n                                deleteDpSize\n                            \n                            \n                                getAllDpSizes\n                            \n                            \n                                getDpSizeById\n                            \n                            \n                                updateDpSize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/dp-sizes.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createDpSize\n                        \n                    \n                \n            \n            \n                \ncreateDpSize(dpSize: IDpSize)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/dp-sizes.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dpSize\n                                            \n                                                            IDpSize\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteDpSize\n                        \n                    \n                \n            \n            \n                \ndeleteDpSize(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/dp-sizes.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllDpSizes\n                        \n                    \n                \n            \n            \n                \ngetAllDpSizes()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/dp-sizes.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDpSizeById\n                        \n                    \n                \n            \n            \n                \ngetDpSizeById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/dp-sizes.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateDpSize\n                        \n                    \n                \n            \n            \n                \nupdateDpSize(id: number, dpSize: IDpSize)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/dp-sizes.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dpSize\n                                            \n                                                            IDpSize\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${window.location.origin}/api/DpSizes`\n                    \n                \n                    \n                        \n                                Defined in src/app/services/dp-sizes.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { IDpSize } from '../interface/IDpSize';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class DpSizesService {\n  private baseUrl = `${window.location.origin}/api/DpSizes`;\n\n  constructor(private http: HttpClient) {}\n\n  getAllDpSizes(): Observable {\n    return this.http.get(this.baseUrl);\n  }\n\n  getDpSizeById(id: number): Observable {\n    return this.http.get(`${this.baseUrl}/${id}`);\n  }\n\n  createDpSize(dpSize: IDpSize): Observable {\n    return this.http.post(this.baseUrl, dpSize);\n  }\n\n  updateDpSize(id: number, dpSize: IDpSize): Observable {\n    return this.http.put(`${this.baseUrl}/${id}`, dpSize);\n  }\n\n  deleteDpSize(id: number): Observable {\n    return this.http.delete(`${this.baseUrl}/${id}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DpUserProjsService.html":{"url":"injectables/DpUserProjsService.html","title":"injectable - DpUserProjsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DpUserProjsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/dp-user-projs.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createDpUserProj\n                            \n                            \n                                deleteDpUserProj\n                            \n                            \n                                getAllDpUserProjs\n                            \n                            \n                                getDpUserProjById\n                            \n                            \n                                updateDpUserProj\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/dp-user-projs.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createDpUserProj\n                        \n                    \n                \n            \n            \n                \ncreateDpUserProj(dpUserProj: IDpUserProj)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/dp-user-projs.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dpUserProj\n                                            \n                                                            IDpUserProj\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteDpUserProj\n                        \n                    \n                \n            \n            \n                \ndeleteDpUserProj(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/dp-user-projs.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllDpUserProjs\n                        \n                    \n                \n            \n            \n                \ngetAllDpUserProjs()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/dp-user-projs.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDpUserProjById\n                        \n                    \n                \n            \n            \n                \ngetDpUserProjById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/dp-user-projs.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateDpUserProj\n                        \n                    \n                \n            \n            \n                \nupdateDpUserProj(id: number, dpUserProj: IDpUserProj)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/dp-user-projs.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dpUserProj\n                                            \n                                                            IDpUserProj\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${window.location.origin}/api/DpUserProjs`\n                    \n                \n                    \n                        \n                                Defined in src/app/services/dp-user-projs.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { IDpUserProj } from '../interface/IDpUserProj';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class DpUserProjsService {\n  private baseUrl = `${window.location.origin}/api/DpUserProjs`;\n\n  constructor(private http: HttpClient) {}\n\n  getAllDpUserProjs(): Observable {\n    return this.http.get(this.baseUrl);\n  }\n\n  getDpUserProjById(id: number): Observable {\n    return this.http.get(`${this.baseUrl}/${id}`);\n  }\n\n  createDpUserProj(dpUserProj: IDpUserProj): Observable {\n    return this.http.post(this.baseUrl, dpUserProj);\n  }\n\n  updateDpUserProj(id: number, dpUserProj: IDpUserProj): Observable {\n    return this.http.put(`${this.baseUrl}/${id}`, dpUserProj);\n  }\n\n  deleteDpUserProj(id: number): Observable {\n    return this.http.delete(`${this.baseUrl}/${id}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DpUsersService.html":{"url":"injectables/DpUsersService.html","title":"injectable - DpUsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DpUsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/dp-users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createDpUser\n                            \n                            \n                                deleteDpUser\n                            \n                            \n                                getAllDpUsers\n                            \n                            \n                                getDpUserById\n                            \n                            \n                                updateDpUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/dp-users.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createDpUser\n                        \n                    \n                \n            \n            \n                \ncreateDpUser(dpUser: IDpUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/dp-users.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dpUser\n                                            \n                                                            IDpUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteDpUser\n                        \n                    \n                \n            \n            \n                \ndeleteDpUser(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/dp-users.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllDpUsers\n                        \n                    \n                \n            \n            \n                \ngetAllDpUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/dp-users.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDpUserById\n                        \n                    \n                \n            \n            \n                \ngetDpUserById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/dp-users.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateDpUser\n                        \n                    \n                \n            \n            \n                \nupdateDpUser(id: number, dpUser: IDpUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/dp-users.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dpUser\n                                            \n                                                            IDpUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${window.location.origin}/api/DpUsers`\n                    \n                \n                    \n                        \n                                Defined in src/app/services/dp-users.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { IDpUser } from '../interface/IDpUser';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DpUsersService {\n  private baseUrl = `${window.location.origin}/api/DpUsers`;\n\n  constructor(private http: HttpClient) {}\n\n  getAllDpUsers(): Observable {\n    return this.http.get(this.baseUrl);\n  }\n\n  getDpUserById(id: number): Observable {\n    return this.http.get(`${this.baseUrl}/${id}`);\n  }\n\n  createDpUser(dpUser: IDpUser): Observable {\n    return this.http.post(this.baseUrl, dpUser);\n  }\n\n  updateDpUser(id: number, dpUser: IDpUser): Observable {\n    return this.http.put(`${this.baseUrl}/${id}`, dpUser);\n  }\n\n  deleteDpUser(id: number): Observable {\n    return this.http.delete(`${this.baseUrl}/${id}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FilterByInputComponent.html":{"url":"components/FilterByInputComponent.html","title":"component - FilterByInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FilterByInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/filter-by-input/filter-by-input.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => FilterByInputComponent), multi: true\n}\n                \n            \n\n\n            \n                selector\n                app-filter-by-input\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            TuiDataListWrapper\n                            TuiInputModule\n                \n            \n\n            \n                styleUrls\n                ./filter-by-input.component.css,../../../styles/root.css\n            \n\n\n\n            \n                templateUrl\n                ./filter-by-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                            \n                                    Private\n                                innerValue\n                            \n                            \n                                onChange\n                            \n                            \n                                onTouched\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onKeyPress\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Optional\n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                items\n                            \n                            \n                                label\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                searchQuery\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    filteredItems\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/data/components/filter-by-input/filter-by-input.component.ts:41\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        items\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/filter-by-input/filter-by-input.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Search'\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/filter-by-input/filter-by-input.component.ts:27\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        searchQuery\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/filter-by-input/filter-by-input.component.ts:29\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onKeyPress\n                        \n                    \n                \n            \n            \n                \nonKeyPress(event: KeyboardEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/filter-by-input/filter-by-input.component.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        KeyboardEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/filter-by-input/filter-by-input.component.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fn\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/filter-by-input/filter-by-input.component.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fn\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/filter-by-input/filter-by-input.component.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                isDisabled\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/filter-by-input/filter-by-input.component.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    search: new FormControl('', [Validators.pattern('^[a-zA-Zа-яА-Я0-9]*$')]),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/filter-by-input/filter-by-input.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        innerValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/filter-by-input/filter-by-input.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onChange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/filter-by-input/filter-by-input.component.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onTouched\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/filter-by-input/filter-by-input.component.ts:81\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        filteredItems\n                    \n                \n\n                \n                    \n                        getfilteredItems()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data/components/filter-by-input/filter-by-input.component.ts:37\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, FormControl, FormGroup, NG_VALUE_ACCESSOR, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { TuiDataListWrapper } from '@taiga-ui/kit';\nimport {TuiInputModule} from '@taiga-ui/legacy';\n\n@Component({\n  selector: 'app-filter-by-input',\n  standalone: true,\n  imports: [\n    ReactiveFormsModule,\n    TuiDataListWrapper,\n    TuiInputModule\n  ],\n  templateUrl: './filter-by-input.component.html',\n  styleUrls: ['./filter-by-input.component.css',\n    '../../../styles/root.css',],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => FilterByInputComponent),\n      multi: true\n    }\n  ]\n})\nexport class FilterByInputComponent implements ControlValueAccessor {\n  @Input() label: string = 'Search';\n  @Input() items: string[] = [];\n  @Output() searchQuery = new EventEmitter();\n\n  form = new FormGroup({\n    search: new FormControl('', [Validators.pattern('^[a-zA-Zа-яА-Я0-9]*$')]),\n  });\n\n  private innerValue: string = '';\n\n  get filteredItems() {\n    const value = this.form.get('search')?.value ?? '';\n    this.searchQuery.emit(value);\n    return this.items.filter(item => item.includes(value));\n  }\n\n  constructor() {\n    this.form.controls['search'].valueChanges.subscribe(value => {\n      const safeValue = value ?? '';\n      this.searchQuery.emit(safeValue);\n      this.onChange(safeValue);\n    });\n  }\n\n  onKeyPress(event: KeyboardEvent): void {\n    const inputChar = event.key;\n    const allowedChars = /^[a-zA-Zа-яА-Я0-9]$/;\n    if (!allowedChars.test(inputChar) && !event.ctrlKey && !event.metaKey) {\n      event.preventDefault();\n    }\n  }\n\n  writeValue(value: string): void {\n    this.innerValue = value;\n    this.form.controls['search'].setValue(value, { emitEvent: false });\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    if (isDisabled) {\n      this.form.disable();\n    } else {\n      this.form.enable();\n    }\n  }\n\n  onChange = (value: string) => {};\n  onTouched = () => {};\n}\n\n    \n\n    \n        \n  \n    {{ label }}\n    \n  \n\n\n    \n\n    \n                \n                    ./filter-by-input.component.css\n                \n                \n                \n                    ../../../styles/root.css\n                \n                @import 'variables.css';\n@import 'buttons.css';\n@import 'cards.css';\n@import 'navigation.css';\n@import 'header.css';\n@import 'carousel.css';\n@import 'icons.css';\n@import 'layout.css';\n@import 'tables.css';\n@import 'typography.css';\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ label }}      '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AchievmentsPageForUserComponent', 'selector': 'app-achievments-page-for-user'},{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'ButtonComponent', 'selector': 'storybook-button'},{'name': 'CardItemComponent', 'selector': 'app-card-item'},{'name': 'CarouselImgComponent', 'selector': 'app-carousel-img'},{'name': 'DialogCategoryComponent', 'selector': 'app-dialog-category'},{'name': 'DialogImageComponent', 'selector': 'app-dialog-image'},{'name': 'DialogProductComponent', 'selector': 'app-dialog-product'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'storybook-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginProjComponent', 'selector': 'app-login-proj'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PageCartComponent', 'selector': 'app-page-cart'},{'name': 'PageCatalogItemComponent', 'selector': 'app-page-catalog-item'},{'name': 'PageComponent', 'selector': 'storybook-page'},{'name': 'PageItemFromCatalogComponent', 'selector': 'app-page-item-from-catalog'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RegisterProjComponent', 'selector': 'app-register-proj'},{'name': 'ThemeToggleComponent', 'selector': 'app-theme-toggle'},{'name': 'UserPageComponent', 'selector': 'app-user-page'},{'name': 'UserPageProjComponent', 'selector': 'app-user-page-proj'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FilterByInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/stories/header.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                storybook-header\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                ButtonComponent\n                \n            \n\n            \n                styleUrls\n                ./header.css\n            \n\n\n            \n                template\n                  \n    \n      \n        \n          \n          \n          \n        \n      \n      Acme\n    \n    \n      \n        \n          Welcome, {{ user.name }}!\n        \n        \n      \n      \n        \n        \n      \n    \n  \n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onCreateAccount\n                            \n                            \n                                onLogin\n                            \n                            \n                                onLogout\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        user\n                    \n                \n                \n                    \n                        Type :         User | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/stories/header.component.ts:66\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onCreateAccount\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/stories/header.component.ts:75\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onLogin\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/stories/header.component.ts:69\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onLogout\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/stories/header.component.ts:72\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ButtonComponent } from './button.component';\nimport type { User } from './user';\n\n@Component({\n  selector: 'storybook-header',\n  standalone: true,\n  imports: [CommonModule, ButtonComponent],\n  template: `\n  \n    \n      \n        \n          \n          \n          \n        \n      \n      Acme\n    \n    \n      \n        \n          Welcome, {{ user.name }}!\n        \n        \n      \n      \n        \n        \n      \n    \n  \n`,\n  styleUrls: ['./header.css'],\n})\nexport class HeaderComponent {\n  @Input()\n  user: User | null = null;\n\n  @Output()\n  onLogin = new EventEmitter();\n\n  @Output()\n  onLogout = new EventEmitter();\n\n  @Output()\n  onCreateAccount = new EventEmitter();\n}\n\n    \n\n\n    \n                \n                    ./header.css\n                \n                .storybook-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n}\n\n.storybook-header svg {\n  display: inline-block;\n  vertical-align: top;\n}\n\n.storybook-header h1 {\n  display: inline-block;\n  vertical-align: top;\n  margin: 6px 0 6px 10px;\n  font-weight: 700;\n  font-size: 20px;\n  line-height: 1;\n}\n\n.storybook-header button + button {\n  margin-left: 10px;\n}\n\n.storybook-header .welcome {\n  margin-right: 10px;\n  color: #333;\n  font-size: 14px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                      Acme                                Welcome, {{ user.name }}!                                                        '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AchievmentsPageForUserComponent', 'selector': 'app-achievments-page-for-user'},{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'ButtonComponent', 'selector': 'storybook-button'},{'name': 'CardItemComponent', 'selector': 'app-card-item'},{'name': 'CarouselImgComponent', 'selector': 'app-carousel-img'},{'name': 'DialogCategoryComponent', 'selector': 'app-dialog-category'},{'name': 'DialogImageComponent', 'selector': 'app-dialog-image'},{'name': 'DialogProductComponent', 'selector': 'app-dialog-product'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'storybook-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginProjComponent', 'selector': 'app-login-proj'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PageCartComponent', 'selector': 'app-page-cart'},{'name': 'PageCatalogItemComponent', 'selector': 'app-page-catalog-item'},{'name': 'PageComponent', 'selector': 'storybook-page'},{'name': 'PageItemFromCatalogComponent', 'selector': 'app-page-item-from-catalog'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RegisterProjComponent', 'selector': 'app-register-proj'},{'name': 'ThemeToggleComponent', 'selector': 'app-theme-toggle'},{'name': 'UserPageComponent', 'selector': 'app-user-page'},{'name': 'UserPageProjComponent', 'selector': 'app-user-page-proj'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAchievement.html":{"url":"interfaces/IAchievement.html","title":"interface - IAchievement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IAchievement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interface/IAchievement.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            achievementId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            dpUserProjs\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            textAchievement\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        achievementId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        achievementId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dpUserProjs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dpUserProjs:     IDpUserProj[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IDpUserProj[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        textAchievement\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        textAchievement:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IDpUserProj } from \"./IDpUserProj\";\n\n// Achievement.ts\nexport interface IAchievement {\n    achievementId: number;\n    title: string;\n    textAchievement?: string;\n    dpUserProjs?: IDpUserProj[];\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAddToCartRequest.html":{"url":"interfaces/IAddToCartRequest.html","title":"interface - IAddToCartRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IAddToCartRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interface/IAddToCartRequest.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            productId\n                                        \n                                \n                                \n                                        \n                                            quantity\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sizeId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        productId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        productId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        quantity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        quantity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sizeId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sizeId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IAddToCartRequest {\n    productId: number;\n    quantity: number;\n    sizeId?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICartItem.html":{"url":"interfaces/ICartItem.html","title":"interface - ICartItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICartItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interface/ICartItem.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            price\n                                        \n                                \n                                \n                                        \n                                            productId\n                                        \n                                \n                                \n                                        \n                                            productTitle\n                                        \n                                \n                                \n                                        \n                                            quantity\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sizeId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        productId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        productId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        productTitle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        productTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        quantity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        quantity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sizeId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sizeId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ICartItem {\n    productId: number;\n    productTitle: string;\n    price: number;\n    quantity: number;\n    sizeId?: number; // Add sizeId property\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICartViewModel.html":{"url":"interfaces/ICartViewModel.html","title":"interface - ICartViewModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICartViewModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interface/ICartViewModel.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cartItems\n                                        \n                                \n                                \n                                        \n                                            products\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cartItems\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cartItems:     ICartItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ICartItem[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        products\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        products:         IDpProduct[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IDpProduct[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IDpProduct } from \"./IDpProduct\";\nimport { ICartItem } from \"./ICartItem\";\n\n// CartViewModel.ts\n\nexport interface ICartViewModel {\n    cartItems: ICartItem[];\n    products: IDpProduct[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICreateDpImageRequest.html":{"url":"interfaces/ICreateDpImageRequest.html","title":"interface - ICreateDpImageRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICreateDpImageRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interface/ICreateDpImageRequest.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            dpImageTitle\n                                        \n                                \n                                \n                                        \n                                            dpProductId\n                                        \n                                \n                                \n                                        \n                                            file\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dpImageTitle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dpImageTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dpProductId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dpProductId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        file\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        file:     File\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     File\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ICreateDpImageRequest {\n    dpProductId: number;\n    dpImageTitle: string;\n    file: File;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDpCategory.html":{"url":"interfaces/IDpCategory.html","title":"interface - IDpCategory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDpCategory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interface/IDpCategory.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            dpCategoryId\n                                        \n                                \n                                \n                                        \n                                            dpCategoryTitle\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            dpProducts\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                                \n                                        \n                                            sizeId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dpCategoryId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dpCategoryId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dpCategoryTitle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dpCategoryTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dpProducts\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dpProducts:         IDpProduct[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IDpProduct[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         IDpSize\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IDpSize\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sizeId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sizeId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IDpSize } from \"./IDpSize\";\nimport { IDpProduct } from \"./IDpProduct\";\n\n// DpCategory.ts\n\nexport interface IDpCategory {\n    dpCategoryId: number;\n    dpCategoryTitle: string;\n    sizeId: number;\n    size: IDpSize;\n    dpProducts?: IDpProduct[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDpImage.html":{"url":"interfaces/IDpImage.html","title":"interface - IDpImage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDpImage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interface/IDpImage.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            dpImagesId\n                                        \n                                \n                                \n                                        \n                                            dpImageTitle\n                                        \n                                \n                                \n                                        \n                                            dpProduct\n                                        \n                                \n                                \n                                        \n                                            dpProductId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            imagesData\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dpImagesId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dpImagesId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dpImageTitle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dpImageTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dpProduct\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dpProduct:         IDpProduct\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IDpProduct\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dpProductId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dpProductId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imagesData\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        imagesData:     Uint8Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Uint8Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IDpProduct } from \"./IDpProduct\";\n\n// DpImage.ts\n\nexport interface IDpImage {\n    dpImagesId: number;\n    dpProductId: number;\n    dpImageTitle: string;\n    imagesData?: Uint8Array;\n    dpProduct: IDpProduct;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDpOrder.html":{"url":"interfaces/IDpOrder.html","title":"interface - IDpOrder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDpOrder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interface/IDpOrder.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            dpDateTimeOrder\n                                        \n                                \n                                \n                                        \n                                            dpOrderId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            dpTypeOrder\n                                        \n                                \n                                \n                                        \n                                            dpUser\n                                        \n                                \n                                \n                                        \n                                            dpUserId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dpDateTimeOrder\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dpDateTimeOrder:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dpOrderId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dpOrderId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dpTypeOrder\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dpTypeOrder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dpUser\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dpUser:         IDpUser\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IDpUser\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dpUserId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dpUserId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IDpUser } from \"./IDpUser\";\n\n// DpOrder.ts\n\nexport interface IDpOrder {\n    dpOrderId: number;\n    dpUserId: number;\n    dpDateTimeOrder: Date;\n    dpTypeOrder?: string;\n    dpUser: IDpUser;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDpOrderComposition.html":{"url":"interfaces/IDpOrderComposition.html","title":"interface - IDpOrderComposition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDpOrderComposition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interface/IDpOrderComposition.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            dpAttributes\n                                        \n                                \n                                \n                                        \n                                            dpAttributesId\n                                        \n                                \n                                \n                                        \n                                            dpCost\n                                        \n                                \n                                \n                                        \n                                            dpOrder\n                                        \n                                \n                                \n                                        \n                                            dpOrderId\n                                        \n                                \n                                \n                                        \n                                            dpQuantity\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dpAttributes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dpAttributes:         IDpProductAttribute\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IDpProductAttribute\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dpAttributesId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dpAttributesId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dpCost\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dpCost:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dpOrder\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dpOrder:         IDpOrder\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IDpOrder\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dpOrderId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dpOrderId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dpQuantity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dpQuantity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IDpProductAttribute } from \"./IDpProductAttribute\";\nimport { IDpOrder } from \"./IDpOrder\";\n\n// DpOrderComposition.ts\n\nexport interface IDpOrderComposition {\n    dpOrderId: number;\n    dpAttributesId: number;\n    dpQuantity: number;\n    dpCost: number;\n    dpAttributes: IDpProductAttribute;\n    dpOrder: IDpOrder;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDpOrderDetail.html":{"url":"interfaces/IDpOrderDetail.html","title":"interface - IDpOrderDetail","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDpOrderDetail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interface/IDpOrderDetail.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            productTitle\n                                        \n                                \n                                \n                                        \n                                            quantity\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sizeId\n                                        \n                                \n                                \n                                        \n                                            sizeName\n                                        \n                                \n                                \n                                        \n                                            totalPrice\n                                        \n                                \n                                \n                                        \n                                            unitPrice\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        productTitle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        productTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        quantity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        quantity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sizeId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sizeId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sizeName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sizeName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalPrice\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalPrice:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unitPrice\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unitPrice:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IDpOrderDetail {\n    productTitle?: string;\n    quantity: number;\n    sizeId?: number;\n    sizeName: string;\n    unitPrice: number;\n    totalPrice: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDpProduct.html":{"url":"interfaces/IDpProduct.html","title":"interface - IDpProduct","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDpProduct\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interface/IDpProduct.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            dpCategory\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            dpCategoryId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            dpDescription\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            dpDiscountPercent\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            dpImages\n                                        \n                                \n                                \n                                        \n                                            dpPrice\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            dpProductAttributes\n                                        \n                                \n                                \n                                        \n                                            dpProductId\n                                        \n                                \n                                \n                                        \n                                            dpPurchasePrice\n                                        \n                                \n                                \n                                        \n                                            dpTitle\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dpCategory\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dpCategory:         IDpCategory\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IDpCategory\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dpCategoryId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dpCategoryId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dpDescription\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dpDescription:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dpDiscountPercent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dpDiscountPercent:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dpImages\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dpImages:         IDpImage[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IDpImage[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dpPrice\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dpPrice:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dpProductAttributes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dpProductAttributes:     IDpProductAttribute[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IDpProductAttribute[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dpProductId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dpProductId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dpPurchasePrice\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dpPurchasePrice:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dpTitle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dpTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IDpProductAttribute } from \"./IDpProductAttribute\";\nimport { IDpCategory } from \"./IDpCategory\";\nimport { IDpImage } from \"./IDpImage\";\n\n// DpProduct.ts\n\nexport interface IDpProduct {\n    dpProductId: number;\n    dpPrice: number;\n    dpTitle: string;\n    dpDiscountPercent?: number;\n    dpDescription?: string;\n    dpCategoryId?: number;\n    dpPurchasePrice: number;\n    dpCategory?: IDpCategory;\n    dpImages?: IDpImage[];\n    dpProductAttributes?: IDpProductAttribute[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDpProductAttribute.html":{"url":"interfaces/IDpProductAttribute.html","title":"interface - IDpProductAttribute","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDpProductAttribute\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interface/IDpProductAttribute.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            dpAttributesId\n                                        \n                                \n                                \n                                        \n                                            dpCount\n                                        \n                                \n                                \n                                        \n                                            dpProduct\n                                        \n                                \n                                \n                                        \n                                            dpProductId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            dpSize\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            dpSizeNavigation\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dpAttributesId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dpAttributesId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dpCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dpCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dpProduct\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dpProduct:         IDpProduct\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IDpProduct\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dpProductId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dpProductId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dpSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dpSize:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dpSizeNavigation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dpSizeNavigation:         IDpSize\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IDpSize\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IDpSize } from \"./IDpSize\";\nimport { IDpProduct } from \"./IDpProduct\";\n\n// DpProductAttribute.ts\n\nexport interface IDpProductAttribute {\n    dpAttributesId: number;\n    dpProductId: number;\n    dpCount: number;\n    dpSize?: number;\n    dpProduct: IDpProduct;\n    dpSizeNavigation?: IDpSize;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDpSize.html":{"url":"interfaces/IDpSize.html","title":"interface - IDpSize","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDpSize\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interface/IDpSize.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            dpCategories\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            dpProductAttributes\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                                \n                                        \n                                            sizeId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dpCategories\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dpCategories:         IDpCategory[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IDpCategory[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dpProductAttributes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dpProductAttributes:     IDpProductAttribute[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IDpProductAttribute[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sizeId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sizeId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IDpCategory } from \"./IDpCategory\";\nimport { IDpProductAttribute } from \"./IDpProductAttribute\";\n\n// DpSize.ts\n\nexport interface IDpSize {\n    sizeId: number;\n    size: string;\n    dpProductAttributes?: IDpProductAttribute[];\n    dpCategories?: IDpCategory[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDpUser.html":{"url":"interfaces/IDpUser.html","title":"interface - IDpUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDpUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interface/IDpUser.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            dpEmail\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            dpFullName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            dpOrders\n                                        \n                                \n                                \n                                        \n                                            dpPassword\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            dpPhoneNumber\n                                        \n                                \n                                \n                                        \n                                            dpRegistrationDate\n                                        \n                                \n                                \n                                        \n                                            dpUserId\n                                        \n                                \n                                \n                                        \n                                            dpUsername\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dpEmail\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dpEmail:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dpFullName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dpFullName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dpOrders\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dpOrders:         IDpOrder[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IDpOrder[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dpPassword\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dpPassword:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dpPhoneNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dpPhoneNumber:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dpRegistrationDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dpRegistrationDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dpUserId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dpUserId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dpUsername\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dpUsername:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IDpOrder } from \"./IDpOrder\";\n\n// DpUser.ts\n\nexport interface IDpUser {\n    dpUserId: number;\n    dpUsername: string;\n    dpPassword: string;\n    dpEmail?: string;\n    dpFullName?: string;\n    dpRegistrationDate: Date;\n    dpPhoneNumber?: string;\n    dpOrders?: IDpOrder[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDpUserProj.html":{"url":"interfaces/IDpUserProj.html","title":"interface - IDpUserProj","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDpUserProj\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interface/IDpUserProj.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            achievements\n                                        \n                                \n                                \n                                        \n                                            dpUserProjId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            login\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        achievements\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        achievements:         IAchievement[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IAchievement[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dpUserProjId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dpUserProjId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        login\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        login:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IAchievement } from \"./IAchievement\";\n\nexport interface IDpUserProj {\n    dpUserProjId: number;\n    email?: string;\n    password: string;\n    login: string;\n    achievements?: IAchievement[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRemoveFromCartRequest.html":{"url":"interfaces/IRemoveFromCartRequest.html","title":"interface - IRemoveFromCartRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IRemoveFromCartRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interface/IRemoveFromCartRequest.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            productId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sizeId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        productId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        productId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sizeId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sizeId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IRemoveFromCartRequest {\n    productId: number;\n    sizeId?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUpdateCartRequest.html":{"url":"interfaces/IUpdateCartRequest.html","title":"interface - IUpdateCartRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUpdateCartRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interface/IUpdateCartRequest.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            productId\n                                        \n                                \n                                \n                                        \n                                            quantity\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sizeId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        productId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        productId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        quantity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        quantity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sizeId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sizeId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IUpdateCartRequest {\n    productId: number;\n    quantity: number;\n    sizeId?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUpdateDpImageRequest.html":{"url":"interfaces/IUpdateDpImageRequest.html","title":"interface - IUpdateDpImageRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUpdateDpImageRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interface/IUpdateDpImageRequest.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            dpImageTitle\n                                        \n                                \n                                \n                                        \n                                            dpProductId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            file\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dpImageTitle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dpImageTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dpProductId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dpProductId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        file\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        file:     File\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     File\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IUpdateDpImageRequest {\n    dpProductId: number;\n    dpImageTitle: string;\n    file?: File;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUserHasAchievement.html":{"url":"interfaces/IUserHasAchievement.html","title":"interface - IUserHasAchievement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUserHasAchievement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interface/IUserHasAchievement.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            achievement\n                                        \n                                \n                                \n                                        \n                                            achievementId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            dpUserProj\n                                        \n                                \n                                \n                                        \n                                            dpUserProjId\n                                        \n                                \n                                \n                                        \n                                            isObtained\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        achievement\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        achievement:         IAchievement\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IAchievement\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        achievementId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        achievementId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dpUserProj\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dpUserProj:         IDpUserProj\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IDpUserProj\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dpUserProjId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dpUserProjId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isObtained\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isObtained:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IAchievement } from './IAchievement';\nimport { IDpUserProj } from \"./IDpUserProj\";\n\n\nexport interface IUserHasAchievement {\n  dpUserProjId: number; // Внешний ключ на IDpUserProj\n  achievementId: number; // Внешний ключ на IAchievement\n  isObtained: boolean; // Флаг, указывающий, получено ли достижение\n  dpUserProj?: IDpUserProj; // Навигационное свойство к IDpUserProj\n  achievement?: IAchievement; // Навигационное свойство к IAchievement\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IconTrashComponent.html":{"url":"components/IconTrashComponent.html","title":"component - IconTrashComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IconTrashComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/icon-trash/icon-trash.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-icon-trash\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                            TuiIcon\n                            TuiIconPipe\n                \n            \n\n            \n                styleUrls\n                ./icon-trash.component.css,../../../styles/root.css\n            \n\n\n\n            \n                templateUrl\n                ./icon-trash.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                showNotification\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                item\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                responseAlert\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alerts: TuiAlertService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/components/icon-trash/icon-trash.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        alerts\n                                                  \n                                                        \n                                                                    TuiAlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        item\n                    \n                \n                \n                    \n                        Type :         ICartItem\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/icon-trash/icon-trash.component.ts:19\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        responseAlert\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/data/components/icon-trash/icon-trash.component.ts:22\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        showNotification\n                        \n                    \n                \n            \n            \n                \n                        \n                    showNotification()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/icon-trash/icon-trash.component.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output, } from '@angular/core';\nimport { TuiAlertService, TuiIcon, TuiIconPipe } from '@taiga-ui/core';\nimport { switchMap, takeUntil } from 'rxjs';\nimport { Router,  } from '@angular/router';\nimport { PolymorpheusComponent } from '@taiga-ui/polymorpheus';\nimport { AlertDeleteComponent } from '../alert-delete/alert-delete.component';\nimport { CommonModule } from '@angular/common';\nimport { ICartItem } from '../../../interface/ICartItem';\n\n@Component({\n  selector: 'app-icon-trash',\n  imports: [ CommonModule,\n    TuiIcon, TuiIconPipe,],\n  templateUrl: './icon-trash.component.html',\n  styleUrls: ['./icon-trash.component.css', \n    '../../../styles/root.css',],\n})\nexport class IconTrashComponent {\n  @Input() item!: ICartItem;\n  \n\n  @Output() responseAlert = new EventEmitter();\n  constructor(\n    private alerts: TuiAlertService,\n    private router: Router,\n  ) { }\n\n  protected showNotification(): void {\n    const notification = this.alerts\n      .open(new PolymorpheusComponent(AlertDeleteComponent), {\n        label: 'Вы уверены, что хотите удалить?',\n        appearance: 'negative',\n        autoClose: 0,\n      })\n      .pipe(\n        switchMap((response) => {\n          if (response) {\n            this.responseAlert.emit(true);\n            console.log(`Удаление товара: ${this.item.productId}`);\n            return this.alerts.open(`Товар \"${this.item.productId}\" удален.`, { label: 'Успех' });\n          } else {\n            return this.alerts.open(`Удаление товара \"${this.item.productId}\" отменено.`, { label: 'Информация' });\n          }\n        }),\n        takeUntil(this.router.events),\n      );\n    notification.subscribe();\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./icon-trash.component.css\n                \n                \n                \n                    ../../../styles/root.css\n                \n                @import 'variables.css';\n@import 'buttons.css';\n@import 'cards.css';\n@import 'navigation.css';\n@import 'header.css';\n@import 'carousel.css';\n@import 'icons.css';\n@import 'layout.css';\n@import 'tables.css';\n@import 'typography.css';\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AchievmentsPageForUserComponent', 'selector': 'app-achievments-page-for-user'},{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'ButtonComponent', 'selector': 'storybook-button'},{'name': 'CardItemComponent', 'selector': 'app-card-item'},{'name': 'CarouselImgComponent', 'selector': 'app-carousel-img'},{'name': 'DialogCategoryComponent', 'selector': 'app-dialog-category'},{'name': 'DialogImageComponent', 'selector': 'app-dialog-image'},{'name': 'DialogProductComponent', 'selector': 'app-dialog-product'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'storybook-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginProjComponent', 'selector': 'app-login-proj'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PageCartComponent', 'selector': 'app-page-cart'},{'name': 'PageCatalogItemComponent', 'selector': 'app-page-catalog-item'},{'name': 'PageComponent', 'selector': 'storybook-page'},{'name': 'PageItemFromCatalogComponent', 'selector': 'app-page-item-from-catalog'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RegisterProjComponent', 'selector': 'app-register-proj'},{'name': 'ThemeToggleComponent', 'selector': 'app-theme-toggle'},{'name': 'UserPageComponent', 'selector': 'app-user-page'},{'name': 'UserPageProjComponent', 'selector': 'app-user-page-proj'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IconTrashComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ImagesRepositoryService.html":{"url":"injectables/ImagesRepositoryService.html","title":"injectable - ImagesRepositoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ImagesRepositoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/repositories/images-repository.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                imagesDataCache\n                            \n                            \n                                    Private\n                                imagesListCache$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createDpImage\n                            \n                            \n                                deleteDpImage\n                            \n                            \n                                getAllDpImages\n                            \n                            \n                                getAllDpImagesWithData\n                            \n                            \n                                getDpImageById\n                            \n                            \n                                getDpImageData\n                            \n                            \n                                getDpImagesByProductId\n                            \n                            \n                                updateDpImage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dpImagesService: DpImagesService)\n                    \n                \n                        \n                            \n                                Defined in src/app/repositories/images-repository.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dpImagesService\n                                                  \n                                                        \n                                                                        DpImagesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createDpImage\n                        \n                    \n                \n            \n            \n                \ncreateDpImage(request: ICreateDpImageRequest)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/images-repository.service.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                            ICreateDpImageRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteDpImage\n                        \n                    \n                \n            \n            \n                \ndeleteDpImage(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/images-repository.service.ts:89\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllDpImages\n                        \n                    \n                \n            \n            \n                \ngetAllDpImages()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/images-repository.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllDpImagesWithData\n                        \n                    \n                \n            \n            \n                \ngetAllDpImagesWithData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/images-repository.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDpImageById\n                        \n                    \n                \n            \n            \n                \ngetDpImageById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/images-repository.service.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDpImageData\n                        \n                    \n                \n            \n            \n                \ngetDpImageData(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/images-repository.service.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDpImagesByProductId\n                        \n                    \n                \n            \n            \n                \ngetDpImagesByProductId(productId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/images-repository.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                productId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateDpImage\n                        \n                    \n                \n            \n            \n                \nupdateDpImage(id: number, request: IUpdateDpImageRequest)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/images-repository.service.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                            IUpdateDpImageRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        imagesDataCache\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map>\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/repositories/images-repository.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        imagesListCache$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/repositories/images-repository.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, shareReplay, tap, map, switchMap, forkJoin, of } from 'rxjs';\nimport { ICreateDpImageRequest } from '../interface/ICreateDpImageRequest';\nimport { IDpImage } from '../interface/IDpImage';\nimport { IUpdateDpImageRequest } from '../interface/IUpdateDpImageRequest';\nimport { DpImagesService } from '../services/dp-images.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImagesRepositoryService {\n  private imagesListCache$: Observable | null = null;\n  private imagesDataCache: Map> = new Map();\n\n  constructor(private dpImagesService: DpImagesService) {}\n\n getAllDpImages(): Observable {\n    if (!this.imagesListCache$) {\n      this.imagesListCache$ = this.dpImagesService.getAllDpImages().pipe(\n        shareReplay(1)\n      );\n    }\n    return this.imagesListCache$;\n  }\n\ngetAllDpImagesWithData(): Observable {\n    return this.getAllDpImages().pipe(\n      switchMap((images: IDpImage[]) => {\n        if (!images.length) {\n          return of([] as IDpImage[]);\n        }\n        const requests: Observable[] = images.map(image =>\n          this.getDpImageData(image.dpImagesId).pipe(\n            map(blob => ({ image, blob }))\n          )\n        );\n        return forkJoin(requests).pipe(\n          map((results: { image: IDpImage; blob: Blob }[]) =>\n            results.map(({ image }) => ({\n              ...image,\n              blob: undefined as Blob | undefined // Явно указываем тип\n            } as IDpImage)) // Приводим к IDpImage\n          )\n        );\n      })\n    );\n  }\n\n  getDpImagesByProductId(productId: number): Observable {\n    return this.getAllDpImages().pipe(\n      map(images => images.filter(img => img.dpProductId === productId))\n    );\n  }\n\n  getDpImageById(id: number): Observable {\n    return this.dpImagesService.getDpImageById(id);\n  }\n\n  getDpImageData(id: number): Observable {\n    const cached = this.imagesDataCache.get(id);\n    if (cached) {\n      return cached;\n    }\n    const image$ = this.dpImagesService.getDpImageData(id).pipe(\n      shareReplay(1)\n    );\n    this.imagesDataCache.set(id, image$);\n    return image$;\n  }\n\n  createDpImage(request: ICreateDpImageRequest): Observable {\n    return this.dpImagesService.createDpImage(request).pipe(\n      tap(() => {\n        this.imagesListCache$ = null;\n        this.imagesDataCache.clear();\n      })\n    );\n  }\n\n  updateDpImage(id: number, request: IUpdateDpImageRequest): Observable {\n    return this.dpImagesService.updateDpImage(id, request).pipe(\n      tap(() => {\n        this.imagesListCache$ = null;\n        this.imagesDataCache.delete(id);\n      })\n    );\n  }\n\n  deleteDpImage(id: number): Observable {\n    return this.dpImagesService.deleteDpImage(id).pipe(\n      tap(() => {\n        this.imagesListCache$ = null;\n        this.imagesDataCache.delete(id);\n      })\n    );\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoadingComponent.html":{"url":"components/LoadingComponent.html","title":"component - LoadingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoadingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/loading/loading.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-loading\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./loading.component.html\n            \n\n\n\n            \n                styleUrl\n                ./loading.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                path\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"loading.gif\"\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/loading/loading.component.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-loading',\n  imports: [],\n  templateUrl: './loading.component.html',\n  styleUrl: './loading.component.css'\n})\nexport class LoadingComponent {\n  path: string = \"loading.gif\";\n}\n\n    \n\n    \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AchievmentsPageForUserComponent', 'selector': 'app-achievments-page-for-user'},{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'ButtonComponent', 'selector': 'storybook-button'},{'name': 'CardItemComponent', 'selector': 'app-card-item'},{'name': 'CarouselImgComponent', 'selector': 'app-carousel-img'},{'name': 'DialogCategoryComponent', 'selector': 'app-dialog-category'},{'name': 'DialogImageComponent', 'selector': 'app-dialog-image'},{'name': 'DialogProductComponent', 'selector': 'app-dialog-product'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'storybook-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginProjComponent', 'selector': 'app-login-proj'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PageCartComponent', 'selector': 'app-page-cart'},{'name': 'PageCatalogItemComponent', 'selector': 'app-page-catalog-item'},{'name': 'PageComponent', 'selector': 'storybook-page'},{'name': 'PageItemFromCatalogComponent', 'selector': 'app-page-item-from-catalog'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RegisterProjComponent', 'selector': 'app-register-proj'},{'name': 'ThemeToggleComponent', 'selector': 'app-theme-toggle'},{'name': 'UserPageComponent', 'selector': 'app-user-page'},{'name': 'UserPageProjComponent', 'selector': 'app-user-page-proj'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoadingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/login/login.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            TuiAppearance\n                            TuiButton\n                                TuiCardLarge\n                            TuiError\n                            TuiFieldErrorPipe\n                            TuiForm\n                            TuiHeader\n                            TuiNotification\n                            TuiTextfield\n                            TuiTitle\n                \n            \n\n            \n                styleUrls\n                ./login.component.css,../../../styles/root.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                navigateToRegister\n                            \n                            \n                                onLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authRepository: AuthRepositoryService, userAchievementsRepository: UserAchievementsRepositoryService, userAchievementsService: UserAchievementsService, router: Router, authService: AuthService, alertService: TuiAlertService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/components/login/login.component.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authRepository\n                                                  \n                                                        \n                                                                        AuthRepositoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userAchievementsRepository\n                                                  \n                                                        \n                                                                        UserAchievementsRepositoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userAchievementsService\n                                                  \n                                                        \n                                                                        UserAchievementsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertService\n                                                  \n                                                        \n                                                                    TuiAlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        navigateToRegister\n                        \n                    \n                \n            \n            \n                \nnavigateToRegister()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/login/login.component.ts:105\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onLogin\n                        \n                    \n                \n            \n            \n                \nonLogin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/login/login.component.ts:53\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    username: new FormControl('', [Validators.required, Validators.minLength(3)]),\n    password: new FormControl('', [Validators.required, Validators.minLength(6)]),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/login/login.component.ts:38\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, CUSTOM_ELEMENTS_SCHEMA, inject, Inject } from '@angular/core';\nimport { AuthRepositoryService } from '../../../repositories/auth-repository.service';\nimport { IDpUser } from '../../../interface/IDpUser';\nimport { CommonModule } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { FormControl, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { TuiAppearance, TuiButton, TuiError, TuiNotification, TuiTextfield, TuiTitle } from '@taiga-ui/core';\nimport { TuiFieldErrorPipe } from '@taiga-ui/kit';\nimport { TuiCardLarge, TuiForm, TuiHeader } from '@taiga-ui/layout';\nimport { AuthService } from '../../../services/auth.service';\nimport { TuiAlertService } from '@taiga-ui/core';\nimport { ConfigService } from '../../../services/config.service';\nimport { UserAchievementsRepositoryService } from '../../../repositories/user-achievements-repository.service';\nimport { UserAchievementsService } from '../../../services/user-achievements.service';\n\n@Component({\n  selector: 'app-login',\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    TuiAppearance,\n    TuiButton,\n    TuiCardLarge,\n    TuiError,\n    TuiFieldErrorPipe,\n    TuiForm,\n    TuiHeader,\n    TuiNotification,\n    TuiTextfield,\n    TuiTitle,\n  ],\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css', '../../../styles/root.css'],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class LoginComponent {\n  protected readonly form = new FormGroup({\n    username: new FormControl('', [Validators.required, Validators.minLength(3)]),\n    password: new FormControl('', [Validators.required, Validators.minLength(6)]),\n  });\n\n  constructor(\n    private authRepository: AuthRepositoryService,\n    private userAchievementsRepository: UserAchievementsRepositoryService,\n    private userAchievementsService: UserAchievementsService = inject(UserAchievementsService),\n    private router: Router,\n    private authService: AuthService,\n    @Inject(TuiAlertService) private readonly alertService: TuiAlertService,\n    private configService: ConfigService\n  ) { }\n\n  onLogin() {\n    if (this.form.valid) {\n      const user: IDpUser = {\n        dpUserId: 0,\n        dpUsername: this.form.value.username || '',\n        dpPassword: this.form.value.password || '',\n        dpRegistrationDate: new Date(),\n        dpPhoneNumber: '0000000000'\n      };\n      // Проверка: если включён режим \"всегда ошибка\" — только негативный тест-кейс\n      if (this.userAchievementsService.getAlwaysFailMode()) {\n        const userProjId = parseInt(localStorage.getItem('userProjId') || '0', 10);\n        this.userAchievementsRepository\n          .handleAchievement(userProjId, this.configService.achievementIds.loginFailed, 'тест-кейс неудачного входа разблокировано!')\n          .subscribe();\n        this.alertService.open('Тест-кейс: ошибка входа (режим всегда ошибка включён)', { appearance: 'error' }).subscribe();\n        return;\n      }\n      \n      this.authRepository.login(user).subscribe({\n        next: (response) => {\n          if (response && response.token) {\n            this.alertService.open('Успешный вход!', { appearance: 'success' }).subscribe();\n            localStorage.setItem('token', response.token);\n\n            const userProjId = parseInt(localStorage.getItem('userProjId') || '0', 10);\n            this.userAchievementsRepository\n              .handleAchievement(userProjId, this.configService.achievementIds.loginSuccess, 'тест-кейс входа разблокировано!')\n              .subscribe({\n                complete: () => this.router.navigate(['/'])\n              });\n          }\n        },\n        error: (error) => {\n          const userProjId = parseInt(localStorage.getItem('userProjId') || '0', 10);\n          this.userAchievementsRepository\n            .handleAchievement(userProjId, this.configService.achievementIds.loginFailed, 'тест-кейс неудачного входа разблокировано!')\n            .subscribe();\n\n          let errorMessage = 'Ошибка входа: неверное имя пользователя или пароль';\n          if (error.status === this.configService.httpStatusCodes.unauthorized) {\n            errorMessage = 'Ошибка: неверные учетные данные';\n          } else if (error.status === this.configService.httpStatusCodes.serverError) {\n            errorMessage = 'Ошибка сервера, попробуйте позже';\n          }\n\n          this.alertService.open(errorMessage, { appearance: 'error' }).subscribe();\n        }\n      });\n    }\n  }\n\n  navigateToRegister() {\n    this.router.navigate(['/register']);\n  }\n}\n    \n\n    \n        \n    \n        \n            Форма авторизации\n        \n\n        \n            Логин пользователя\n            \n        \n        \n        \n            Пароль\n            \n        \n        \n        \n            \n                Регистрация\n            \n            Войти\n        \n    \n\n    \n\n    \n                \n                    ./login.component.css\n                \n                .form-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 100vh;\n  background: var(--tui-base-01);\n  padding: 1rem;\n  box-sizing: border-box;\n}\n\nform[tuiCardLarge] {\n  width: 100%;\n  max-width: 32rem;\n  box-shadow: 0 0.25rem 1rem var(--tui-shadow);\n  border-radius: 0.5rem;\n}\n\n@media (max-width: 47.9375rem) {\n  .form-container {\n    padding: 0.5rem;\n  }\n\n  form[tuiCardLarge] {\n    max-width: 90%;\n  }\n}\n\nbody.dark-theme .form-container {\n  background: var(--tui-base-02-dark);\n}\n\nbody.dark-theme form[tuiCardLarge] {\n  box-shadow: 0 0.25rem 1rem var(--tui-shadow-dark);\n}\n                \n                    ../../../styles/root.css\n                \n                @import 'variables.css';\n@import 'buttons.css';\n@import 'cards.css';\n@import 'navigation.css';\n@import 'header.css';\n@import 'carousel.css';\n@import 'icons.css';\n@import 'layout.css';\n@import 'tables.css';\n@import 'typography.css';\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Форма авторизации                            Логин пользователя                                                Пароль                                                                Регистрация                        Войти            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AchievmentsPageForUserComponent', 'selector': 'app-achievments-page-for-user'},{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'ButtonComponent', 'selector': 'storybook-button'},{'name': 'CardItemComponent', 'selector': 'app-card-item'},{'name': 'CarouselImgComponent', 'selector': 'app-carousel-img'},{'name': 'DialogCategoryComponent', 'selector': 'app-dialog-category'},{'name': 'DialogImageComponent', 'selector': 'app-dialog-image'},{'name': 'DialogProductComponent', 'selector': 'app-dialog-product'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'storybook-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginProjComponent', 'selector': 'app-login-proj'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PageCartComponent', 'selector': 'app-page-cart'},{'name': 'PageCatalogItemComponent', 'selector': 'app-page-catalog-item'},{'name': 'PageComponent', 'selector': 'storybook-page'},{'name': 'PageItemFromCatalogComponent', 'selector': 'app-page-item-from-catalog'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RegisterProjComponent', 'selector': 'app-register-proj'},{'name': 'ThemeToggleComponent', 'selector': 'app-theme-toggle'},{'name': 'UserPageComponent', 'selector': 'app-user-page'},{'name': 'UserPageProjComponent', 'selector': 'app-user-page-proj'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginProjComponent.html":{"url":"components/LoginProjComponent.html","title":"component - LoginProjComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginProjComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/login-proj/login-proj.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login-proj\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            TuiAppearance\n                            TuiButton\n                                TuiCardLarge\n                            TuiError\n                            TuiFieldErrorPipe\n                            TuiForm\n                            TuiHeader\n                            TuiNotification\n                            TuiTextfield\n                            TuiTitle\n                \n            \n\n            \n                styleUrls\n                ./login-proj.component.css,../../../styles/root.css\n            \n\n\n\n            \n                templateUrl\n                ./login-proj.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                navigateToRegister\n                            \n                            \n                                onLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authProjRepository: AuthProjRepositoryService, router: Router, alertService: TuiAlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/components/login-proj/login-proj.component.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authProjRepository\n                                                  \n                                                        \n                                                                        AuthProjRepositoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertService\n                                                  \n                                                        \n                                                                    TuiAlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        navigateToRegister\n                        \n                    \n                \n            \n            \n                \nnavigateToRegister()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/login-proj/login-proj.component.ts:69\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onLogin\n                        \n                    \n                \n            \n            \n                \nonLogin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/login-proj/login-proj.component.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    login: new FormControl('', [Validators.required]),\n    password: new FormControl('', [Validators.required]),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/login-proj/login-proj.component.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, CUSTOM_ELEMENTS_SCHEMA, Inject } from '@angular/core';\nimport { AuthProjService } from '../../../services/auth-proj.service';\nimport { IDpUserProj } from '../../../interface/IDpUserProj';\nimport { CommonModule } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { FormControl, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { TuiAppearance, TuiButton, TuiError, TuiNotification, TuiTextfield, TuiTitle } from '@taiga-ui/core';\nimport { TuiFieldErrorPipe } from '@taiga-ui/kit';\nimport { TuiCardLarge, TuiForm, TuiHeader } from '@taiga-ui/layout';\nimport { TuiAlertService } from '@taiga-ui/core';\nimport { AuthProjRepositoryService } from '../../../repositories/auth-proj-repository.service';\n\n@Component({\n  selector: 'app-login-proj',\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    TuiAppearance,\n    TuiButton,\n    TuiCardLarge,\n    TuiError,\n    TuiFieldErrorPipe,\n    TuiForm,\n    TuiHeader,\n    TuiNotification,\n    TuiTextfield,\n    TuiTitle,\n  ],\n  templateUrl: './login-proj.component.html',\n  styleUrls: ['./login-proj.component.css', '../../../styles/root.css'],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class LoginProjComponent {\n  protected readonly form = new FormGroup({\n    login: new FormControl('', [Validators.required]),\n    password: new FormControl('', [Validators.required]),\n  });\n\n  constructor(\n    private authProjRepository: AuthProjRepositoryService,\n    private router: Router,\n    @Inject(TuiAlertService) private readonly alertService: TuiAlertService\n  ) { }\n\n  onLogin() {\n    if (this.form.valid) {\n      const userProj: IDpUserProj = {\n        dpUserProjId: 0,\n        login: this.form.value.login || '',\n        password: this.form.value.password || '',\n      };\n\n      this.authProjRepository.login(userProj).subscribe({\n        next: (response) => {\n          console.log('Login successful:', response);\n          if (response && response.token) {\n            this.alertService.open('Успешный вход!', { appearance: 'success' }).subscribe();\n            this.router.navigate(['/']);\n          }\n        },\n        error: (error) => {\n          console.error('Login failed:', error);\n          this.alertService.open('Ошибка входа: неверный логин или пароль', { appearance: 'error' }).subscribe();\n        }\n      });\n    }\n  }\n\n  navigateToRegister() {\n    this.router.navigate(['/register-proj']);\n  }\n}\n    \n\n    \n        \n    \n        \n            Форма авторизации для пользователя с тестами\n        \n\n        \n            Логин\n            \n        \n        \n        \n            Пароль\n            \n        \n        \n        \n            \n                Регистрация\n            \n            Войти\n        \n    \n\n    \n\n    \n                \n                    ./login-proj.component.css\n                \n                .form-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 100vh;\n  background: var(--tui-base-01);\n  padding: 1rem;\n  box-sizing: border-box;\n}\n\nform[tuiCardLarge] {\n  width: 100%;\n  max-width: 32rem;\n  box-shadow: 0 0.25rem 1rem var(--tui-shadow);\n  border-radius: 0.5rem;\n}\n\n@media (max-width: 47.9375rem) {\n  .form-container {\n    padding: 0.5rem;\n  }\n\n  form[tuiCardLarge] {\n    max-width: 90%;\n  }\n}\n\nbody.dark-theme .form-container {\n  background: var(--tui-base-02-dark);\n}\n\nbody.dark-theme form[tuiCardLarge] {\n  box-shadow: 0 0.25rem 1rem var(--tui-shadow-dark);\n}\n                \n                    ../../../styles/root.css\n                \n                @import 'variables.css';\n@import 'buttons.css';\n@import 'cards.css';\n@import 'navigation.css';\n@import 'header.css';\n@import 'carousel.css';\n@import 'icons.css';\n@import 'layout.css';\n@import 'tables.css';\n@import 'typography.css';\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Форма авторизации для пользователя с тестами                            Логин                                                Пароль                                                                Регистрация                        Войти            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AchievmentsPageForUserComponent', 'selector': 'app-achievments-page-for-user'},{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'ButtonComponent', 'selector': 'storybook-button'},{'name': 'CardItemComponent', 'selector': 'app-card-item'},{'name': 'CarouselImgComponent', 'selector': 'app-carousel-img'},{'name': 'DialogCategoryComponent', 'selector': 'app-dialog-category'},{'name': 'DialogImageComponent', 'selector': 'app-dialog-image'},{'name': 'DialogProductComponent', 'selector': 'app-dialog-product'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'storybook-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginProjComponent', 'selector': 'app-login-proj'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PageCartComponent', 'selector': 'app-page-cart'},{'name': 'PageCatalogItemComponent', 'selector': 'app-page-catalog-item'},{'name': 'PageComponent', 'selector': 'storybook-page'},{'name': 'PageItemFromCatalogComponent', 'selector': 'app-page-item-from-catalog'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RegisterProjComponent', 'selector': 'app-register-proj'},{'name': 'ThemeToggleComponent', 'selector': 'app-theme-toggle'},{'name': 'UserPageComponent', 'selector': 'app-user-page'},{'name': 'UserPageProjComponent', 'selector': 'app-user-page-proj'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginProjComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/navbar/navbar.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            TuiLink\n                            TuiIcon\n                            TuiButton\n                                ThemeToggleComponent\n                                BackButtonComponent\n                            TuiAvatar\n                            AsyncPipe\n                            TuiIconPipe\n                            NgIf\n                \n            \n\n            \n                styleUrls\n                ./navbar.component.css,../../../styles/root.css\n            \n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                alwaysFailMode\n                            \n                            \n                                isAuthenticated\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkAuthStatus\n                            \n                            \n                                logout\n                            \n                            \n                                navigateTo\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toggleAlwaysFail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authService: AuthService, userAchievementsService: UserAchievementsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/components/navbar/navbar.component.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userAchievementsService\n                                                  \n                                                        \n                                                                        UserAchievementsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkAuthStatus\n                        \n                    \n                \n            \n            \n                \ncheckAuthStatus()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/navbar/navbar.component.ts:62\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/navbar/navbar.component.ts:57\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        navigateTo\n                        \n                    \n                \n            \n            \n                \nnavigateTo(path: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/navbar/navbar.component.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                path\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/navbar/navbar.component.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleAlwaysFail\n                        \n                    \n                \n            \n            \n                \ntoggleAlwaysFail()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/navbar/navbar.component.ts:49\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        alwaysFailMode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/navbar/navbar.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAuthenticated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/navbar/navbar.component.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, CUSTOM_ELEMENTS_SCHEMA, inject } from '@angular/core';\nimport { AsyncPipe, CommonModule, NgIf } from '@angular/common';\nimport { BackButtonComponent } from '../back-button/back-button.component';\nimport { ThemeToggleComponent } from '../theme-toggle/theme-toggle.component';\nimport { TuiLink, TuiIcon, TuiButton, TuiIconPipe } from '@taiga-ui/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../../services/auth.service';\nimport { TuiAvatar } from '@taiga-ui/kit';\nimport { UserAchievementsService } from '../../../services/user-achievements.service';\nimport { FormsModule } from '@angular/forms';\n\n@Component({\n  selector: 'app-navbar',\n  imports: [\n    CommonModule,\n    FormsModule,\n    TuiLink,\n    TuiIcon,\n    TuiButton,\n    ThemeToggleComponent,\n    BackButtonComponent,\n    TuiAvatar,\n    AsyncPipe,\n    TuiIconPipe,\n    NgIf\n  ],\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css', '../../../styles/root.css'],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class NavbarComponent {\n  isAuthenticated: boolean = false;\n  alwaysFailMode = false;\n\n  constructor(\n    private router: Router,\n    private authService: AuthService,\n    private userAchievementsService: UserAchievementsService = inject(UserAchievementsService)\n  ) {}\n\n  ngOnInit(): void {\n    this.authService.isAuthenticated$.subscribe(isAuthenticated => {\n      this.isAuthenticated = isAuthenticated;\n    });\n    this.checkAuthStatus();\n    this.alwaysFailMode = this.userAchievementsService.getAlwaysFailMode();\n  }\n\n    toggleAlwaysFail() {\n    this.userAchievementsService.setAlwaysFailMode(this.alwaysFailMode);\n  }\n\n  navigateTo(path: string): void {\n    this.router.navigate([path]);\n  }\n\n  logout(): void {\n    localStorage.removeItem('token');\n    this.authService.setAuthenticated(false);\n    this.router.navigate(['/']);\n  }\n  checkAuthStatus(): void {\n    const token = localStorage.getItem('token');\n    this.isAuthenticated = !!token;\n    this.authService.setAuthenticated(this.isAuthenticated);\n  }\n}\n    \n\n    \n        \n  \n    О приложении\n    Каталог\n    Перейти в корзину\n  \n  \n\n  \n  Всегда имитировать ошибку тест-кейсов\n\n    \n    Войти\n    Выйти\n  \n\n    \n\n    \n                \n                    ./navbar.component.css\n                \n                .user-avatar tui-svg,\n.user-avatar svg {\n    color: var(--avatar-color, #212529);\n    fill: var(--avatar-color, #212529);\n}\n[data-theme=\"dark\"] .user-avatar tui-svg,\n[data-theme=\"dark\"] .user-avatar svg {\n    color: #fff;\n    fill: #fff;\n}\nlabel.always-fail-label {\n    color: #fff;\n}\n\n[data-theme=\"dark\"] label.always-fail-label {\n    color: #fff;\n}\n                \n                    ../../../styles/root.css\n                \n                @import 'variables.css';\n@import 'buttons.css';\n@import 'cards.css';\n@import 'navigation.css';\n@import 'header.css';\n@import 'carousel.css';\n@import 'icons.css';\n@import 'layout.css';\n@import 'tables.css';\n@import 'typography.css';\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      О приложении    Каталог    Перейти в корзину        Всегда имитировать ошибку тест-кейсов        Войти    Выйти  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AchievmentsPageForUserComponent', 'selector': 'app-achievments-page-for-user'},{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'ButtonComponent', 'selector': 'storybook-button'},{'name': 'CardItemComponent', 'selector': 'app-card-item'},{'name': 'CarouselImgComponent', 'selector': 'app-carousel-img'},{'name': 'DialogCategoryComponent', 'selector': 'app-dialog-category'},{'name': 'DialogImageComponent', 'selector': 'app-dialog-image'},{'name': 'DialogProductComponent', 'selector': 'app-dialog-product'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'storybook-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginProjComponent', 'selector': 'app-login-proj'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PageCartComponent', 'selector': 'app-page-cart'},{'name': 'PageCatalogItemComponent', 'selector': 'app-page-catalog-item'},{'name': 'PageComponent', 'selector': 'storybook-page'},{'name': 'PageItemFromCatalogComponent', 'selector': 'app-page-item-from-catalog'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RegisterProjComponent', 'selector': 'app-register-proj'},{'name': 'ThemeToggleComponent', 'selector': 'app-theme-toggle'},{'name': 'UserPageComponent', 'selector': 'app-user-page'},{'name': 'UserPageProjComponent', 'selector': 'app-user-page-proj'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrderCompositionsRepositoryService.html":{"url":"injectables/OrderCompositionsRepositoryService.html","title":"injectable - OrderCompositionsRepositoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrderCompositionsRepositoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/repositories/order-compositions-repository.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createDpOrderComposition\n                            \n                            \n                                deleteDpOrderComposition\n                            \n                            \n                                getAllDpOrderCompositions\n                            \n                            \n                                getDpOrderCompositionById\n                            \n                            \n                                updateDpOrderComposition\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dpOrderCompositionsService: DpOrderCompositionsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/repositories/order-compositions-repository.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dpOrderCompositionsService\n                                                  \n                                                        \n                                                                        DpOrderCompositionsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createDpOrderComposition\n                        \n                    \n                \n            \n            \n                \ncreateDpOrderComposition(dpOrderComposition: IDpOrderComposition)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/order-compositions-repository.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dpOrderComposition\n                                            \n                                                            IDpOrderComposition\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteDpOrderComposition\n                        \n                    \n                \n            \n            \n                \ndeleteDpOrderComposition(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/order-compositions-repository.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllDpOrderCompositions\n                        \n                    \n                \n            \n            \n                \ngetAllDpOrderCompositions()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/order-compositions-repository.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDpOrderCompositionById\n                        \n                    \n                \n            \n            \n                \ngetDpOrderCompositionById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/order-compositions-repository.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateDpOrderComposition\n                        \n                    \n                \n            \n            \n                \nupdateDpOrderComposition(id: number, dpOrderComposition: IDpOrderComposition)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/order-compositions-repository.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dpOrderComposition\n                                            \n                                                            IDpOrderComposition\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { IDpOrderComposition } from '../interface/IDpOrderComposition';\nimport { DpOrderCompositionsService } from '../services/dp-order-compositions.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrderCompositionsRepositoryService {\n  constructor(private dpOrderCompositionsService: DpOrderCompositionsService) {}\n\n  getAllDpOrderCompositions(): Observable {\n    return this.dpOrderCompositionsService.getAllDpOrderCompositions();\n  }\n\n  getDpOrderCompositionById(id: number): Observable {\n    return this.dpOrderCompositionsService.getDpOrderCompositionById(id);\n  }\n\n  createDpOrderComposition(dpOrderComposition: IDpOrderComposition): Observable {\n    return this.dpOrderCompositionsService.createDpOrderComposition(dpOrderComposition);\n  }\n\n  updateDpOrderComposition(id: number, dpOrderComposition: IDpOrderComposition): Observable {\n    return this.dpOrderCompositionsService.updateDpOrderComposition(id, dpOrderComposition);\n  }\n\n  deleteDpOrderComposition(id: number): Observable {\n    return this.dpOrderCompositionsService.deleteDpOrderComposition(id);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrderRepositoryService.html":{"url":"injectables/OrderRepositoryService.html","title":"injectable - OrderRepositoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrderRepositoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/repositories/order-repository.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createDpOrder\n                            \n                            \n                                deleteDpOrder\n                            \n                            \n                                getAllDpOrders\n                            \n                            \n                                getDpOrderById\n                            \n                            \n                                updateDpOrder\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dpOrdersService: DpOrdersService)\n                    \n                \n                        \n                            \n                                Defined in src/app/repositories/order-repository.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dpOrdersService\n                                                  \n                                                        \n                                                                        DpOrdersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createDpOrder\n                        \n                    \n                \n            \n            \n                \ncreateDpOrder(dpOrder: IDpOrder)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/order-repository.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dpOrder\n                                            \n                                                            IDpOrder\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteDpOrder\n                        \n                    \n                \n            \n            \n                \ndeleteDpOrder(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/order-repository.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllDpOrders\n                        \n                    \n                \n            \n            \n                \ngetAllDpOrders()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/order-repository.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDpOrderById\n                        \n                    \n                \n            \n            \n                \ngetDpOrderById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/order-repository.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateDpOrder\n                        \n                    \n                \n            \n            \n                \nupdateDpOrder(id: number, dpOrder: IDpOrder)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/order-repository.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dpOrder\n                                            \n                                                            IDpOrder\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { IDpOrder } from '../interface/IDpOrder';\nimport { DpOrdersService } from '../services/dp-orders.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrderRepositoryService {\n  constructor(private dpOrdersService: DpOrdersService) {}\n\n  getAllDpOrders(): Observable {\n    return this.dpOrdersService.getAllDpOrders();\n  }\n\n  getDpOrderById(id: number): Observable {\n    return this.dpOrdersService.getDpOrderById(id);\n  }\n\n  createDpOrder(dpOrder: IDpOrder): Observable {\n    return this.dpOrdersService.createDpOrder(dpOrder);\n  }\n\n  updateDpOrder(id: number, dpOrder: IDpOrder): Observable {\n    return this.dpOrdersService.updateDpOrder(id, dpOrder);\n  }\n\n  deleteDpOrder(id: number): Observable {\n    return this.dpOrdersService.deleteDpOrder(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageCartComponent.html":{"url":"components/PageCartComponent.html","title":"component - PageCartComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PageCartComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/page/page-cart/page-cart.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-page-cart\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            AsyncPipe\n                            CurrencyPipe\n                            FormsModule\n                            NgForOf\n                            NgIf\n                            TuiButton\n                            TuiTable\n                            CommonModule\n                            TuiScrollbar\n                            TuiIcon\n                \n            \n\n            \n                styleUrls\n                ./page-cart.component.css,../../../styles/root.css\n            \n\n\n\n            \n                templateUrl\n                ./page-cart.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                cartItems\n                            \n                            \n                                    Protected\n                                    Readonly\n                                columns\n                            \n                            \n                                    Protected\n                                isLoading\n                            \n                            \n                                    Protected\n                                    Readonly\n                                options\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                    Protected\n                                    Readonly\n                                totalSorter\n                            \n                            \n                                    Private\n                                    Readonly\n                                userAchievementsService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkout\n                            \n                            \n                                decreaseQuantity\n                            \n                            \n                                    Protected\n                                getTotal\n                            \n                            \n                                    Protected\n                                getTotalAmount\n                            \n                            \n                                increaseQuantity\n                            \n                            \n                                    Private\n                                loadCartItems\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                onSortChange\n                            \n                            \n                                    Protected\n                                onValueChange\n                            \n                            \n                                removeFromCart\n                            \n                            \n                                    Protected\n                                trackByIndex\n                            \n                            \n                                    Private\n                                updateCartItemQuantity\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cartService: ShopCartRepositoryService, cdr: ChangeDetectorRef, router: Router, userAchievementsRepository: UserAchievementsRepositoryService, configService: ConfigService, alertService: TuiAlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/page/page-cart/page-cart.component.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cartService\n                                                  \n                                                        \n                                                                        ShopCartRepositoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userAchievementsRepository\n                                                  \n                                                        \n                                                                        UserAchievementsRepositoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertService\n                                                  \n                                                        \n                                                                    TuiAlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkout\n                        \n                    \n                \n            \n            \n                \ncheckout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/page/page-cart/page-cart.component.ts:142\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        decreaseQuantity\n                        \n                    \n                \n            \n            \n                \ndecreaseQuantity(item: CartItem)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/page/page-cart/page-cart.component.ts:100\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                item\n                                            \n                                                            CartItem\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        getTotal\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTotal(undefined: CartItem)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/page/page-cart/page-cart.component.ts:87\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            CartItem\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        getTotalAmount\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTotalAmount()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/page/page-cart/page-cart.component.ts:91\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        increaseQuantity\n                        \n                    \n                \n            \n            \n                \nincreaseQuantity(item: CartItem)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/page/page-cart/page-cart.component.ts:95\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                item\n                                            \n                                                            CartItem\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loadCartItems\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadCartItems()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/page/page-cart/page-cart.component.ts:63\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/page/page-cart/page-cart.component.ts:59\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        onSortChange\n                        \n                    \n                \n            \n            \n                \n                        \n                    onSortChange(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/page/page-cart/page-cart.component.ts:260\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        onValueChange\n                        \n                    \n                \n            \n            \n                \n                        \n                    onValueChange(value: CartItem, key: K, current: CartItem)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/page/page-cart/page-cart.component.ts:250\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    K\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            CartItem\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                key\n                                            \n                                                        K\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                current\n                                            \n                                                            CartItem\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeFromCart\n                        \n                    \n                \n            \n            \n                \nremoveFromCart(item: CartItem)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/page/page-cart/page-cart.component.ts:107\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                item\n                                            \n                                                            CartItem\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        trackByIndex\n                        \n                    \n                \n            \n            \n                \n                        \n                    trackByIndex(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/page/page-cart/page-cart.component.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        updateCartItemQuantity\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateCartItemQuantity(item: CartItem, newQuantity: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/page/page-cart/page-cart.component.ts:186\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                item\n                                            \n                                                            CartItem\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                newQuantity\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        cartItems\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CartItem[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/data/page/page-cart/page-cart.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        columns\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ['productTitle', 'price', 'quantity', 'totalPrice', 'actions'] as const\n                    \n                \n                    \n                        \n                                Defined in src/app/data/page/page-cart/page-cart.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/data/page/page-cart/page-cart.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Default value : { updateOn: 'blur' } as const\n                    \n                \n                    \n                        \n                                Defined in src/app/data/page/page-cart/page-cart.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Router\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data/page/page-cart/page-cart.component.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        totalSorter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TuiComparator\n\n                    \n                \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/data/page/page-cart/page-cart.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        userAchievementsService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UserAchievementsService)\n                    \n                \n                    \n                        \n                                Defined in src/app/data/page/page-cart/page-cart.component.ts:46\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AsyncPipe, CommonModule, CurrencyPipe, NgForOf, NgIf } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, CUSTOM_ELEMENTS_SCHEMA, inject, Inject, OnInit } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { TuiButton, TuiAppearance, TuiAlertService, TuiScrollbar, TuiIcon } from '@taiga-ui/core';\nimport { TuiTable, TuiComparator } from '@taiga-ui/addon-table';\nimport { TuiDay, tuiDefaultSort } from '@taiga-ui/cdk';\nimport { ICartItem } from '../../../interface/ICartItem';\nimport { ICartViewModel } from '../../../interface/ICartViewModel';\nimport { ChangeDetectorRef } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { IUpdateCartRequest } from '../../../interface/IUpdateCartRequest';\nimport { ShopCartRepositoryService } from '../../../repositories/shop-cart-repository.service';\nimport { UserAchievementsRepositoryService } from '../../../repositories/user-achievements-repository.service';\nimport { ConfigService } from '../../../services/config.service';\nimport { UserAchievementsService } from '../../../services/user-achievements.service';\n\ninterface CartItem extends ICartItem {\n  readonly date: TuiDay;\n}\n\n@Component({\n  selector: 'app-page-cart',\n  standalone: true,\n  imports: [\n    AsyncPipe,\n    CurrencyPipe,\n    FormsModule,\n    NgForOf,\n    NgIf,\n    TuiButton,\n    TuiTable,\n    CommonModule,\n    TuiScrollbar,\n    TuiIcon\n  ],\n  templateUrl: './page-cart.component.html',\n  styleUrls: ['./page-cart.component.css', '../../../styles/root.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n})\nexport class PageCartComponent implements OnInit {\n  protected readonly options = { updateOn: 'blur' } as const;\n  protected cartItems: CartItem[] = [];\n  protected readonly columns = ['productTitle', 'price', 'quantity', 'totalPrice', 'actions'] as const;\n  protected isLoading = false;\n  private readonly userAchievementsService = inject(UserAchievementsService);\n  protected readonly totalSorter: TuiComparator = (a, b) =>\n    tuiDefaultSort(a.price * a.quantity, b.price * b.quantity);\n\n  constructor(\n    private cartService: ShopCartRepositoryService,\n    private cdr: ChangeDetectorRef,\n    public router: Router,\n    private userAchievementsRepository: UserAchievementsRepositoryService,\n    private configService: ConfigService,\n    @Inject(TuiAlertService) private readonly alertService: TuiAlertService\n  ) { }\n\n  ngOnInit(): void {\n    this.loadCartItems();\n  }\n\n  private loadCartItems(): void {\n    this.cartService.getCart().subscribe({\n      next: (cartViewModel: ICartViewModel) => {\n        console.log(cartViewModel);\n        this.cartItems = cartViewModel.cartItems.map(item => ({\n          ...item,\n          date: TuiDay.currentLocal(),\n        }));\n        this.isLoading = false;\n        this.cdr.markForCheck();\n      },\n      error: (error) => {\n        console.error('Ошибка при загрузке корзины:', error);\n        this.alertService.open('Не удалось загрузить корзину. Попробуйте ещё раз!', { appearance: 'error' }).subscribe();\n        this.isLoading = false;\n        this.cdr.markForCheck();\n      }\n    });\n  }\n\n  protected trackByIndex(index: number): number {\n    return index;\n  }\n\n  protected getTotal({ price, quantity }: CartItem): number {\n    return price * quantity;\n  }\n\n  protected getTotalAmount(): number {\n    return this.cartItems.reduce((sum, item) => sum + this.getTotal(item), 0);\n  }\n\n  increaseQuantity(item: CartItem): void {\n    const newQuantity = item.quantity + 1;\n    this.updateCartItemQuantity(item, newQuantity);\n  }\n\n  decreaseQuantity(item: CartItem): void {\n    if (item.quantity > 1) {\n      const newQuantity = item.quantity - 1;\n      this.updateCartItemQuantity(item, newQuantity);\n    }\n  }\n\n  removeFromCart(item: CartItem): void {\n    const userProjId = parseInt(localStorage.getItem('userProjId') || '0', 10);\n    // Если включён режим \"всегда ошибка\" — только негативный тест-кейс\n    if (this.userAchievementsService.getAlwaysFailMode()) {\n      this.userAchievementsRepository\n        .handleAchievement(userProjId, this.configService.achievementIds.removeFromCartFailed, 'Тест-кейс: ошибка удаления товара из корзины!')\n        .subscribe();\n      this.alertService.open('Тест-кейс: не удалось удалить товар (режим всегда ошибка включён)', { appearance: 'error' }).subscribe();\n      return;\n    }\n    this.isLoading = true;\n    this.cartService.removeFromCart({ productId: item.productId, sizeId: item.sizeId }).subscribe({\n      next: () => {\n        this.cartItems = this.cartItems.filter(cartItem =>\n          !(cartItem.productId === item.productId && cartItem.sizeId === item.sizeId)\n        );\n        this.isLoading = false;\n        this.cdr.markForCheck();\n        this.userAchievementsRepository\n          .handleAchievement(userProjId, this.configService.achievementIds.removeFromCartSuccess, 'Товар успешно удалён из корзины!')\n          .subscribe();\n        this.alertService.open('Товар удалён из корзины', { appearance: 'success' }).subscribe();\n      },\n      error: (error) => {\n        console.error('Ошибка при удалении товара из корзины:', error);\n        this.isLoading = false;\n        this.cdr.markForCheck();\n        this.userAchievementsRepository\n          .handleAchievement(userProjId, this.configService.achievementIds.removeFromCartFailed, 'Ошибка удаления товара из корзины!')\n          .subscribe();\n        this.alertService.open('Не удалось удалить товар. Попробуйте ещё раз!', { appearance: 'error' }).subscribe();\n      }\n    });\n  }\n\n  checkout(): void {\n    const userProjId = parseInt(localStorage.getItem('userProjId') || '0', 10);\n\n    if (this.cartItems.length === 0) {\n      this.userAchievementsRepository\n        .handleAchievement(userProjId, this.configService.achievementIds.checkoutEmptyCart, 'Тест-кейс: Попытка оформления пустой корзины!')\n        .subscribe();\n      this.alertService.open('Корзина пуста, добавьте товары перед оформлением', { appearance: 'error' }).subscribe();\n      return;\n    }\n\n    // Если включён режим \"всегда ошибка\" — только негативный тест-кейс\n    if (this.userAchievementsService.getAlwaysFailMode()) {\n      this.userAchievementsRepository\n        .handleAchievement(userProjId, this.configService.achievementIds.checkoutFailed, 'Тест-кейс: ошибка оформления заказа!')\n        .subscribe();\n      this.alertService.open('Тест-кейс: не удалось оформить заказ (режим всегда ошибка включён)', { appearance: 'error' }).subscribe();\n      return;\n    }\n    this.isLoading = true;\n    this.cartService.checkout().subscribe({\n      next: (response) => {\n        this.userAchievementsRepository\n          .handleAchievement(userProjId, this.configService.achievementIds.checkoutSuccess, 'Заказ успешно оформлен!')\n          .subscribe();\n        this.alertService.open('Заказ успешно оформлен!', { appearance: 'success' }).subscribe();\n        this.cartService.clearCart();\n        this.cartItems = [];\n        this.isLoading = false;\n        this.cdr.markForCheck();\n        this.router.navigate(['/order-confirmation'], { state: { orderId: response.orderId } });\n      },\n      error: (error) => {\n        console.error('Ошибка при оформлении заказа:', error);\n        this.isLoading = false;\n        this.cdr.markForCheck();\n        this.userAchievementsRepository\n          .handleAchievement(userProjId, this.configService.achievementIds.checkoutFailed, 'Ошибка оформления заказа!')\n          .subscribe();\n        this.alertService.open('Не удалось оформить заказ. Попробуйте ещё раз!', { appearance: 'error' }).subscribe();\n      }\n    });\n  }\n\n  private updateCartItemQuantity(item: CartItem, newQuantity: number): void {\n    const userProjId = parseInt(localStorage.getItem('userProjId') || '0', 10);\n    \n    // Если включён режим \"всегда ошибка\" — только негативный тест-кейс\n    if (this.userAchievementsService.getAlwaysFailMode()) {\n      this.userAchievementsRepository\n        .handleAchievement(userProjId, this.configService.achievementIds.updateCartQuantityFailed, 'Тест-кейс: ошибка обновления количества товара!')\n        .subscribe();\n      this.alertService.open('Тест-кейс: не удалось обновить количество (режим всегда ошибка включён)', { appearance: 'error' }).subscribe();\n      return;\n    }\n    \n    const request: IUpdateCartRequest = {\n      productId: item.productId,\n      quantity: newQuantity,\n      sizeId: item.sizeId\n    };\n\n    this.cartItems = this.cartItems.map(cartItem =>\n      cartItem.productId === item.productId && cartItem.sizeId === item.sizeId\n        ? { ...cartItem, quantity: newQuantity }\n        : cartItem\n    );\n    this.cdr.markForCheck();\n\n    this.cartService.updateCart(request).subscribe({\n      next: (response) => {\n        if (response.success) {\n          this.userAchievementsRepository\n            .handleAchievement(userProjId, this.configService.achievementIds.updateCartQuantitySuccess, 'Количество товара успешно обновлено!')\n            .subscribe();\n          this.alertService.open('Количество товара успешно обновлено', { appearance: 'success' }).subscribe();\n        } else {\n          this.cartItems = this.cartItems.map(cartItem =>\n            cartItem.productId === item.productId && cartItem.sizeId === item.sizeId\n              ? { ...cartItem, quantity: item.quantity }\n              : cartItem\n          );\n          this.cdr.markForCheck();\n          this.userAchievementsRepository\n            .handleAchievement(userProjId, this.configService.achievementIds.updateCartQuantityFailed, 'Ошибка обновления количества товара!')\n            .subscribe();\n          this.alertService.open('Не удалось обновить количество. Попробуйте ещё раз!', { appearance: 'error' }).subscribe();\n        }\n        this.isLoading = false;\n        this.cdr.markForCheck();\n      },\n      error: (error) => {\n        this.cartItems = this.cartItems.map(cartItem =>\n          cartItem.productId === item.productId && cartItem.sizeId === item.sizeId\n            ? { ...cartItem, quantity: item.quantity }\n            : cartItem\n        );\n        this.cdr.markForCheck();\n        this.userAchievementsRepository\n          .handleAchievement(userProjId, this.configService.achievementIds.updateCartQuantityFailed, 'Ошибка обновления количества товара!')\n          .subscribe();\n        this.alertService.open('Ошибка при обновлении количества. Попробуйте ещё раз!', { appearance: 'error' }).subscribe();\n        this.isLoading = false;\n        this.cdr.markForCheck();\n      }\n    });\n  }\n\n  protected onValueChange(\n    value: CartItem[K],\n    key: K,\n    current: CartItem\n  ): void {\n    const updated = { ...current, [key]: value };\n    this.cartItems = this.cartItems.map((item) => (item === current ? updated : item));\n    this.cdr.markForCheck();\n  }\n\n  protected onSortChange(event: any): void {\n    // Логика сортировки, если нужна\n  }\n}\n\n    \n\n    \n        \n  \n    Корзина\n  \n  \n    Корзина пуста\n    Добавьте товары, чтобы продолжить\n    \n      Оформить заказ\n    \n    \n      Перейти к товарам\n    \n  \n   0\">\n    \n      \n        \n          \n            Название товара\n            Цена\n            Количество\n            Итого\n            Действия\n          \n        \n        \n          \n            {{ item.productTitle }}\n            {{ item.price | currency:'RUB' }}\n            \n              \n                \n                 -\n                \n                \n                \n                  + \n                \n              \n            \n            {{ getTotal(item) | currency:'RUB ' }}\n            \n              \n                Удалить\n              \n            \n          \n        \n        \n          \n            Общая сумма:\n            {{ getTotalAmount() | currency:'RUB ' }}\n            \n              \n                Оформить заказ\n              \n            \n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./page-cart.component.css\n                \n                 .container {\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 1rem;\n}\n\n.header-section {\n  text-align: center;\n  margin-bottom: 2rem;\n}\n\n.empty-cart {\n  text-align: center;\n  padding: 2rem;\n  background-color: var(--tui-base-01);\n  border-radius: 8px;\n  box-shadow: var(--tui-shadow);\n}\n\n.empty-cart h3 {\n  color: var(--tui-text-01);\n  margin-bottom: 1rem;\n}\n\n.quantity-container {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n}\n\n.quantity-input {\n  width: 60px;\n  text-align: center;\n}\n\n.total-label {\n  font-weight: bold;\n  text-align: right;\n}\n\n.number {\n  text-align: right;\n}\n\n\n                \n                    ../../../styles/root.css\n                \n                @import 'variables.css';\n@import 'buttons.css';\n@import 'cards.css';\n@import 'navigation.css';\n@import 'header.css';\n@import 'carousel.css';\n@import 'icons.css';\n@import 'layout.css';\n@import 'tables.css';\n@import 'typography.css';\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Корзина        Корзина пуста    Добавьте товары, чтобы продолжить          Оформить заказ              Перейти к товарам         0\">                                        Название товара            Цена            Количество            Итого            Действия                                                {{ item.productTitle }}            {{ item.price | currency:\\'RUB\\' }}                                                           -                                                                  +                                                       {{ getTotal(item) | currency:\\'RUB \\' }}                                          Удалить                                                                          Общая сумма:            {{ getTotalAmount() | currency:\\'RUB \\' }}                                          Оформить заказ                                                        '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AchievmentsPageForUserComponent', 'selector': 'app-achievments-page-for-user'},{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'ButtonComponent', 'selector': 'storybook-button'},{'name': 'CardItemComponent', 'selector': 'app-card-item'},{'name': 'CarouselImgComponent', 'selector': 'app-carousel-img'},{'name': 'DialogCategoryComponent', 'selector': 'app-dialog-category'},{'name': 'DialogImageComponent', 'selector': 'app-dialog-image'},{'name': 'DialogProductComponent', 'selector': 'app-dialog-product'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'storybook-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginProjComponent', 'selector': 'app-login-proj'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PageCartComponent', 'selector': 'app-page-cart'},{'name': 'PageCatalogItemComponent', 'selector': 'app-page-catalog-item'},{'name': 'PageComponent', 'selector': 'storybook-page'},{'name': 'PageItemFromCatalogComponent', 'selector': 'app-page-item-from-catalog'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RegisterProjComponent', 'selector': 'app-register-proj'},{'name': 'ThemeToggleComponent', 'selector': 'app-theme-toggle'},{'name': 'UserPageComponent', 'selector': 'app-user-page'},{'name': 'UserPageProjComponent', 'selector': 'app-user-page-proj'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PageCartComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageCatalogItemComponent.html":{"url":"components/PageCatalogItemComponent.html","title":"component - PageCatalogItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PageCatalogItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/page/page-catalog-item/page-catalog-item.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-page-catalog-item\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                CardItemComponent\n                            CommonModule\n                            AsyncPipe\n                \n            \n\n            \n                styleUrls\n                ./page-catalog-item.component.css,../../../styles/root.css\n            \n\n\n\n            \n                templateUrl\n                ./page-catalog-item.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isLoading\n                            \n                            \n                                products$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loadProducts\n                            \n                            \n                                loadProductsOrFail\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                trackByProductId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(productsRepository: ProductsRepositoryService, userAchievementsRepository: UserAchievementsRepositoryService, userAchievementsService: UserAchievementsService, configService: ConfigService, cd: ChangeDetectorRef, alertService: TuiAlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/page/page-catalog-item/page-catalog-item.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        productsRepository\n                                                  \n                                                        \n                                                                        ProductsRepositoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userAchievementsRepository\n                                                  \n                                                        \n                                                                        UserAchievementsRepositoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userAchievementsService\n                                                  \n                                                        \n                                                                        UserAchievementsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertService\n                                                  \n                                                        \n                                                                    TuiAlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loadProducts\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadProducts(userProjId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/page/page-catalog-item/page-catalog-item.component.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userProjId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadProductsOrFail\n                        \n                    \n                \n            \n            \n                \nloadProductsOrFail()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/page/page-catalog-item/page-catalog-item.component.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/page/page-catalog-item/page-catalog-item.component.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trackByProductId\n                        \n                    \n                \n            \n            \n                \ntrackByProductId(index: number, product: IDpProduct)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/page/page-catalog-item/page-catalog-item.component.ts:95\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                product\n                                            \n                                                            IDpProduct\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/data/page/page-catalog-item/page-catalog-item.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        products$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data/page/page-catalog-item/page-catalog-item.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { IDpProduct } from '../../../interface/IDpProduct';\nimport { ProductsRepositoryService } from '../../../repositories/products-repository.service';\nimport { CardItemComponent } from '../../components/card-item/card-item.component';\nimport { CommonModule, AsyncPipe } from '@angular/common';\nimport { ConfigService } from '../../../services/config.service';\nimport { TuiAlertService } from '@taiga-ui/core';\nimport { Inject } from '@angular/core';\nimport { UserAchievementsRepositoryService } from '../../../repositories/user-achievements-repository.service';\nimport { UserAchievementsService } from '../../../services/user-achievements.service';\nimport { Observable, of } from 'rxjs';\n\n@Component({\n  selector: 'app-page-catalog-item',\n  standalone: true,\n  imports: [CardItemComponent, CommonModule, AsyncPipe],\n  templateUrl: './page-catalog-item.component.html',\n  styleUrls: ['./page-catalog-item.component.css', '../../../styles/root.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PageCatalogItemComponent implements OnInit {\n  products$!: Observable; // Используем ! для строгой типизации\n  isLoading = false;\n\n  constructor(\n    private productsRepository: ProductsRepositoryService,\n    private userAchievementsRepository: UserAchievementsRepositoryService,\n    private userAchievementsService: UserAchievementsService,\n    private configService: ConfigService,\n    private cd: ChangeDetectorRef,\n    @Inject(TuiAlertService) private readonly alertService: TuiAlertService\n  ) {}\n\n  ngOnInit(): void {\n    this.loadProductsOrFail();\n  }\n\n  loadProductsOrFail(): void {\n    const userProjId = parseInt(localStorage.getItem('userProjId') || '0', 10);\n    this.isLoading = true;\n    this.cd.markForCheck();\n\n    if (this.userAchievementsService.getAlwaysFailMode() && Math.random()  {\n          this.isLoading = false;\n          this.products$ = of([]); // Пустой список при ошибке\n          this.cd.markForCheck();\n        });\n      return;\n    }\n\n    this.loadProducts(userProjId);\n  }\n\n  private loadProducts(userProjId: number): void {\n    this.products$ = this.productsRepository.getAllProducts();\n    this.products$.subscribe({\n      next: (productList: IDpProduct[]) => {\n        const imagesCount = productList.reduce((sum, p) => sum + (p.dpImages?.length || 0), 0);\n        console.log(`[Catalog] Загружено товаров: ${productList.length}`);\n        console.log(`[Catalog] Всего изображений у товаров: ${imagesCount}`);\n        this.isLoading = false;\n        this.userAchievementsRepository\n          .handleAchievement(\n            userProjId,\n            this.configService.achievementIds.loadProductsSuccess,\n            'тест-кейс: каталог продуктов успешно загружен!'\n          )\n          .subscribe();\n        this.cd.markForCheck();\n      },\n      error: (error) => {\n        console.error('Ошибка при загрузке товаров:', error);\n        this.isLoading = false;\n        this.products$ = of([]);\n        this.userAchievementsRepository\n          .handleAchievement(\n            userProjId,\n            this.configService.achievementIds.loadProductsFailed,\n            'тест-кейс: ошибка загрузки каталога продуктов!'\n          )\n          .subscribe();\n        this.alertService.open('Не удалось загрузить каталог продуктов', { appearance: 'error' }).subscribe();\n        this.cd.markForCheck();\n      }\n    });\n  }\n\n  trackByProductId(index: number, product: IDpProduct): number {\n    return product.dpProductId;\n  }\n}\n    \n\n    \n        \n  \n    \n      \n      \n      Загрузка каталога...\n    \n    \n      Товары не найдены.\n    \n    \n      \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./page-catalog-item.component.css\n                \n                \n.loading-animation {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    min-height: 300px;\n    font-size: 1.2rem;\n    color: #888;\n}\n                \n                    ../../../styles/root.css\n                \n                @import 'variables.css';\n@import 'buttons.css';\n@import 'cards.css';\n@import 'navigation.css';\n@import 'header.css';\n@import 'carousel.css';\n@import 'icons.css';\n@import 'layout.css';\n@import 'tables.css';\n@import 'typography.css';\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Загрузка каталога...              Товары не найдены.                                  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AchievmentsPageForUserComponent', 'selector': 'app-achievments-page-for-user'},{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'ButtonComponent', 'selector': 'storybook-button'},{'name': 'CardItemComponent', 'selector': 'app-card-item'},{'name': 'CarouselImgComponent', 'selector': 'app-carousel-img'},{'name': 'DialogCategoryComponent', 'selector': 'app-dialog-category'},{'name': 'DialogImageComponent', 'selector': 'app-dialog-image'},{'name': 'DialogProductComponent', 'selector': 'app-dialog-product'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'storybook-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginProjComponent', 'selector': 'app-login-proj'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PageCartComponent', 'selector': 'app-page-cart'},{'name': 'PageCatalogItemComponent', 'selector': 'app-page-catalog-item'},{'name': 'PageComponent', 'selector': 'storybook-page'},{'name': 'PageItemFromCatalogComponent', 'selector': 'app-page-item-from-catalog'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RegisterProjComponent', 'selector': 'app-register-proj'},{'name': 'ThemeToggleComponent', 'selector': 'app-theme-toggle'},{'name': 'UserPageComponent', 'selector': 'app-user-page'},{'name': 'UserPageProjComponent', 'selector': 'app-user-page-proj'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PageCatalogItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageComponent.html":{"url":"components/PageComponent.html","title":"component - PageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/stories/page.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                storybook-page\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                HeaderComponent\n                \n            \n\n            \n                styleUrls\n                ./page.css\n            \n\n\n            \n                template\n                  \n  \n    Pages in Storybook\n    \n      We recommend building UIs with a\n      \n        component-driven\n      \n      process starting with atomic components and ending with pages.\n    \n    \n      Render pages with mock data. This makes it easy to build and review page states without\n      needing to navigate to them in your app. Here are some handy patterns for managing page data\n      in Storybook:\n    \n    \n      \n        Use a higher-level connected component. Storybook helps you compose such data from the\n        \"args\" of child component stories\n      \n      \n        Assemble data in the page component from your services. You can mock these services out\n        using Storybook.\n      \n    \n    \n      Get a guided tutorial on component-driven development at\n      \n        Storybook tutorials\n      \n      . Read more in the\n       docs \n      .\n    \n    \n      Tip Adjust the width of the canvas with the\n      \n        \n          \n        \n      \n      Viewports addon in the toolbar\n    \n  \n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                doCreateAccount\n                            \n                            \n                                doLogin\n                            \n                            \n                                doLogout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        doCreateAccount\n                        \n                    \n                \n            \n            \n                \ndoCreateAccount()\n                \n            \n\n\n                    \n                        \n                            Defined in src/stories/page.component.ts:79\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        doLogin\n                        \n                    \n                \n            \n            \n                \ndoLogin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/stories/page.component.ts:75\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        doLogout\n                        \n                    \n                \n            \n            \n                \ndoLogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/stories/page.component.ts:71\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/stories/page.component.ts:69\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { HeaderComponent } from './header.component';\nimport type { User } from './user';\n\n@Component({\n  selector: 'storybook-page',\n  standalone: true,\n  imports: [CommonModule, HeaderComponent],\n  template: `\n  \n  \n    Pages in Storybook\n    \n      We recommend building UIs with a\n      \n        component-driven\n      \n      process starting with atomic components and ending with pages.\n    \n    \n      Render pages with mock data. This makes it easy to build and review page states without\n      needing to navigate to them in your app. Here are some handy patterns for managing page data\n      in Storybook:\n    \n    \n      \n        Use a higher-level connected component. Storybook helps you compose such data from the\n        \"args\" of child component stories\n      \n      \n        Assemble data in the page component from your services. You can mock these services out\n        using Storybook.\n      \n    \n    \n      Get a guided tutorial on component-driven development at\n      \n        Storybook tutorials\n      \n      . Read more in the\n       docs \n      .\n    \n    \n      Tip Adjust the width of the canvas with the\n      \n        \n          \n        \n      \n      Viewports addon in the toolbar\n    \n  \n`,\n  styleUrls: ['./page.css'],\n})\nexport class PageComponent {\n  user: User | null = null;\n\n  doLogout() {\n    this.user = null;\n  }\n\n  doLogin() {\n    this.user = { name: 'Jane Doe' };\n  }\n\n  doCreateAccount() {\n    this.user = { name: 'Jane Doe' };\n  }\n}\n\n    \n\n\n    \n                \n                    ./page.css\n                \n                .storybook-page {\n  margin: 0 auto;\n  padding: 48px 20px;\n  max-width: 600px;\n  color: #333;\n  font-size: 14px;\n  line-height: 24px;\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n}\n\n.storybook-page h2 {\n  display: inline-block;\n  vertical-align: top;\n  margin: 0 0 4px;\n  font-weight: 700;\n  font-size: 32px;\n  line-height: 1;\n}\n\n.storybook-page p {\n  margin: 1em 0;\n}\n\n.storybook-page a {\n  color: inherit;\n}\n\n.storybook-page ul {\n  margin: 1em 0;\n  padding-left: 30px;\n}\n\n.storybook-page li {\n  margin-bottom: 8px;\n}\n\n.storybook-page .tip {\n  display: inline-block;\n  vertical-align: top;\n  margin-right: 10px;\n  border-radius: 1em;\n  background: #e7fdd8;\n  padding: 4px 12px;\n  color: #357a14;\n  font-weight: 700;\n  font-size: 11px;\n  line-height: 12px;\n}\n\n.storybook-page .tip-wrapper {\n  margin-top: 40px;\n  margin-bottom: 40px;\n  font-size: 13px;\n  line-height: 20px;\n}\n\n.storybook-page .tip-wrapper svg {\n  display: inline-block;\n  vertical-align: top;\n  margin-top: 3px;\n  margin-right: 4px;\n  width: 12px;\n  height: 12px;\n}\n\n.storybook-page .tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Pages in Storybook          We recommend building UIs with a              component-driven            process starting with atomic components and ending with pages.              Render pages with mock data. This makes it easy to build and review page states without      needing to navigate to them in your app. Here are some handy patterns for managing page data      in Storybook:                      Use a higher-level connected component. Storybook helps you compose such data from the        \"args\" of child component stories                    Assemble data in the page component from your services. You can mock these services out        using Storybook.                    Get a guided tutorial on component-driven development at              Storybook tutorials            . Read more in the       docs       .              Tip Adjust the width of the canvas with the                                            Viewports addon in the toolbar      '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AchievmentsPageForUserComponent', 'selector': 'app-achievments-page-for-user'},{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'ButtonComponent', 'selector': 'storybook-button'},{'name': 'CardItemComponent', 'selector': 'app-card-item'},{'name': 'CarouselImgComponent', 'selector': 'app-carousel-img'},{'name': 'DialogCategoryComponent', 'selector': 'app-dialog-category'},{'name': 'DialogImageComponent', 'selector': 'app-dialog-image'},{'name': 'DialogProductComponent', 'selector': 'app-dialog-product'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'storybook-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginProjComponent', 'selector': 'app-login-proj'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PageCartComponent', 'selector': 'app-page-cart'},{'name': 'PageCatalogItemComponent', 'selector': 'app-page-catalog-item'},{'name': 'PageComponent', 'selector': 'storybook-page'},{'name': 'PageItemFromCatalogComponent', 'selector': 'app-page-item-from-catalog'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RegisterProjComponent', 'selector': 'app-register-proj'},{'name': 'ThemeToggleComponent', 'selector': 'app-theme-toggle'},{'name': 'UserPageComponent', 'selector': 'app-user-page'},{'name': 'UserPageProjComponent', 'selector': 'app-user-page-proj'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageItemFromCatalogComponent.html":{"url":"components/PageItemFromCatalogComponent.html","title":"component - PageItemFromCatalogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PageItemFromCatalogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/page/page-item-from-catalog/page-item-from-catalog.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-page-item-from-catalog\n            \n\n\n            \n                imports\n                \n                                CarouselImgComponent\n                            CommonModule\n                            TuiAppearance\n                            TuiButton\n                            FormsModule\n                \n            \n\n            \n                styleUrls\n                ./page-item-from-catalog.component.css\n            \n\n\n\n            \n                templateUrl\n                ./page-item-from-catalog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                productInfo\n                            \n                            \n                                quantity\n                            \n                            \n                                selectedSizeId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addToCart\n                            \n                            \n                                    Private\n                                loadProductInfo\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onImageClick\n                            \n                            \n                                openImageInFullscreen\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    images\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, productsRepositoryService: ProductsRepositoryService, sanitizer: DomSanitizer, cartService: ShopCartRepositoryService, userAchievementsRepository: UserAchievementsRepositoryService, userAchievementsService: UserAchievementsService, configService: ConfigService, alertService: TuiAlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/page/page-item-from-catalog/page-item-from-catalog.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        productsRepositoryService\n                                                  \n                                                        \n                                                                        ProductsRepositoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sanitizer\n                                                  \n                                                        \n                                                                    DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cartService\n                                                  \n                                                        \n                                                                        ShopCartRepositoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userAchievementsRepository\n                                                  \n                                                        \n                                                                        UserAchievementsRepositoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userAchievementsService\n                                                  \n                                                        \n                                                                        UserAchievementsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertService\n                                                  \n                                                        \n                                                                    TuiAlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addToCart\n                        \n                    \n                \n            \n            \n                \naddToCart()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/page/page-item-from-catalog/page-item-from-catalog.component.ts:75\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loadProductInfo\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadProductInfo()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/page/page-item-from-catalog/page-item-from-catalog.component.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/page/page-item-from-catalog/page-item-from-catalog.component.ts:43\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onImageClick\n                        \n                    \n                \n            \n            \n                \nonImageClick(imageUrl: SafeUrl)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/page/page-item-from-catalog/page-item-from-catalog.component.ts:142\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                imageUrl\n                                            \n                                                        SafeUrl\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openImageInFullscreen\n                        \n                    \n                \n            \n            \n                \nopenImageInFullscreen(imageUrl: SafeUrl)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/page/page-item-from-catalog/page-item-from-catalog.component.ts:113\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                imageUrl\n                                            \n                                                        SafeUrl\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        productInfo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IDpProduct\n\n                    \n                \n                \n                    \n                        Default value : {} as IDpProduct\n                    \n                \n                    \n                        \n                                Defined in src/app/data/page/page-item-from-catalog/page-item-from-catalog.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/data/page/page-item-from-catalog/page-item-from-catalog.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedSizeId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data/page/page-item-from-catalog/page-item-from-catalog.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        images\n                    \n                \n\n                \n                    \n                        getimages()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data/page/page-item-from-catalog/page-item-from-catalog.component.ts:39\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, CUSTOM_ELEMENTS_SCHEMA, Inject, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { IDpProduct } from '../../../interface/IDpProduct';\nimport { ProductsRepositoryService } from '../../../repositories/products-repository.service';\nimport { CarouselImgComponent } from '../../components/carousel-img/carousel-img.component';\nimport { CommonModule } from '@angular/common';\nimport { TuiAlertService, TuiAppearance, TuiButton } from '@taiga-ui/core';\nimport { DomSanitizer, SafeUrl } from '@angular/platform-browser';\nimport { SecurityContext } from '@angular/core';\nimport { IDpImage } from '../../../interface/IDpImage';\nimport { FormsModule } from '@angular/forms';\nimport { ShopCartRepositoryService } from '../../../repositories/shop-cart-repository.service';\nimport { UserAchievementsRepositoryService } from '../../../repositories/user-achievements-repository.service';\nimport { ConfigService } from '../../../services/config.service';\nimport { UserAchievementsService } from '../../../services/user-achievements.service';\n\n@Component({\n  selector: 'app-page-item-from-catalog',\n  imports: [CarouselImgComponent, CommonModule, TuiAppearance, TuiButton, FormsModule,],\n  templateUrl: './page-item-from-catalog.component.html',\n  styleUrls: ['./page-item-from-catalog.component.css'],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n})\nexport class PageItemFromCatalogComponent implements OnInit {\n  productInfo: IDpProduct = {} as IDpProduct;\n  quantity: number = 1;\n  selectedSizeId: number | undefined;\n\n  constructor(\n    private route: ActivatedRoute,\n    private productsRepositoryService: ProductsRepositoryService,\n    private sanitizer: DomSanitizer,\n    private cartService: ShopCartRepositoryService,\n    private userAchievementsRepository: UserAchievementsRepositoryService,\n    private userAchievementsService: UserAchievementsService,\n    private configService: ConfigService,\n    @Inject(TuiAlertService) private readonly alertService: TuiAlertService\n  ) { }\n  get images(): IDpImage[] {\n    return this.productInfo?.dpImages || [];\n  }\n\n  ngOnInit(): void {\n    this.loadProductInfo();\n  }\n\n  private loadProductInfo(): void {\n    const dpProductId = this.route.snapshot.paramMap.get('dpProductId');\n    if (dpProductId) {\n      const userProjId = parseInt(localStorage.getItem('userProjId') || '0', 10);\n      this.productsRepositoryService.getProductById(+dpProductId).subscribe({\n        next: (product: IDpProduct) => {\n          this.productInfo = product;\n          this.userAchievementsRepository\n            .handleAchievement(userProjId, this.configService.achievementIds.viewProductSuccess, 'тест-кейс: просмотр продукта разблокировано!')\n            .subscribe();\n          this.userAchievementsRepository\n            .handleAchievement(userProjId, this.configService.achievementIds.loadProductInfoSuccess, 'тест-кейс: загрузка информации о продукте разблокирована!')\n            .subscribe();\n        },\n        error: (error) => {\n          console.error('Ошибка при загрузке информации о продукте:', error);\n          this.userAchievementsRepository\n            .handleAchievement(userProjId, this.configService.achievementIds.viewProductFailed, 'тест-кейс: ошибка просмотра продукта разблокирована!')\n            .subscribe();\n          this.userAchievementsRepository\n            .handleAchievement(userProjId, this.configService.achievementIds.loadProductInfoFailed, 'тест-кейс: ошибка загрузки информации о продукте разблокирована!')\n            .subscribe();\n          this.alertService.open('Не удалось загрузить информацию о продукте', { appearance: 'error' }).subscribe();\n        }\n      });\n    }\n  }\n\n  addToCart(): void {\n    if (this.productInfo) {\n      const userProjId = parseInt(localStorage.getItem('userProjId') || '0', 10);\n       // Если включён режим \"всегда ошибка\" — только негативный тест-кейс\n      if (this.userAchievementsService.getAlwaysFailMode()) {\n        this.userAchievementsRepository\n          .handleAchievement(userProjId, this.configService.achievementIds.addToCartFailed, 'Тест-кейс: ошибка добавления товара в корзину!')\n          .subscribe();\n        this.alertService.open('Тест-кейс: ошибка добавления товара в корзину (режим всегда ошибка включён)', { appearance: 'error' }).subscribe();\n        return;\n      }\n\n\n      const request = {\n        productId: this.productInfo.dpProductId,\n        quantity: this.quantity,\n        sizeId: this.selectedSizeId\n      };\n      this.cartService.addToCart(request).subscribe({\n        next: (response) => {\n          this.userAchievementsRepository\n            .handleAchievement(userProjId, this.configService.achievementIds.addToCartSuccess, 'тест-кейс: товар успешно добавлен в корзину!')\n            .subscribe();\n          this.alertService.open(response.message || 'Товар добавлен в корзину!', { appearance: 'success' }).subscribe();\n\n        },\n        error: (error) => {\n          this.alertService.open('Ошибка при добавлении товара в корзину', { appearance: 'error' }).subscribe();\n          this.userAchievementsRepository\n            .handleAchievement(userProjId, this.configService.achievementIds.addToCartFailed, 'тест-кейс: ошибка добавления товара в корзину!')\n            .subscribe();\n        }\n      });\n    } else {\n      this.alertService.open('Ошибка: информация о продукте недоступна', { appearance: 'error' }).subscribe();\n    }\n  }\n\n  openImageInFullscreen(imageUrl: SafeUrl): void {\n    const url = this.sanitizer.sanitize(SecurityContext.URL, imageUrl);\n    if (url) {\n      const fullscreenDiv = document.createElement('div');\n      fullscreenDiv.style.position = 'fixed';\n      fullscreenDiv.style.top = '0';\n      fullscreenDiv.style.left = '0';\n      fullscreenDiv.style.width = '100%';\n      fullscreenDiv.style.height = '100%';\n      fullscreenDiv.style.backgroundColor = 'rgba(0, 0, 0, 0.8)';\n      fullscreenDiv.style.display = 'flex';\n      fullscreenDiv.style.justifyContent = 'center';\n      fullscreenDiv.style.alignItems = 'center';\n      fullscreenDiv.style.zIndex = '1000';\n\n      const img = document.createElement('img');\n      img.src = url;\n      img.style.maxWidth = '90%';\n      img.style.maxHeight = '90%';\n\n      fullscreenDiv.appendChild(img);\n      fullscreenDiv.addEventListener('click', () => {\n        document.body.removeChild(fullscreenDiv);\n      });\n\n      document.body.appendChild(fullscreenDiv);\n    }\n  }\n\n  onImageClick(imageUrl: SafeUrl): void {\n    this.openImageInFullscreen(imageUrl);\n  }\n}\n    \n\n    \n        \n  \n    \n      \n    \n    \n      {{ productInfo?.dpTitle }}\n      {{ productInfo?.dpPrice | currency:'RUB ' }}\n      {{ productInfo?.dpDescription }}\n      {{ productInfo?.dpCategory?.dpCategoryTitle }}\n      \n        \n           \n        \n       \n        \n          Добавить в корзину\n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./page-item-from-catalog.component.css\n                \n                @import '../../../styles/variables.css';\n\n/* Карточка товара */\n.product-card {\n  display: flex;\n  flex-direction: column;\n  border: 1px solid var(--border-color);\n  border-radius: var(--button-border-radius);\n  overflow: hidden;\n  margin-bottom: 1.5rem;\n  box-shadow: var(--card-shadow);\n  background: var(--card-background-color);\n  color: var(--tui-text-01);\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\n}\n\n.product-card:hover {\n  transform: translateY(-4px);\n  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.15);\n}\n\n.product-row {\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  align-items: stretch;\n}\n\n.product-image-container {\n  flex: 1;\n  position: relative;\n  aspect-ratio: 4 / 3;\n  min-width: 280px;\n  max-width: 400px;\n  overflow: hidden;\n  background: var(--tui-base-02);\n}\n\n.product-image {\n  width: 100%;\n  height: 100%;\n  border-radius: var(--button-border-radius) 0 0 var(--button-border-radius);\n}\n\n.product-image app-carousel-img {\n  width: 100%;\n  height: 100%;\n  display: block;\n}\n\n/* Карусель */\n.carousel {\n  width: 100%;\n  height: 100%;\n  margin: 0;\n  overflow: hidden;\n  background: transparent;\n}\n\n.wrapper {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: stretch;\n  align-items: center;\n  box-sizing: border-box;\n}\n\n.item {\n  width: 100%;\n  height: 100%;\n  aspect-ratio: 4 / 3;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  overflow: hidden;\n  transition: opacity 0.5s ease;\n}\n\n.item img {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  transition: transform 0.3s ease;\n}\n\n.item img:hover {\n  transform: translate(-50%, -50%) scale(1.05);\n}\n\n.pagination {\n  margin: 0.75rem auto;\n  display: flex;\n  justify-content: center;\n}\n\n/* Детали товара */\n.product-details-container {\n  flex: 1;\n  padding: 1rem;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n}\n\n.product-title {\n  font-size: 1.5rem;\n  margin: 0.5rem 0;\n  color: var(--tui-primary);\n  font-weight: 600;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n  max-width: 90%;\n}\n\n.product-price {\n  font-size: 1.25rem;\n  color: var(--tui-error-fill);\n  margin: 0.5rem 0;\n  font-weight: 600;\n}\n\n.product-description {\n  font-size: 1rem;\n  color: var(--tui-text-01);\n  margin: 0.5rem 0;\n  line-height: 1.5;\n  max-height: calc(1.5rem * 3);\n  overflow-y: auto;\n}\n\n.product-category {\n  font-size: 0.875rem;\n  color: var(--text-color-secondary);\n  margin: 0.5rem 0;\n}\n\n.product-actions {\n  display: flex;\n  gap: 1rem;\n  align-items: center;\n  flex-wrap: wrap;\n  margin-top: 1rem;\n}\n\n.quantity-input {\n  max-width: 6rem;\n}\n\n.btn-add-to-cart {\n  padding: 0.5rem 1rem;\n}\n\n/* Темная тема */\n[data-theme=\"dark\"] .product-card {\n  background: var(--card-background-color);\n  border-color: var(--border-color);\n  box-shadow: var(--card-shadow);\n}\n\n[data-theme=\"dark\"] .product-card:hover {\n  box-shadow: 0 8px 24px rgba(255, 255, 255, 0.15);\n}\n\n[data-theme=\"dark\"] .product-image-container,\n[data-theme=\"dark\"] .item img {\n  background: var(--tui-base-02);\n}\n\n[data-theme=\"dark\"] .product-title {\n  color: var(--tui-primary);\n}\n\n[data-theme=\"dark\"] .product-price {\n  color: var(--tui-error-fill);\n}\n\n[data-theme=\"dark\"] .product-description,\n[data-theme=\"dark\"] .product-category {\n  color: var(--tui-text-01);\n}\n\n/* Адаптивность */\n@media (max-width: 768px) {\n  .product-row {\n    flex-direction: column;\n  }\n\n  .product-image-container {\n    flex: none;\n    width: 100%;\n    min-width: 100%;\n    max-width: 100%;\n    min-height: 200px;\n  }\n\n  .product-image,\n  .carousel,\n  .item {\n    border-radius: var(--button-border-radius) var(--button-border-radius) 0 0;\n  }\n\n  .product-title {\n    max-width: 100%;\n    font-size: 1.25rem;\n  }\n\n  .product-price {\n    font-size: 1.125rem;\n  }\n\n  .product-description,\n  .product-category {\n    font-size: 0.875rem;\n  }\n\n  .product-actions {\n    flex-direction: column;\n    align-items: stretch;\n    gap: 0.5rem;\n  }\n\n  .quantity-input,\n  .btn-add-to-cart {\n    width: 100%;\n  }\n}\n\n@media (max-width: 480px) {\n  .product-details-container {\n    padding: 0.75rem;\n  }\n\n  .product-title {\n    font-size: 1.125rem;\n  }\n\n  .product-price {\n    font-size: 1rem;\n  }\n}\n\n/* Анимации */\n@keyframes fadeIn {\n  from {\n    opacity: 0;\n    transform: translateY(10px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n.fade-in {\n  animation: fadeIn 0.5s ease-out;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          {{ productInfo?.dpTitle }}      {{ productInfo?.dpPrice | currency:\\'RUB \\' }}      {{ productInfo?.dpDescription }}      {{ productInfo?.dpCategory?.dpCategoryTitle }}                                                          Добавить в корзину                    '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AchievmentsPageForUserComponent', 'selector': 'app-achievments-page-for-user'},{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'ButtonComponent', 'selector': 'storybook-button'},{'name': 'CardItemComponent', 'selector': 'app-card-item'},{'name': 'CarouselImgComponent', 'selector': 'app-carousel-img'},{'name': 'DialogCategoryComponent', 'selector': 'app-dialog-category'},{'name': 'DialogImageComponent', 'selector': 'app-dialog-image'},{'name': 'DialogProductComponent', 'selector': 'app-dialog-product'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'storybook-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginProjComponent', 'selector': 'app-login-proj'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PageCartComponent', 'selector': 'app-page-cart'},{'name': 'PageCatalogItemComponent', 'selector': 'app-page-catalog-item'},{'name': 'PageComponent', 'selector': 'storybook-page'},{'name': 'PageItemFromCatalogComponent', 'selector': 'app-page-item-from-catalog'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RegisterProjComponent', 'selector': 'app-register-proj'},{'name': 'ThemeToggleComponent', 'selector': 'app-theme-toggle'},{'name': 'UserPageComponent', 'selector': 'app-user-page'},{'name': 'UserPageProjComponent', 'selector': 'app-user-page-proj'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PageItemFromCatalogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductAttributesRepositoryService.html":{"url":"injectables/ProductAttributesRepositoryService.html","title":"injectable - ProductAttributesRepositoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductAttributesRepositoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/repositories/product-attributes-repository.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createDpProductAttribute\n                            \n                            \n                                deleteDpProductAttribute\n                            \n                            \n                                getAllDpProductAttributes\n                            \n                            \n                                getDpProductAttributeById\n                            \n                            \n                                updateDpProductAttribute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dpProductAttributesService: DpProductAttributesService)\n                    \n                \n                        \n                            \n                                Defined in src/app/repositories/product-attributes-repository.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dpProductAttributesService\n                                                  \n                                                        \n                                                                        DpProductAttributesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createDpProductAttribute\n                        \n                    \n                \n            \n            \n                \ncreateDpProductAttribute(dpProductAttribute: IDpProductAttribute)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/product-attributes-repository.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dpProductAttribute\n                                            \n                                                            IDpProductAttribute\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteDpProductAttribute\n                        \n                    \n                \n            \n            \n                \ndeleteDpProductAttribute(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/product-attributes-repository.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllDpProductAttributes\n                        \n                    \n                \n            \n            \n                \ngetAllDpProductAttributes()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/product-attributes-repository.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDpProductAttributeById\n                        \n                    \n                \n            \n            \n                \ngetDpProductAttributeById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/product-attributes-repository.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateDpProductAttribute\n                        \n                    \n                \n            \n            \n                \nupdateDpProductAttribute(id: number, dpProductAttribute: IDpProductAttribute)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/product-attributes-repository.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dpProductAttribute\n                                            \n                                                            IDpProductAttribute\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { IDpProductAttribute } from '../interface/IDpProductAttribute';\nimport { DpProductAttributesService } from '../services/dp-product-attributes.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductAttributesRepositoryService {\n  constructor(private dpProductAttributesService: DpProductAttributesService) {}\n\n  getAllDpProductAttributes(): Observable {\n    return this.dpProductAttributesService.getAllDpProductAttributes();\n  }\n\n  getDpProductAttributeById(id: number): Observable {\n    return this.dpProductAttributesService.getDpProductAttributeById(id);\n  }\n\n  createDpProductAttribute(dpProductAttribute: IDpProductAttribute): Observable {\n    return this.dpProductAttributesService.createDpProductAttribute(dpProductAttribute);\n  }\n\n  updateDpProductAttribute(id: number, dpProductAttribute: IDpProductAttribute): Observable {\n    return this.dpProductAttributesService.updateDpProductAttribute(id, dpProductAttribute);\n  }\n\n  deleteDpProductAttribute(id: number): Observable {\n    return this.dpProductAttributesService.deleteDpProductAttribute(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductsRepositoryService.html":{"url":"injectables/ProductsRepositoryService.html","title":"injectable - ProductsRepositoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductsRepositoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/repositories/products-repository.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addToCart\n                            \n                            \n                                createProduct\n                            \n                            \n                                deleteProduct\n                            \n                            \n                                getAllProducts\n                            \n                            \n                                getProductById\n                            \n                            \n                                updateProduct\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(productsService: ProductsService, imagesRepository: ImagesRepositoryService)\n                    \n                \n                        \n                            \n                                Defined in src/app/repositories/products-repository.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        productsService\n                                                  \n                                                        \n                                                                        ProductsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        imagesRepository\n                                                  \n                                                        \n                                                                        ImagesRepositoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addToCart\n                        \n                    \n                \n            \n            \n                \naddToCart(request: IAddToCartRequest)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/products-repository.service.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                            IAddToCartRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createProduct\n                        \n                    \n                \n            \n            \n                \ncreateProduct(product: IDpProduct)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/products-repository.service.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                product\n                                            \n                                                            IDpProduct\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteProduct\n                        \n                    \n                \n            \n            \n                \ndeleteProduct(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/products-repository.service.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllProducts\n                        \n                    \n                \n            \n            \n                \ngetAllProducts()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/products-repository.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProductById\n                        \n                    \n                \n            \n            \n                \ngetProductById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/products-repository.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateProduct\n                        \n                    \n                \n            \n            \n                \nupdateProduct(id: number, product: IDpProduct)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/products-repository.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                product\n                                            \n                                                            IDpProduct\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { forkJoin, map, Observable, switchMap } from 'rxjs';\nimport { IAddToCartRequest } from '../interface/IAddToCartRequest';\nimport { IDpProduct } from '../interface/IDpProduct';\nimport { ProductsService } from '../services/dp-products.service';\nimport { ImagesRepositoryService } from './images-repository.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductsRepositoryService {\n  constructor(private productsService: ProductsService,\n    private imagesRepository: ImagesRepositoryService\n  ) {}\n\ngetAllProducts(): Observable {\n    return forkJoin({\n      products: this.productsService.getAllProducts(),\n      images: this.imagesRepository.getAllDpImagesWithData() // Новый метод\n    }).pipe(\n      map(({ products, images }) => {\n        return products.map(product => ({\n          ...product,\n          dpImages: images.filter(image => image.dpProductId === product.dpProductId)\n        }));\n      })\n    );\n  }\n\n  // Остальные методы без изменений\ngetProductById(id: number): Observable {\n    return this.productsService.getProductById(id).pipe(\n      switchMap((product: IDpProduct) =>\n        this.imagesRepository.getDpImagesByProductId(product.dpProductId).pipe(\n          map(images => ({\n            ...product,\n            dpImages: images\n          }))\n        )\n      )\n    );\n  }\n\n  createProduct(product: IDpProduct): Observable {\n    return this.productsService.createProduct(product);\n  }\n\n  updateProduct(id: number, product: IDpProduct): Observable {\n    return this.productsService.updateProduct(id, product);\n  }\n\n  deleteProduct(id: number): Observable {\n    return this.productsService.deleteProduct(id);\n  }\n\n  addToCart(request: IAddToCartRequest): Observable {\n    return this.productsService.addToCart(request);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductsService.html":{"url":"injectables/ProductsService.html","title":"injectable - ProductsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/dp-products.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addToCart\n                            \n                            \n                                createProduct\n                            \n                            \n                                deleteProduct\n                            \n                            \n                                getAllProducts\n                            \n                            \n                                getProductById\n                            \n                            \n                                updateProduct\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/dp-products.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addToCart\n                        \n                    \n                \n            \n            \n                \naddToCart(request: IAddToCartRequest)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/dp-products.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                            IAddToCartRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createProduct\n                        \n                    \n                \n            \n            \n                \ncreateProduct(product: IDpProduct)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/dp-products.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                product\n                                            \n                                                            IDpProduct\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteProduct\n                        \n                    \n                \n            \n            \n                \ndeleteProduct(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/dp-products.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllProducts\n                        \n                    \n                \n            \n            \n                \ngetAllProducts()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/dp-products.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProductById\n                        \n                    \n                \n            \n            \n                \ngetProductById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/dp-products.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateProduct\n                        \n                    \n                \n            \n            \n                \nupdateProduct(id: number, product: IDpProduct)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/dp-products.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                product\n                                            \n                                                            IDpProduct\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${window.location.origin}/api/Products`\n                    \n                \n                    \n                        \n                                Defined in src/app/services/dp-products.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { IDpProduct } from '../interface/IDpProduct';\nimport { IAddToCartRequest } from '../interface/IAddToCartRequest';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductsService {\n  private baseUrl = `${window.location.origin}/api/Products`;\n\n  constructor(private http: HttpClient) {}\n\n  getAllProducts(): Observable {\n    return this.http.get(this.baseUrl);\n  }\n\n  getProductById(id: number): Observable {\n    return this.http.get(`${this.baseUrl}/${id}`);\n  }\n\n  createProduct(product: IDpProduct): Observable {\n    return this.http.post(this.baseUrl, product);\n  }\n\n  updateProduct(id: number, product: IDpProduct): Observable {\n    return this.http.put(`${this.baseUrl}/${id}`, product);\n  }\n\n  deleteProduct(id: number): Observable {\n    return this.http.delete(`${this.baseUrl}/${id}`);\n  }\n\n  addToCart(request: IAddToCartRequest): Observable {\n    return this.http.post(`${this.baseUrl}/AddToCart`, request);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/register/register.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            TuiAppearance\n                            TuiButton\n                                TuiCardLarge\n                            TuiError\n                            TuiFieldErrorPipe\n                            TuiForm\n                            TuiHeader\n                            TuiNotification\n                            TuiTextfield\n                            TuiTitle\n                \n            \n\n            \n                styleUrls\n                ./register.component.css,../../../styles/root.css\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                navigateToLogin\n                            \n                            \n                                onRegister\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authRepository: AuthRepositoryService, userAchievementsRepository: UserAchievementsRepositoryService, userAchievementsService: UserAchievementsService, router: Router, alertService: TuiAlertService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/components/register/register.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authRepository\n                                                  \n                                                        \n                                                                        AuthRepositoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userAchievementsRepository\n                                                  \n                                                        \n                                                                        UserAchievementsRepositoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userAchievementsService\n                                                  \n                                                        \n                                                                        UserAchievementsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertService\n                                                  \n                                                        \n                                                                    TuiAlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        navigateToLogin\n                        \n                    \n                \n            \n            \n                \nnavigateToLogin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/register/register.component.ts:105\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onRegister\n                        \n                    \n                \n            \n            \n                \nonRegister()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/register/register.component.ts:51\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    username: new FormControl('', [Validators.required, Validators.minLength(3)]),\n    password: new FormControl('', [Validators.required, Validators.minLength(6)]),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/register/register.component.ts:37\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, CUSTOM_ELEMENTS_SCHEMA, inject, Inject } from '@angular/core';\nimport { AuthRepositoryService } from '../../../repositories/auth-repository.service';\nimport { IDpUser } from '../../../interface/IDpUser';\nimport { CommonModule } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { FormControl, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { TuiAppearance, TuiButton, TuiError, TuiNotification, TuiTextfield, TuiTitle } from '@taiga-ui/core';\nimport { TuiFieldErrorPipe } from '@taiga-ui/kit';\nimport { TuiCardLarge, TuiForm, TuiHeader } from '@taiga-ui/layout';\nimport { TuiAlertService } from '@taiga-ui/core';\nimport { ConfigService } from '../../../services/config.service';\nimport { UserAchievementsRepositoryService } from '../../../repositories/user-achievements-repository.service';\nimport { UserAchievementsService } from '../../../services/user-achievements.service';\n\n@Component({\n  selector: 'app-register',\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    TuiAppearance,\n    TuiButton,\n    TuiCardLarge,\n    TuiError,\n    TuiFieldErrorPipe,\n    TuiForm,\n    TuiHeader,\n    TuiNotification,\n    TuiTextfield,\n    TuiTitle,\n  ],\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css', '../../../styles/root.css'],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class RegisterComponent {\n  protected readonly form = new FormGroup({\n    username: new FormControl('', [Validators.required, Validators.minLength(3)]),\n    password: new FormControl('', [Validators.required, Validators.minLength(6)]),\n  });\n\n  constructor(\n    private authRepository: AuthRepositoryService,\n    private userAchievementsRepository: UserAchievementsRepositoryService,\n    private userAchievementsService: UserAchievementsService = inject(UserAchievementsService),\n    private router: Router,\n    @Inject(TuiAlertService) private readonly alertService: TuiAlertService,\n    private configService: ConfigService\n  ) {}\n\n  onRegister() {\n    if (this.form.valid) {\n      const user: IDpUser = {\n        dpUserId: 0,\n        dpUsername: this.form.value.username || '',\n        dpPassword: this.form.value.password || '',\n        dpRegistrationDate: new Date(),\n        dpPhoneNumber: '0000000000'\n      };\n      // Проверка: если включён режим \"всегда ошибка\" — только негативный тест-кейс\n      if (this.userAchievementsService.getAlwaysFailMode()) {\n        const userProjId = parseInt(localStorage.getItem('userProjId') || '0', 10);\n        this.userAchievementsRepository\n          .handleAchievement(userProjId, this.configService.achievementIds.registerFailed, 'тест-кейс неудачной регистрации разблокировано!')\n          .subscribe();\n        this.alertService.open('Тест-кейс: ошибка регистрации (режим всегда ошибка включён)', { appearance: 'error' }).subscribe();\n        return;\n      }\n      // Галочка выключена — обычная логика\n      // Выполняем регистрацию пользователя\n      this.authRepository.register(user).subscribe({\n        next: (response: { token: string; userProjId?: number }) => {\n          if (response.token) {\n            this.alertService.open('Регистрация успешна! Войдите в аккаунт.', { appearance: 'success' }).subscribe();\n            const userProjId = response.userProjId || parseInt(localStorage.getItem('userProjId') || '0', 10);\n\n            this.userAchievementsRepository\n              .handleAchievement(userProjId, this.configService.achievementIds.registerSuccess, 'тест-кейс регистрации разблокировано!')\n              .subscribe({\n                complete: () => setTimeout(() => this.router.navigate(['/login']), 2000)\n              });\n          } else {\n            this.alertService.open('Ошибка регистрации: некорректный ответ сервера', { appearance: 'error' }).subscribe();\n          }\n        },\n        error: (error) => {\n          const userProjId = parseInt(localStorage.getItem('userProjId') || '0', 10);\n          this.userAchievementsRepository\n            .handleAchievement(userProjId, this.configService.achievementIds.registerFailed, 'тест-кейс неудачной регистрации разблокировано!')\n            .subscribe();\n\n          let errorMessage = 'Ошибка регистрации: попробуйте другое имя пользователя';\n          if (error.status === this.configService.httpStatusCodes.conflict) {\n            errorMessage = 'Ошибка: имя пользователя уже занято';\n          } else if (error.status === this.configService.httpStatusCodes.badRequest) {\n            errorMessage = 'Ошибка: неверный формат данных';\n          }\n\n          this.alertService.open(errorMessage, { appearance: 'error' }).subscribe();\n        }\n      });\n    }\n  }\n\n  navigateToLogin() {\n    this.router.navigate(['/login']);\n  }\n}\n    \n\n    \n        \n    \n        \n            Форма регистрации\n        \n\n        \n            Логин\n            \n        \n        \n        \n            Пароль\n            \n        \n        \n        \n            \n                Отмена\n            \n            Зарегистрироваться\n        \n    \n\n    \n\n    \n                \n                    ./register.component.css\n                \n                .form-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 100vh;\n  background: var(--tui-base-01);\n  padding: 1rem;\n  box-sizing: border-box;\n}\n\nform[tuiCardLarge] {\n  width: 100%;\n  max-width: 32rem;\n  box-shadow: 0 0.25rem 1rem var(--tui-shadow);\n  border-radius: 0.5rem;\n}\n\n@media (max-width: 47.9375rem) {\n  .form-container {\n    padding: 0.5rem;\n  }\n\n  form[tuiCardLarge] {\n    max-width: 90%;\n  }\n}\n\nbody.dark-theme .form-container {\n  background: var(--tui-base-02-dark);\n}\n\nbody.dark-theme form[tuiCardLarge] {\n  box-shadow: 0 0.25rem 1rem var(--tui-shadow-dark);\n}\n                \n                    ../../../styles/root.css\n                \n                @import 'variables.css';\n@import 'buttons.css';\n@import 'cards.css';\n@import 'navigation.css';\n@import 'header.css';\n@import 'carousel.css';\n@import 'icons.css';\n@import 'layout.css';\n@import 'tables.css';\n@import 'typography.css';\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Форма регистрации                            Логин                                                Пароль                                                                Отмена                        Зарегистрироваться            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AchievmentsPageForUserComponent', 'selector': 'app-achievments-page-for-user'},{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'ButtonComponent', 'selector': 'storybook-button'},{'name': 'CardItemComponent', 'selector': 'app-card-item'},{'name': 'CarouselImgComponent', 'selector': 'app-carousel-img'},{'name': 'DialogCategoryComponent', 'selector': 'app-dialog-category'},{'name': 'DialogImageComponent', 'selector': 'app-dialog-image'},{'name': 'DialogProductComponent', 'selector': 'app-dialog-product'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'storybook-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginProjComponent', 'selector': 'app-login-proj'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PageCartComponent', 'selector': 'app-page-cart'},{'name': 'PageCatalogItemComponent', 'selector': 'app-page-catalog-item'},{'name': 'PageComponent', 'selector': 'storybook-page'},{'name': 'PageItemFromCatalogComponent', 'selector': 'app-page-item-from-catalog'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RegisterProjComponent', 'selector': 'app-register-proj'},{'name': 'ThemeToggleComponent', 'selector': 'app-theme-toggle'},{'name': 'UserPageComponent', 'selector': 'app-user-page'},{'name': 'UserPageProjComponent', 'selector': 'app-user-page-proj'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterProjComponent.html":{"url":"components/RegisterProjComponent.html","title":"component - RegisterProjComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterProjComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/register-proj/register-proj.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register-proj\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            TuiAppearance\n                            TuiButton\n                                TuiCardLarge\n                            TuiError\n                            TuiFieldErrorPipe\n                            TuiForm\n                            TuiHeader\n                            TuiNotification\n                            TuiTextfield\n                            TuiTitle\n                \n            \n\n            \n                styleUrls\n                ./register-proj.component.css,../../../styles/root.css\n            \n\n\n\n            \n                templateUrl\n                ./register-proj.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                navigateToLogin\n                            \n                            \n                                onRegister\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authProjRepository: AuthProjRepositoryService, router: Router, alertService: TuiAlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/components/register-proj/register-proj.component.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authProjRepository\n                                                  \n                                                        \n                                                                        AuthProjRepositoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertService\n                                                  \n                                                        \n                                                                    TuiAlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        navigateToLogin\n                        \n                    \n                \n            \n            \n                \nnavigateToLogin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/register-proj/register-proj.component.ts:70\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onRegister\n                        \n                    \n                \n            \n            \n                \nonRegister()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/register-proj/register-proj.component.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    login: new FormControl('', [Validators.required]),\n    password: new FormControl('', [Validators.required])\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/register-proj/register-proj.component.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, CUSTOM_ELEMENTS_SCHEMA, Inject } from '@angular/core';\nimport { AuthProjService } from '../../../services/auth-proj.service';\nimport { IDpUserProj } from '../../../interface/IDpUserProj';\nimport { CommonModule } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { FormControl, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { TuiAppearance, TuiButton, TuiError, TuiNotification, TuiTextfield, TuiTitle } from '@taiga-ui/core';\nimport { TuiFieldErrorPipe } from '@taiga-ui/kit';\nimport { TuiCardLarge, TuiForm, TuiHeader } from '@taiga-ui/layout';\nimport { TuiAlertService } from '@taiga-ui/core';\nimport { AuthProjRepositoryService } from '../../../repositories/auth-proj-repository.service';\n\n@Component({\n  selector: 'app-register-proj',\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    TuiAppearance,\n    TuiButton,\n    TuiCardLarge,\n    TuiError,\n    TuiFieldErrorPipe,\n    TuiForm,\n    TuiHeader,\n    TuiNotification,\n    TuiTextfield,\n    TuiTitle,\n  ],\n  templateUrl: './register-proj.component.html',\n  styleUrls: ['./register-proj.component.css', '../../../styles/root.css'],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class RegisterProjComponent {\n  protected readonly form = new FormGroup({\n    login: new FormControl('', [Validators.required]),\n    password: new FormControl('', [Validators.required])\n  });\n\n  constructor(\n    private authProjRepository: AuthProjRepositoryService,\n    private router: Router,\n    @Inject(TuiAlertService) private readonly alertService: TuiAlertService\n  ) {}\n\n  onRegister() {\n    if (this.form.valid) {\n      const userProj: IDpUserProj = {\n        dpUserProjId: 0,\n        login: this.form.value.login || '',\n        password: this.form.value.password || ''\n      };\n\n      this.authProjRepository.register(userProj).subscribe({\n        next: (response) => {\n          console.log('Registration successful:', response);\n          if (response && response.token) {\n            this.alertService.open('Регистрация успешна! Войдите в аккаунт.', { appearance: 'success' }).subscribe();\n            this.router.navigate(['/login-proj']);\n          }\n        },\n        error: (error) => {\n          console.error('Registration failed:', error);\n          const errorMessage = error.error?.message || 'Ошибка регистрации: попробуйте другое имя пользователя';\n          this.alertService.open(errorMessage, { appearance: 'error' }).subscribe();\n        }\n      });\n    }\n  }\n\n  navigateToLogin() {\n    this.router.navigate(['/login-proj']);\n  }\n}\n    \n\n    \n        \n    \n        \n            \n                Форма регистрации для пользователя с тестами\n            \n        \n\n        \n            Логин\n            \n        \n        \n        \n            Пароль\n            \n        \n        \n        \n            \n                Отмена\n            \n            \n                Зарегистрироваться\n            \n        \n    \n\n    \n\n    \n                \n                    ./register-proj.component.css\n                \n                .form-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 100vh;\n  background: var(--tui-base-01);\n  padding: 1rem;\n  box-sizing: border-box;\n}\n\nform[tuiCardLarge] {\n  width: 100%;\n  max-width: 32rem;\n  box-shadow: 0 0.25rem 1rem var(--tui-shadow);\n  border-radius: 0.5rem;\n}\n\n@media (max-width: 47.9375rem) {\n  .form-container {\n    padding: 0.5rem;\n  }\n\n  form[tuiCardLarge] {\n    max-width: 90%;\n  }\n}\n\nbody.dark-theme .form-container {\n  background: var(--tui-base-02-dark);\n}\n\nbody.dark-theme form[tuiCardLarge] {\n  box-shadow: 0 0.25rem 1rem var(--tui-shadow-dark);\n}\n                \n                    ../../../styles/root.css\n                \n                @import 'variables.css';\n@import 'buttons.css';\n@import 'cards.css';\n@import 'navigation.css';\n@import 'header.css';\n@import 'carousel.css';\n@import 'icons.css';\n@import 'layout.css';\n@import 'tables.css';\n@import 'typography.css';\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Форма регистрации для пользователя с тестами                                        Логин                                                Пароль                                                                Отмена                                        Зарегистрироваться                        '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AchievmentsPageForUserComponent', 'selector': 'app-achievments-page-for-user'},{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'ButtonComponent', 'selector': 'storybook-button'},{'name': 'CardItemComponent', 'selector': 'app-card-item'},{'name': 'CarouselImgComponent', 'selector': 'app-carousel-img'},{'name': 'DialogCategoryComponent', 'selector': 'app-dialog-category'},{'name': 'DialogImageComponent', 'selector': 'app-dialog-image'},{'name': 'DialogProductComponent', 'selector': 'app-dialog-product'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'storybook-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginProjComponent', 'selector': 'app-login-proj'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PageCartComponent', 'selector': 'app-page-cart'},{'name': 'PageCatalogItemComponent', 'selector': 'app-page-catalog-item'},{'name': 'PageComponent', 'selector': 'storybook-page'},{'name': 'PageItemFromCatalogComponent', 'selector': 'app-page-item-from-catalog'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RegisterProjComponent', 'selector': 'app-register-proj'},{'name': 'ThemeToggleComponent', 'selector': 'app-theme-toggle'},{'name': 'UserPageComponent', 'selector': 'app-user-page'},{'name': 'UserPageProjComponent', 'selector': 'app-user-page-proj'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterProjComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ShopCartRepositoryService.html":{"url":"injectables/ShopCartRepositoryService.html","title":"injectable - ShopCartRepositoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ShopCartRepositoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/repositories/shop-cart-repository.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cartKey\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addToCart\n                            \n                            \n                                checkout\n                            \n                            \n                                clearCart\n                            \n                            \n                                exportToExcel\n                            \n                            \n                                getCart\n                            \n                            \n                                getCartQuantity\n                            \n                            \n                                removeFromCart\n                            \n                            \n                                updateCart\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(productsRepositoryService: ProductsRepositoryService, shopCartService: ShopCartService)\n                    \n                \n                        \n                            \n                                Defined in src/app/repositories/shop-cart-repository.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        productsRepositoryService\n                                                  \n                                                        \n                                                                        ProductsRepositoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        shopCartService\n                                                  \n                                                        \n                                                                        ShopCartService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addToCart\n                        \n                    \n                \n            \n            \n                \naddToCart(request: IAddToCartRequest)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/shop-cart-repository.service.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                            IAddToCartRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkout\n                        \n                    \n                \n            \n            \n                \ncheckout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/shop-cart-repository.service.ts:96\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearCart\n                        \n                    \n                \n            \n            \n                \nclearCart()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/shop-cart-repository.service.ts:128\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        exportToExcel\n                        \n                    \n                \n            \n            \n                \nexportToExcel(orderId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/shop-cart-repository.service.ts:124\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                orderId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCart\n                        \n                    \n                \n            \n            \n                \ngetCart()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/shop-cart-repository.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCartQuantity\n                        \n                    \n                \n            \n            \n                \ngetCartQuantity(productId: number, sizeId?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/shop-cart-repository.service.ts:86\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                productId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                sizeId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeFromCart\n                        \n                    \n                \n            \n            \n                \nremoveFromCart(request: IRemoveFromCartRequest)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/shop-cart-repository.service.ts:114\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                            IRemoveFromCartRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateCart\n                        \n                    \n                \n            \n            \n                \nupdateCart(request: IUpdateCartRequest)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/shop-cart-repository.service.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                            IUpdateCartRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        cartKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'shopping_cart'\n                    \n                \n                    \n                        \n                                Defined in src/app/repositories/shop-cart-repository.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { forkJoin, map, Observable, of } from 'rxjs';\nimport { IAddToCartRequest } from '../interface/IAddToCartRequest';\nimport { ICartViewModel } from '../interface/ICartViewModel';\nimport { IRemoveFromCartRequest } from '../interface/IRemoveFromCartRequest';\nimport { IUpdateCartRequest } from '../interface/IUpdateCartRequest';\nimport { IDpProduct } from '../interface/IDpProduct';\nimport { ProductsRepositoryService } from './products-repository.service';\nimport { ShopCartService } from '../services/dp-shop-cart.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ShopCartRepositoryService {\n  private cartKey = 'shopping_cart';\n\n  constructor(\n    private productsRepositoryService: ProductsRepositoryService,\n    private shopCartService: ShopCartService\n  ) { }\n\n  getCart(): Observable {\n    try {\n      const cartItems = JSON.parse(localStorage.getItem(this.cartKey) || '[]');\n      console.log('cartItems from localStorage:', cartItems);\n      if (cartItems.length === 0) {\n        return of({ cartItems: [], products: [] });\n      }\n\n      const productObservables = cartItems.map((item: IAddToCartRequest) =>\n        this.productsRepositoryService.getProductById(item.productId)\n      );\n\n      return forkJoin(productObservables as Observable[]).pipe(\n        map((products: IDpProduct[]) => {\n          const cartItemsWithDetails = cartItems.map((item: IAddToCartRequest, index: number) => ({\n            productId: item.productId,\n            productTitle: products[index].dpTitle,\n            price: products[index].dpPrice,\n            quantity: item.quantity,\n          }));\n\n          return {\n            cartItems: cartItemsWithDetails,\n            products: products,\n          };\n        })\n      );\n    } catch (error) {\n      console.error('Error retrieving cart items:', error);\n      return of({ cartItems: [], products: [] });\n    }\n  }\n\n  updateCart(request: IUpdateCartRequest): Observable {\n    let cart = JSON.parse(localStorage.getItem(this.cartKey) || '[]');\n    const itemIndex = cart.findIndex((item: IAddToCartRequest) =>\n      item.productId === request.productId && item.sizeId === request.sizeId\n    );\n\n    if (itemIndex !== -1) {\n      cart[itemIndex].quantity = request.quantity;\n      localStorage.setItem(this.cartKey, JSON.stringify(cart));\n      return of({ success: true, message: 'Корзина обновлена' });\n    } else {\n      return of({ success: false, message: 'Товар не найден в корзине' });\n    }\n  }\n\n  addToCart(request: IAddToCartRequest): Observable {\n    let cart = JSON.parse(localStorage.getItem(this.cartKey) || '[]');\n    const existingItem = cart.find((item: IAddToCartRequest) =>\n      item.productId === request.productId && item.sizeId === request.sizeId\n    );\n\n    if (existingItem) {\n      existingItem.quantity += request.quantity;\n    } else {\n      cart.push(request);\n    }\n\n    localStorage.setItem(this.cartKey, JSON.stringify(cart));\n    return of({ success: true, message: 'Товар добавлен в корзину' });\n  }\n\n  getCartQuantity(productId: number, sizeId?: number): Observable {\n    const cart = JSON.parse(localStorage.getItem(this.cartKey) || '[]');\n    const item = cart.find((item: IAddToCartRequest) =>\n      item.productId === productId && item.sizeId === sizeId\n    );\n\n    const currentQuantity = item ? item.quantity : 0;\n    return of({ currentQuantity });\n  }\n\n  checkout(): Observable {\n    const cart = JSON.parse(localStorage.getItem(this.cartKey) || '[]');\n\n    if (cart.length === 0) {\n      return of({ orderId: 0, orderDetails: [] });\n    }\n\n    // Убедитесь, что данные корректны перед отправкой\n    const cartData = cart.map((item: IAddToCartRequest) => ({\n      productId: item.productId,\n      quantity: item.quantity,\n      sizeId: item.sizeId || null // Убедитесь, что sizeId может быть null\n    }));\n\n    // Отправьте данные на бэкенд\n    return this.shopCartService.checkout(cartData);\n  }\n\n  removeFromCart(request: IRemoveFromCartRequest): Observable {\n    let cart = JSON.parse(localStorage.getItem(this.cartKey) || '[]');\n    cart = cart.filter((item: IAddToCartRequest) =>\n      !(item.productId === request.productId && item.sizeId === request.sizeId)\n    );\n\n    localStorage.setItem(this.cartKey, JSON.stringify(cart));\n    return of(undefined);\n  }\n\n  exportToExcel(orderId: number): Observable {\n    return this.shopCartService.exportToExcel(orderId);\n  }\n\n  clearCart(): void {\n    localStorage.removeItem(this.cartKey);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ShopCartService.html":{"url":"injectables/ShopCartService.html","title":"injectable - ShopCartService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ShopCartService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/dp-shop-cart.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addToCart\n                            \n                            \n                                checkout\n                            \n                            \n                                exportToExcel\n                            \n                            \n                                getCart\n                            \n                            \n                                getCartQuantity\n                            \n                            \n                                removeFromCart\n                            \n                            \n                                updateCart\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/dp-shop-cart.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addToCart\n                        \n                    \n                \n            \n            \n                \naddToCart(request: IAddToCartRequest)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/dp-shop-cart.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                            IAddToCartRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkout\n                        \n                    \n                \n            \n            \n                \ncheckout(cart: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/dp-shop-cart.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                cart\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        exportToExcel\n                        \n                    \n                \n            \n            \n                \nexportToExcel(orderId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/dp-shop-cart.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                orderId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCart\n                        \n                    \n                \n            \n            \n                \ngetCart()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/dp-shop-cart.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCartQuantity\n                        \n                    \n                \n            \n            \n                \ngetCartQuantity(productId: number, sizeId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/dp-shop-cart.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                productId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                sizeId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeFromCart\n                        \n                    \n                \n            \n            \n                \nremoveFromCart(request: IRemoveFromCartRequest)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/dp-shop-cart.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                            IRemoveFromCartRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateCart\n                        \n                    \n                \n            \n            \n                \nupdateCart(request: IUpdateCartRequest)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/dp-shop-cart.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                            IUpdateCartRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${window.location.origin}/api/ShopCart`\n                    \n                \n                    \n                        \n                                Defined in src/app/services/dp-shop-cart.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ICartViewModel } from '../interface/ICartViewModel';\nimport { IAddToCartRequest } from '../interface/IAddToCartRequest';\nimport { IUpdateCartRequest } from '../interface/IUpdateCartRequest';\nimport { IDpOrderDetail } from '../interface/IDpOrderDetail';\nimport { IRemoveFromCartRequest } from '../interface/IRemoveFromCartRequest';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ShopCartService {\n  private baseUrl = `${window.location.origin}/api/ShopCart`;\n\n  constructor(private http: HttpClient) {}\n\n  getCart(): Observable {\n    return this.http.get(this.baseUrl);\n  }\n\n  updateCart(request: IUpdateCartRequest): Observable {\n    return this.http.post(`${this.baseUrl}/UpdateCart`, request);\n  }\n\n  addToCart(request: IAddToCartRequest): Observable {\n    return this.http.post(`${this.baseUrl}/AddToCart`, request);\n  }\n\n  getCartQuantity(productId: number, sizeId: number): Observable {\n    return this.http.get(`${this.baseUrl}/quantity?productId=${productId}&sizeId=${sizeId}`);\n  }\n\n  checkout(cart: any[]): Observable {\n    return this.http.post(`${this.baseUrl}/Checkout`, cart);\n  }\n\n  removeFromCart(request: IRemoveFromCartRequest): Observable {\n    return this.http.post(`${this.baseUrl}/RemoveFromCart`, request);\n  }\n\n  exportToExcel(orderId: number): Observable {\n    return this.http.post(`${this.baseUrl}/export?orderId=${orderId}`, {}, { responseType: 'blob' });\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SizesRepositoryService.html":{"url":"injectables/SizesRepositoryService.html","title":"injectable - SizesRepositoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SizesRepositoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/repositories/sizes-repository.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createDpSize\n                            \n                            \n                                deleteDpSize\n                            \n                            \n                                getAllDpSizes\n                            \n                            \n                                getDpSizeById\n                            \n                            \n                                updateDpSize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dpSizesService: DpSizesService)\n                    \n                \n                        \n                            \n                                Defined in src/app/repositories/sizes-repository.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dpSizesService\n                                                  \n                                                        \n                                                                        DpSizesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createDpSize\n                        \n                    \n                \n            \n            \n                \ncreateDpSize(dpSize: IDpSize)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/sizes-repository.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dpSize\n                                            \n                                                            IDpSize\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteDpSize\n                        \n                    \n                \n            \n            \n                \ndeleteDpSize(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/sizes-repository.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllDpSizes\n                        \n                    \n                \n            \n            \n                \ngetAllDpSizes()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/sizes-repository.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDpSizeById\n                        \n                    \n                \n            \n            \n                \ngetDpSizeById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/sizes-repository.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateDpSize\n                        \n                    \n                \n            \n            \n                \nupdateDpSize(id: number, dpSize: IDpSize)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/sizes-repository.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dpSize\n                                            \n                                                            IDpSize\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { IDpSize } from '../interface/IDpSize';\nimport { DpSizesService } from '../services/dp-sizes.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SizesRepositoryService {\n  constructor(private dpSizesService: DpSizesService) {}\n\n  getAllDpSizes(): Observable {\n    return this.dpSizesService.getAllDpSizes();\n  }\n\n  getDpSizeById(id: number): Observable {\n    return this.dpSizesService.getDpSizeById(id);\n  }\n\n  createDpSize(dpSize: IDpSize): Observable {\n    return this.dpSizesService.createDpSize(dpSize);\n  }\n\n  updateDpSize(id: number, dpSize: IDpSize): Observable {\n    return this.dpSizesService.updateDpSize(id, dpSize);\n  }\n\n  deleteDpSize(id: number): Observable {\n    return this.dpSizesService.deleteDpSize(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ThemeToggleComponent.html":{"url":"components/ThemeToggleComponent.html","title":"component - ThemeToggleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ThemeToggleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/components/theme-toggle/theme-toggle.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-theme-toggle\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            TuiSwitch\n                            FormsModule\n                \n            \n\n            \n                styleUrls\n                ./theme-toggle.component.css,../../../styles/root.css\n            \n\n\n\n            \n                templateUrl\n                ./theme-toggle.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                alertService\n                            \n                            \n                                    Private\n                                    Readonly\n                                configService\n                            \n                            \n                                    Private\n                                    Readonly\n                                darkMode\n                            \n                            \n                                    Private\n                                    Readonly\n                                key\n                            \n                            \n                                    Private\n                                    Readonly\n                                media\n                            \n                            \n                                    Private\n                                    Readonly\n                                storage\n                            \n                            \n                                toggle\n                            \n                            \n                                    Private\n                                toggleCount\n                            \n                            \n                                    Private\n                                    Readonly\n                                userAchievementsRepository\n                            \n                            \n                                    Private\n                                    Readonly\n                                userAchievementsService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                recordAchievement\n                            \n                            \n                                reset\n                            \n                            \n                                toggleTheme\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/data/components/theme-toggle/theme-toggle.component.ts:30\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        recordAchievement\n                        \n                    \n                \n            \n            \n                \n                        \n                    recordAchievement(userProjId: number, achievementId: number, message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/theme-toggle/theme-toggle.component.ts:96\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userProjId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                achievementId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reset\n                        \n                    \n                \n            \n            \n                \nreset()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/theme-toggle/theme-toggle.component.ts:80\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleTheme\n                        \n                    \n                \n            \n            \n                \ntoggleTheme()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/components/theme-toggle/theme-toggle.component.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        alertService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiAlertService)\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/theme-toggle/theme-toggle.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        configService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ConfigService)\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/theme-toggle/theme-toggle.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        darkMode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TUI_DARK_MODE)\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/theme-toggle/theme-toggle.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TUI_DARK_MODE_KEY)\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/theme-toggle/theme-toggle.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        media\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(WA_WINDOW).matchMedia('(prefers-color-scheme: dark)')\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/theme-toggle/theme-toggle.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        storage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(WA_LOCAL_STORAGE)\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/theme-toggle/theme-toggle.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.darkMode()\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/theme-toggle/theme-toggle.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        toggleCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/theme-toggle/theme-toggle.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        userAchievementsRepository\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UserAchievementsRepositoryService)\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/theme-toggle/theme-toggle.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        userAchievementsService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UserAchievementsService)\n                    \n                \n                    \n                        \n                                Defined in src/app/data/components/theme-toggle/theme-toggle.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, CUSTOM_ELEMENTS_SCHEMA, inject } from '@angular/core';\nimport { TUI_DARK_MODE_KEY, TUI_DARK_MODE, TuiAlertService } from '@taiga-ui/core';\nimport { WA_LOCAL_STORAGE, WA_WINDOW } from '@ng-web-apis/common';\nimport { TuiSwitch } from '@taiga-ui/kit';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { UserAchievementsRepositoryService } from '../../../repositories/user-achievements-repository.service';\nimport { ConfigService } from '../../../services/config.service';\nimport { UserAchievementsService } from '../../../services/user-achievements.service';\n\n@Component({\n  selector: 'app-theme-toggle',\n  standalone: true,\n  imports: [CommonModule, TuiSwitch, FormsModule],\n  templateUrl: './theme-toggle.component.html',\n  styleUrls: ['./theme-toggle.component.css', '../../../styles/root.css'],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class ThemeToggleComponent {\n  private readonly key = inject(TUI_DARK_MODE_KEY);\n  private readonly storage = inject(WA_LOCAL_STORAGE);\n  private readonly media = inject(WA_WINDOW).matchMedia('(prefers-color-scheme: dark)');\n  private readonly darkMode = inject(TUI_DARK_MODE);\n  private readonly userAchievementsRepository = inject(UserAchievementsRepositoryService);\n  private readonly userAchievementsService = inject(UserAchievementsService);\n  private readonly alertService = inject(TuiAlertService);\n  private readonly configService = inject(ConfigService);\n\n  toggle = this.darkMode();\n  private toggleCount = 0;\n\n  constructor() {\n    // Инициализация темы из локального хранилища, если она есть\n    const savedTheme = this.storage.getItem(this.key);\n    if (savedTheme) {\n      this.toggle = savedTheme === 'true';\n      this.darkMode.set(this.toggle);\n      document.body.classList.toggle('dark-theme', this.toggle);\n    }\n  }\n\n  toggleTheme(): void {\n    this.toggle = !this.toggle;\n    this.darkMode.set(this.toggle);\n    document.body.classList.add('dark-theme');\n    document.body.classList.toggle('dark-theme', this.toggle);\n    this.storage.setItem(this.key, this.toggle.toString());\n\n    const userProjId = parseInt(localStorage.getItem('userProjId') || '0', 10);\n    this.toggleCount++;\n\n    // Если включён режим \"всегда ошибка\" — всегда негативный тест-кейс\n    if (this.userAchievementsService.getAlwaysFailMode()) {\n      const achievementId = this.toggle\n        ? this.configService.achievementIds.switchToDarkThemeFailed\n        : this.configService.achievementIds.switchToLightThemeFailed;\n      this.recordAchievement(userProjId, achievementId, `Тест-кейс: ошибка включения ${this.toggle ? 'тёмной' : 'светлой'} темы!`);\n      this.alertService.open(`Тест-кейс: ошибка переключения темы на ${this.toggle ? 'тёмную' : 'светлую'}!`, { appearance: 'error' }).subscribe();\n      return;\n    }\n    \n    // Логика достижений: чередуем успех и ошибку\n    if (this.toggleCount % 2 === 0) {\n      // Успешное переключение темы\n      const achievementId = this.toggle\n        ? this.configService.achievementIds.switchToDarkThemeSuccess\n        : this.configService.achievementIds.switchToLightThemeSuccess;\n      this.recordAchievement(userProjId, achievementId, `Успешно включена ${this.toggle ? 'тёмная' : 'светлая'} тема!`);\n      this.alertService.open(`Тема переключена на ${this.toggle ? 'тёмную' : 'светлую'}!`, { appearance: 'success' }).subscribe();\n    } else {\n      // Ошибка переключения темы\n      const achievementId = this.toggle\n        ? this.configService.achievementIds.switchToDarkThemeFailed\n        : this.configService.achievementIds.switchToLightThemeFailed;\n      this.recordAchievement(userProjId, achievementId, `Ошибка включения ${this.toggle ? 'тёмной' : 'светлой'} темы!`);\n      this.alertService.open(`Ошибка переключения темы на ${this.toggle ? 'тёмную' : 'светлую'}!`, { appearance: 'error' }).subscribe();\n    }\n  }\n\n  reset(): void {\n    const systemTheme = this.media.matches;\n    this.toggle = systemTheme;\n    this.darkMode.set(systemTheme);\n    this.storage.removeItem(this.key);\n    this.toggleCount = 0;\n\n    const userProjId = parseInt(localStorage.getItem('userProjId') || '0', 10);\n    this.recordAchievement(\n      userProjId,\n      this.configService.achievementIds.resetThemeSuccess,\n      'Тема сброшена к системной!'\n    );\n    this.alertService.open('Тема сброшена к системной!', { appearance: 'success' }).subscribe();\n  }\n\n  private recordAchievement(userProjId: number, achievementId: number, message: string): void {\n    if (userProjId  {\n        console.error('Ошибка при записи достижения:', err);\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n    \n  \n  \n    \n\n    \n                \n                    ./theme-toggle.component.css\n                \n                \n                \n                    ../../../styles/root.css\n                \n                @import 'variables.css';\n@import 'buttons.css';\n@import 'cards.css';\n@import 'navigation.css';\n@import 'header.css';\n@import 'carousel.css';\n@import 'icons.css';\n@import 'layout.css';\n@import 'tables.css';\n@import 'typography.css';\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AchievmentsPageForUserComponent', 'selector': 'app-achievments-page-for-user'},{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'ButtonComponent', 'selector': 'storybook-button'},{'name': 'CardItemComponent', 'selector': 'app-card-item'},{'name': 'CarouselImgComponent', 'selector': 'app-carousel-img'},{'name': 'DialogCategoryComponent', 'selector': 'app-dialog-category'},{'name': 'DialogImageComponent', 'selector': 'app-dialog-image'},{'name': 'DialogProductComponent', 'selector': 'app-dialog-product'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'storybook-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginProjComponent', 'selector': 'app-login-proj'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PageCartComponent', 'selector': 'app-page-cart'},{'name': 'PageCatalogItemComponent', 'selector': 'app-page-catalog-item'},{'name': 'PageComponent', 'selector': 'storybook-page'},{'name': 'PageItemFromCatalogComponent', 'selector': 'app-page-item-from-catalog'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RegisterProjComponent', 'selector': 'app-register-proj'},{'name': 'ThemeToggleComponent', 'selector': 'app-theme-toggle'},{'name': 'UserPageComponent', 'selector': 'app-user-page'},{'name': 'UserPageProjComponent', 'selector': 'app-user-page-proj'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ThemeToggleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stories/user.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n  name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserAchievementsRepositoryService.html":{"url":"injectables/UserAchievementsRepositoryService.html","title":"injectable - UserAchievementsRepositoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserAchievementsRepositoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/repositories/user-achievements-repository.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createUserAchievement\n                            \n                            \n                                getAllUserAchievements\n                            \n                            \n                                getCompletedAchievementsByUsername\n                            \n                            \n                                getUserAchievement\n                            \n                            \n                                handleAchievement\n                            \n                            \n                                unlockUserAchievement\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userAchievementsService: UserAchievementsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/repositories/user-achievements-repository.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userAchievementsService\n                                                  \n                                                        \n                                                                        UserAchievementsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createUserAchievement\n                        \n                    \n                \n            \n            \n                \ncreateUserAchievement(userProjId: number, achievementId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/user-achievements-repository.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userProjId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                achievementId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllUserAchievements\n                        \n                    \n                \n            \n            \n                \ngetAllUserAchievements()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/user-achievements-repository.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCompletedAchievementsByUsername\n                        \n                    \n                \n            \n            \n                \ngetCompletedAchievementsByUsername(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/user-achievements-repository.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserAchievement\n                        \n                    \n                \n            \n            \n                \ngetUserAchievement(userProjId: number, achievementId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/user-achievements-repository.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userProjId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                achievementId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleAchievement\n                        \n                    \n                \n            \n            \n                \nhandleAchievement(userProjId: number, achievementId: number, successMessage: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/user-achievements-repository.service.ts:42\n                        \n                    \n\n\n            \n                \n                        Универсальный метод для обработки достижения\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userProjId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Идентификатор пользователя\n\n                                            \n                                        \n                                        \n                                                achievementId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Идентификатор достижения\n\n                                            \n                                        \n                                        \n                                                successMessage\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Сообщение для уведомления\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unlockUserAchievement\n                        \n                    \n                \n            \n            \n                \nunlockUserAchievement(userProjId: number, achievementId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/user-achievements-repository.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userProjId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                achievementId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { IAchievement } from '../interface/IAchievement';\nimport { IUserHasAchievement } from '../interface/IUserHasAchievement';\nimport { UserAchievementsService } from '../services/user-achievements.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserAchievementsRepositoryService {\n  constructor(\n    private userAchievementsService: UserAchievementsService\n  ) {}\n\n  getAllUserAchievements(): Observable {\n    return this.userAchievementsService.getAllUserAchievements();\n  }\n\n  getUserAchievement(userProjId: number, achievementId: number): Observable {\n    return this.userAchievementsService.getUserAchievement(userProjId, achievementId);\n  }\n\n  createUserAchievement(userProjId: number, achievementId: number): Observable {\n    return this.userAchievementsService.createUserAchievement(userProjId, achievementId);\n  }\n\n  unlockUserAchievement(userProjId: number, achievementId: number): Observable {\n    return this.userAchievementsService.unlockUserAchievement(userProjId, achievementId);\n  }\n\n  getCompletedAchievementsByUsername(username: string): Observable {\n    return this.userAchievementsService.getCompletedAchievementsByUsername(username);\n  }\n\n  /**\n   * Универсальный метод для обработки достижения\n   * @param userProjId Идентификатор пользователя\n   * @param achievementId Идентификатор достижения\n   * @param successMessage Сообщение для уведомления\n   * @returns Observable\n   */\n  handleAchievement(\n    userProjId: number,\n    achievementId: number,\n    successMessage: string\n  ): Observable {\n    return this.userAchievementsService.handleAchievement(userProjId, achievementId, successMessage);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserAchievementsService.html":{"url":"injectables/UserAchievementsService.html","title":"injectable - UserAchievementsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserAchievementsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/user-achievements.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                ALWAYS_FAIL_KEY\n                            \n                            \n                                    Private\n                                    Readonly\n                                baseUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkUserAchievementExists\n                            \n                            \n                                createUserAchievement\n                            \n                            \n                                getAllUserAchievements\n                            \n                            \n                                getAlwaysFailMode\n                            \n                            \n                                getCompletedAchievementsByUsername\n                            \n                            \n                                    Private\n                                getFailedAchievementId\n                            \n                            \n                                getUserAchievement\n                            \n                            \n                                handleAchievement\n                            \n                            \n                                setAlwaysFailMode\n                            \n                            \n                                    Private\n                                simulateServerFailure\n                            \n                            \n                                unlockUserAchievement\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, configService: ConfigService, alertService: TuiAlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/user-achievements.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertService\n                                                  \n                                                        \n                                                                    TuiAlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkUserAchievementExists\n                        \n                    \n                \n            \n            \n                \ncheckUserAchievementExists(userProjId: number, achievementId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user-achievements.service.ts:108\n                        \n                    \n\n\n            \n                \n                        Проверка существования тест-кейса у пользователя\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userProjId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Идентификатор пользователя\n\n                                            \n                                        \n                                        \n                                                achievementId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Идентификатор тест-кейса\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createUserAchievement\n                        \n                    \n                \n            \n            \n                \ncreateUserAchievement(userProjId: number, achievementId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user-achievements.service.ts:66\n                        \n                    \n\n\n            \n                \n                        Создание достижения для пользователя\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userProjId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Идентификатор пользователя\n\n                                            \n                                        \n                                        \n                                                achievementId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Идентификатор достижения\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable с созданным достижением\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllUserAchievements\n                        \n                    \n                \n            \n            \n                \ngetAllUserAchievements()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user-achievements.service.ts:38\n                        \n                    \n\n\n            \n                \n                        Получение всех достижений пользователя\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable с массивом достижений\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAlwaysFailMode\n                        \n                    \n                \n            \n            \n                \ngetAlwaysFailMode()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user-achievements.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCompletedAchievementsByUsername\n                        \n                    \n                \n            \n            \n                \ngetCompletedAchievementsByUsername(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user-achievements.service.ts:94\n                        \n                    \n\n\n            \n                \n                        Получение завершенных достижений по имени пользователя\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Имя пользователя\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Observable с массивом завершенных достижений\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getFailedAchievementId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getFailedAchievementId(successAchievementId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user-achievements.service.ts:238\n                        \n                    \n\n\n            \n                \n                        Получение ID отрицательного тест-кейса на основе положительного\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                successAchievementId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID успешного тест-кейса\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                ID соответствующего отрицательного тест-кейса\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserAchievement\n                        \n                    \n                \n            \n            \n                \ngetUserAchievement(userProjId: number, achievementId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user-achievements.service.ts:52\n                        \n                    \n\n\n            \n                \n                        Получение конкретного достижения пользователя\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userProjId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Идентификатор пользователя\n\n                                            \n                                        \n                                        \n                                                achievementId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Идентификатор достижения\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable с достижением\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleAchievement\n                        \n                    \n                \n            \n            \n                \nhandleAchievement(userProjId: number, achievementId: number, successMessage: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user-achievements.service.ts:131\n                        \n                    \n\n\n            \n                \n                        Универсальный метод для обработки тест-кейса\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userProjId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Идентификатор пользователя проекта\n\n                                            \n                                        \n                                        \n                                                achievementId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Идентификатор тест-кейса\n\n                                            \n                                        \n                                        \n                                                successMessage\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Сообщение для успешного уведомления\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAlwaysFailMode\n                        \n                    \n                \n            \n            \n                \nsetAlwaysFailMode(value: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user-achievements.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        simulateServerFailure\n                        \n                    \n                \n            \n            \n                \n                        \n                    simulateServerFailure()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user-achievements.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unlockUserAchievement\n                        \n                    \n                \n            \n            \n                \nunlockUserAchievement(userProjId: number, achievementId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user-achievements.service.ts:80\n                        \n                    \n\n\n            \n                \n                        Разблокировка достижения для пользователя\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userProjId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Идентификатор пользователя\n\n                                            \n                                        \n                                        \n                                                achievementId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Идентификатор достижения\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                            Readonly\n                        ALWAYS_FAIL_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'alwaysFailMode'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/user-achievements.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '/api/UserAchievements'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/user-achievements.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { catchError, Observable, of, switchMap, tap, throwError } from 'rxjs';\nimport { IAchievement } from '../interface/IAchievement';\nimport { IUserHasAchievement } from '../interface/IUserHasAchievement';\nimport { ConfigService } from './config.service';\nimport { TuiAlertService } from '@taiga-ui/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserAchievementsService {\n  private readonly baseUrl = '/api/UserAchievements'; // Прокси для API\nprivate static readonly ALWAYS_FAIL_KEY = 'alwaysFailMode';\n\n  constructor(\n    private readonly http: HttpClient,\n    private readonly configService: ConfigService,\n    private readonly alertService: TuiAlertService\n  ) { }\n\nsetAlwaysFailMode(value: boolean) {\n  localStorage.setItem(UserAchievementsService.ALWAYS_FAIL_KEY, value ? '1' : '0');\n}\n\ngetAlwaysFailMode(): boolean {\n  return localStorage.getItem(UserAchievementsService.ALWAYS_FAIL_KEY) === '1';\n}\n\nprivate simulateServerFailure(): boolean {\n   return this.getAlwaysFailMode();\n}\n\n  /**\n   * Получение всех достижений пользователя\n   * @returns Observable с массивом достижений\n   */\n  getAllUserAchievements(): Observable {\n    if (this.simulateServerFailure()) {\n      return throwError(() => new Error('Имитация сбоя сервера'));\n    }\n    return this.http.get(this.baseUrl)\n\n  }\n\n  /**\n   * Получение конкретного достижения пользователя\n   * @param userProjId Идентификатор пользователя\n   * @param achievementId Идентификатор достижения\n   * @returns Observable с достижением\n   */\n  getUserAchievement(userProjId: number, achievementId: number): Observable {\n    if (this.simulateServerFailure()) {\n      return throwError(() => new Error('Имитация сбоя сервера'));\n    }\n    return this.http.get(`${this.baseUrl}/${userProjId}/${achievementId}`)\n\n  }\n\n  /**\n   * Создание достижения для пользователя\n   * @param userProjId Идентификатор пользователя\n   * @param achievementId Идентификатор достижения\n   * @returns Observable с созданным достижением\n   */\n  createUserAchievement(userProjId: number, achievementId: number): Observable {\n    if (this.simulateServerFailure()) {\n      return throwError(() => new Error('Имитация сбоя сервера'));\n    }\n    return this.http\n      .post(`${this.baseUrl}/Create/${userProjId}/${achievementId}`, {})\n  }\n\n  /**\n   * Разблокировка достижения для пользователя\n   * @param userProjId Идентификатор пользователя\n   * @param achievementId Идентификатор достижения\n   * @returns Observable\n   */\n  unlockUserAchievement(userProjId: number, achievementId: number): Observable {\n    if (this.simulateServerFailure()) {\n      return throwError(() => new Error('Имитация сбоя сервера'));\n    }\n    return this.http\n      .put(`${this.baseUrl}/Unlock/${userProjId}/${achievementId}`, {})\n\n  }\n\n  /**\n   * Получение завершенных достижений по имени пользователя\n   * @param username Имя пользователя\n   * @returns Observable с массивом завершенных достижений\n   */\n  getCompletedAchievementsByUsername(username: string): Observable {\n    if (this.simulateServerFailure()) {\n      return throwError(() => new Error('Имитация сбоя сервера'));\n    }\n    return this.http\n      .get(`${this.baseUrl}/Completed/${username}`)\n  }\n\n  /**\n    * Проверка существования тест-кейса у пользователя\n    * @param userProjId Идентификатор пользователя\n    * @param achievementId Идентификатор тест-кейса\n    * @returns Observable\n    */\n  checkUserAchievementExists(userProjId: number, achievementId: number): Observable {\n    if (this.simulateServerFailure()) {\n      return throwError(() => new Error('Имитация сбоя сервера'));\n    }\n    return this.http.get(`${this.baseUrl}/Exists/${userProjId}/${achievementId}`).pipe(\n      catchError(error => {\n        if (error.status === this.configService.httpStatusCodes.notFound) {\n          console.warn(`Тест-кейс ${achievementId} или пользователь ${userProjId} не найдены`);\n          return of(false);\n        }\n        console.error('Ошибка при проверке тест-кейса:', error);\n        return of(false);\n      })\n    );\n  }\n\n  /**\n    * Универсальный метод для обработки тест-кейса\n    * @param userProjId Идентификатор пользователя проекта\n    * @param achievementId Идентификатор тест-кейса\n    * @param successMessage Сообщение для успешного уведомления\n    * @returns Observable\n    */\n  handleAchievement(\n    userProjId: number,\n    achievementId: number,\n    successMessage: string\n  ): Observable {\n    if (userProjId  {\n          if (result === null) {\n            // Тест-кейс уже существует\n            this.alertService\n              .open('Тест-кейс ошибки уже выполнен!', { appearance: 'info' })\n              .subscribe();\n            return of(void 0);\n          }\n          return this.unlockUserAchievement(userProjId, failedAchievementId);\n        }),\n        tap(() => {\n          this.alertService\n            .open(`Тест-кейс ошибки: ${successMessage.replace('выполнен', 'ошибка')}`, {\n              appearance: 'error'\n            })\n            .subscribe();\n        }),\n        catchError(error => {\n          console.error(`Ошибка при регистрации отрицательного тест-кейса ${failedAchievementId}:`, error);\n          return of(void 0);\n        })\n      );\n    }\n\n    // Нормальная обработка тест-кейса\n    return this.checkUserAchievementExists(userProjId, achievementId).pipe(\n      switchMap(exists => {\n        if (exists) {\n          console.log(`Тест-кейс ${achievementId} уже выполнен для userProjId ${userProjId}`);\n          this.alertService\n            .open('Тест-кейс уже выполнен!', { appearance: 'info' })\n            .subscribe();\n          return of(void 0); // Ничего не делаем, если тест-кейс уже есть\n        }\n        return this.createUserAchievement(userProjId, achievementId).pipe(\n          switchMap(result => {\n            if (result === null) {\n              // Тест-кейс уже существует\n              this.alertService\n                .open('Тест-кейс успешно выполнен!', { appearance: 'success' })\n                .subscribe();\n              return of(void 0);\n            }\n            return this.unlockUserAchievement(userProjId, achievementId);\n          }),\n          tap(() => {\n            this.alertService.open(successMessage, { appearance: 'success' }).subscribe();\n          })\n        );\n      }),\n      catchError(error => {\n        console.error(`Ошибка при обработке тест-кейса ${achievementId} для userProjId ${userProjId}:`, error);\n        const failedAchievementId = this.getFailedAchievementId(achievementId);\n        // Регистрируем отрицательный тест-кейс при ошибке\n        return this.createUserAchievement(userProjId, failedAchievementId).pipe(\n          switchMap(result => {\n            if (result === null) {\n              // Ошибочный тест-кейс уже существует\n              this.alertService\n                .open('Тест-кейс ошибки уже выполнен!', { appearance: 'info' })\n                .subscribe();\n              return of(void 0);\n            }\n            return this.unlockUserAchievement(userProjId, failedAchievementId);\n          }),\n          tap(() => {\n            this.alertService\n              .open(`Тест-кейс ошибки: ${successMessage.replace('выполнен', 'ошибка')}`, {\n                appearance: 'error'\n              })\n              .subscribe();\n          }),\n          catchError(err => {\n            console.error(`Ошибка при регистрации отрицательного тест-кейса ${failedAchievementId}:`, err);\n            return of(void 0);\n          })\n        );\n      })\n    );\n  }\n\n  /**\n   * Получение ID отрицательного тест-кейса на основе положительного\n   * @param successAchievementId ID успешного тест-кейса\n   * @returns ID соответствующего отрицательного тест-кейса\n   */\n  private getFailedAchievementId(successAchievementId: number): number {\n    const successToFailedMap: { [key: number]: number } = {\n      [this.configService.achievementIds.loginSuccess]: this.configService.achievementIds.loginFailed,\n      [this.configService.achievementIds.registerSuccess]: this.configService.achievementIds.registerFailed,\n      [this.configService.achievementIds.addToCartSuccess]: this.configService.achievementIds.addToCartFailed,\n      [this.configService.achievementIds.checkoutSuccess]: this.configService.achievementIds.checkoutFailed,\n      [this.configService.achievementIds.viewProductSuccess]: this.configService.achievementIds.viewProductFailed,\n      [this.configService.achievementIds.createProductSuccess]: this.configService.achievementIds.createProductFailed,\n      [this.configService.achievementIds.updateProfileSuccess]: this.configService.achievementIds.updateProfileFailed,\n      [this.configService.achievementIds.addImageSuccess]: this.configService.achievementIds.addImageFailed,\n      [this.configService.achievementIds.addCategorySuccess]: this.configService.achievementIds.addCategoryFailed,\n      [this.configService.achievementIds.switchToLightThemeSuccess]:\n        this.configService.achievementIds.switchToLightThemeFailed,\n      [this.configService.achievementIds.switchToDarkThemeSuccess]:\n        this.configService.achievementIds.switchToDarkThemeFailed,\n      [this.configService.achievementIds.removeFromCartSuccess]:\n        this.configService.achievementIds.removeFromCartFailed,\n      [this.configService.achievementIds.updateCartQuantitySuccess]:\n        this.configService.achievementIds.updateCartQuantityFailed,\n      [this.configService.achievementIds.loadProductsSuccess]: this.configService.achievementIds.loadProductsFailed,\n      [this.configService.achievementIds.loadProductInfoSuccess]:\n        this.configService.achievementIds.loadProductInfoFailed,\n      [this.configService.achievementIds.navigateToProductSuccess]:\n        this.configService.achievementIds.navigateToProductFailed,\n      [this.configService.achievementIds.toggleThemeSuccess]: this.configService.achievementIds.buttonNotWorking,\n      [this.configService.achievementIds.resetThemeSuccess]: this.configService.achievementIds.buttonNotWorking,\n      [this.configService.achievementIds.openProductDialogSuccess]:\n        this.configService.achievementIds.buttonNotWorking,\n      [this.configService.achievementIds.openCategoryDialogSuccess]:\n        this.configService.achievementIds.buttonNotWorking,\n      [this.configService.achievementIds.openImageDialogSuccess]: this.configService.achievementIds.buttonNotWorking,\n      [this.configService.achievementIds.logoutProjSuccess]: this.configService.achievementIds.logoutProjFailed,\n      [this.configService.achievementIds.updateCategorySuccess]:\n        this.configService.achievementIds.updateCategoryFailed,\n      [this.configService.achievementIds.updateImageSuccess]: this.configService.achievementIds.updateImageFailed,\n      [this.configService.achievementIds.updateProductSuccess]: this.configService.achievementIds.updateProductFailed,\n    };\n\n    return successToFailedMap[successAchievementId] || this.configService.achievementIds.buttonNotWorking;\n  }\n\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserPageComponent.html":{"url":"components/UserPageComponent.html","title":"component - UserPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/page/user-page/user-page.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-page\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                                DialogCategoryComponent\n                                DialogImageComponent\n                                DialogProductComponent\n                            FormsModule\n                            ReactiveFormsModule\n                            TuiAutoFocus\n                            TuiInputModule\n                            TuiSelectModule\n                            TuiSlider\n                            TuiTextfield\n                            TuiTextfieldControllerModule\n                            TuiButton\n                            TuiDataListWrapper\n                            AsyncPipe\n                            NgIf\n                            TuiFiles\n                            TuiLink\n                            TuiIcon\n                            TuiAvatar\n                            TuiIconPipe\n                                ThemeToggleComponent\n                \n            \n\n            \n                styleUrls\n                ./user-page.component.css,../../../styles/root.css\n            \n\n\n\n            \n                templateUrl\n                ./user-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                authProjService\n                            \n                            \n                                categories\n                            \n                            \n                                    Private\n                                    Readonly\n                                categoryDialog\n                            \n                            \n                                    Private\n                                    Readonly\n                                dialogService\n                            \n                            \n                                editCategoryForm\n                            \n                            \n                                editImageForm\n                            \n                            \n                                editProductForm\n                            \n                            \n                                    Private\n                                    Readonly\n                                imageDialog\n                            \n                            \n                                images\n                            \n                            \n                                isProjAuthenticated\n                            \n                            \n                                    Private\n                                    Readonly\n                                productDialog\n                            \n                            \n                                products\n                            \n                            \n                                    Private\n                                    Readonly\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkAuthStatus\n                            \n                            \n                                editCategoryById\n                            \n                            \n                                editImageById\n                            \n                            \n                                editProductById\n                            \n                            \n                                logoutProj\n                            \n                            \n                                navigateTo\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(productsRepository: ProductsRepositoryService, categoriesRepository: CategoriesRepositoryService, imagesRepository: ImagesRepositoryService)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/page/user-page/user-page.component.ts:89\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        productsRepository\n                                                  \n                                                        \n                                                                        ProductsRepositoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        categoriesRepository\n                                                  \n                                                        \n                                                                        CategoriesRepositoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        imagesRepository\n                                                  \n                                                        \n                                                                        ImagesRepositoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkAuthStatus\n                        \n                    \n                \n            \n            \n                \ncheckAuthStatus()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/page/user-page/user-page.component.ts:105\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editCategoryById\n                        \n                    \n                \n            \n            \n                \neditCategoryById(id: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/page/user-page/user-page.component.ts:177\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editImageById\n                        \n                    \n                \n            \n            \n                \neditImageById(id: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/page/user-page/user-page.component.ts:196\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editProductById\n                        \n                    \n                \n            \n            \n                \neditProductById(id: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/page/user-page/user-page.component.ts:158\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logoutProj\n                        \n                    \n                \n            \n            \n                \nlogoutProj()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/page/user-page/user-page.component.ts:111\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        navigateTo\n                        \n                    \n                \n            \n            \n                \nnavigateTo(path: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/page/user-page/user-page.component.ts:118\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                path\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/page/user-page/user-page.component.ts:98\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDialog\n                        \n                    \n                \n            \n            \n                \nopenDialog(component: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/page/user-page/user-page.component.ts:122\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                component\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        authProjService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthProjService)\n                    \n                \n                    \n                        \n                                Defined in src/app/data/page/user-page/user-page.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        categories\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IDpCategory[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/data/page/user-page/user-page.component.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        categoryDialog\n                        \n                    \n                \n            \n                \n                    \n                        Default value : tuiDialog(DialogCategoryComponent, {\n    dismissible: true,\n    label: 'Добавить запись о категории',\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/data/page/user-page/user-page.component.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        dialogService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TuiDialogService)\n                    \n                \n                    \n                        \n                                Defined in src/app/data/page/user-page/user-page.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editCategoryForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    id: new FormControl(null, Validators.required)\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/data/page/user-page/user-page.component.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editImageForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    id: new FormControl(null, Validators.required)\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/data/page/user-page/user-page.component.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editProductForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    id: new FormControl(null, Validators.required)\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/data/page/user-page/user-page.component.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        imageDialog\n                        \n                    \n                \n            \n                \n                    \n                        Default value : tuiDialog(DialogImageComponent, {\n    dismissible: true,\n    label: 'Загрузить изображение продукта',\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/data/page/user-page/user-page.component.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        images\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IDpImage[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/data/page/user-page/user-page.component.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isProjAuthenticated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/data/page/user-page/user-page.component.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        productDialog\n                        \n                    \n                \n            \n                \n                    \n                        Default value : tuiDialog(DialogProductComponent, {\n    dismissible: true,\n    label: 'Добавить запись о продукте',\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/data/page/user-page/user-page.component.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        products\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IDpProduct[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/data/page/user-page/user-page.component.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/data/page/user-page/user-page.component.ts:56\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, CUSTOM_ELEMENTS_SCHEMA, inject } from '@angular/core';\nimport { AsyncPipe, CommonModule, NgIf } from '@angular/common';\nimport { DialogCategoryComponent } from \"../../components/dialog-category/dialog-category.component\";\nimport { DialogImageComponent } from \"../../components/dialog-image/dialog-image.component\";\nimport { DialogProductComponent } from \"../../components/dialog-product/dialog-product.component\";\nimport { FormControl, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { TuiAutoFocus } from '@taiga-ui/cdk';\nimport { TuiButton, TuiDialogService, TuiIcon, TuiIconPipe, TuiLink, TuiTextfield } from '@taiga-ui/core';\nimport { TuiAvatar, TuiDataListWrapper, TuiFiles, TuiSlider } from '@taiga-ui/kit';\nimport { TuiInputModule, TuiSelectModule, TuiTextfieldControllerModule } from '@taiga-ui/legacy';\nimport { tuiDialog } from '@taiga-ui/core';\nimport { IDpCategory } from '../../../interface/IDpCategory';\nimport { IDpProduct } from '../../../interface/IDpProduct';\nimport { IDpImage } from '../../../interface/IDpImage';\nimport { AuthService } from '../../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { AuthProjService } from '../../../services/auth-proj.service';\nimport { CategoriesRepositoryService } from '../../../repositories/categories-repository.service';\nimport { ImagesRepositoryService } from '../../../repositories/images-repository.service';\nimport { ProductsRepositoryService } from '../../../repositories/products-repository.service';\nimport { ThemeToggleComponent } from '../../components/theme-toggle/theme-toggle.component';\n\n@Component({\n  selector: 'app-user-page',\n  imports: [\n    CommonModule,\n    DialogCategoryComponent,\n    DialogImageComponent,\n    DialogProductComponent,\n    FormsModule,\n    ReactiveFormsModule,\n    TuiAutoFocus,\n    TuiInputModule,\n    TuiSelectModule,\n    TuiSlider,\n    TuiTextfield,\n    TuiTextfieldControllerModule,\n    TuiButton,\n    TuiDataListWrapper,\n    AsyncPipe,\n    NgIf,\n    TuiFiles,\n    TuiLink,\n    TuiIcon,\n    TuiAvatar,\n    TuiIconPipe,\n    ThemeToggleComponent\n  ],\n  templateUrl: './user-page.component.html',\n  styleUrls: ['./user-page.component.css', '../../../styles/root.css'],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class UserPageComponent {\n  private readonly dialogService = inject(TuiDialogService);\n  private readonly authProjService = inject(AuthProjService);\n  private readonly router = inject(Router);\n  products: IDpProduct[] = [];\n  categories: IDpCategory[] = [];\n  images: IDpImage[] = [];\n\n  editProductForm = new FormGroup({\n    id: new FormControl(null, Validators.required)\n  });\n\n  editCategoryForm = new FormGroup({\n    id: new FormControl(null, Validators.required)\n  });\n\n  editImageForm = new FormGroup({\n    id: new FormControl(null, Validators.required)\n  });\n\n\n  isProjAuthenticated: boolean = false;\n\n  private readonly productDialog = tuiDialog(DialogProductComponent, {\n    dismissible: true,\n    label: 'Добавить запись о продукте',\n  });\n\n  private readonly categoryDialog = tuiDialog(DialogCategoryComponent, {\n    dismissible: true,\n    label: 'Добавить запись о категории',\n  });\n\n  private readonly imageDialog = tuiDialog(DialogImageComponent, {\n    dismissible: true,\n    label: 'Загрузить изображение продукта',\n  });\n\n  constructor(\n    private productsRepository: ProductsRepositoryService,\n    private categoriesRepository: CategoriesRepositoryService,\n    private imagesRepository: ImagesRepositoryService\n  ) { }\n\n\n  ngOnInit(): void {\n    this.authProjService.isAuthenticated$.subscribe(isAuthenticated => {\n      this.isProjAuthenticated = isAuthenticated;\n    });\n    this.checkAuthStatus();\n  }\n\n  checkAuthStatus(): void {\n    const token = localStorage.getItem('projToken');\n    this.isProjAuthenticated = !!token;\n    this.authProjService.setAuthenticated(this.isProjAuthenticated);\n  }\n\n  logoutProj(): void {\n    localStorage.removeItem('projToken'); // Удаляем 'projToken'\n    localStorage.removeItem('userProjId');\n    this.authProjService.setAuthenticated(false);\n    this.router.navigate(['/']);\n  }\n\n  navigateTo(path: string): void {\n    this.router.navigate([path]);\n  }\n\n  openDialog(component: string): void {\n    switch (component) {\n      case 'product':\n        this.productDialog({} as IDpProduct).subscribe({\n          next: (data) => {\n            console.log('Creating product with data:', JSON.stringify(data, null, 2));\n            this.products.push(data); // Добавить в массив\n          },\n          complete: () => {\n            console.info('Product dialog closed');\n          }\n        });\n        break;\n      case 'category':\n        this.categoryDialog({} as IDpCategory).subscribe({\n          next: (data) => {\n            console.log('Creating category with data:', JSON.stringify(data, null, 2));\n          },\n          complete: () => {\n            console.info('Category dialog closed');\n          }\n        });\n        break;\n      case 'image':\n        this.imageDialog({} as IDpImage).subscribe({\n          next: (data) => {\n            console.log('Uploading image with data:', JSON.stringify(data, null, 2));\n          },\n          complete: () => {\n            console.info('Image dialog closed');\n          }\n        });\n        break;\n    }\n  }\n\n  editProductById(id: number | null): void {\n    if (id == null) return;\n    this.productsRepository.getProductById(id).subscribe({\n      next: (product) => {\n        this.productDialog(product).subscribe({\n          next: (data) => {\n            console.log('Updated product:', data);\n          },\n          complete: () => {\n            console.info('Product edit dialog closed');\n          }\n        });\n      },\n      error: () => {\n        console.warn('Продукт с таким ID не найден');\n      }\n    });\n  }\n\n  editCategoryById(id: number | null): void {\n    if (id == null) return;\n    this.categoriesRepository.getDpCategoryById(id).subscribe({\n      next: (category) => {\n        this.categoryDialog(category).subscribe({\n          next: (data) => {\n            console.log('Updated category:', data);\n          },\n          complete: () => {\n            console.info('Category edit dialog closed');\n          }\n        });\n      },\n      error: () => {\n        console.warn('Категория с таким ID не найдена');\n      }\n    });\n  }\n\n  editImageById(id: number | null): void {\n    if (id == null) return;\n    this.imagesRepository.getDpImageById(id).subscribe({\n      next: (image) => {\n        this.imageDialog(image).subscribe({\n          next: (data) => {\n            console.log('Updated image:', data);\n          },\n          complete: () => {\n            console.info('Image edit dialog closed');\n          }\n        });\n      },\n      error: () => {\n        console.warn('Изображение с таким ID не найдено');\n      }\n    });\n  }\n}\n    \n\n    \n        \n  \n    \n      Экран тест пользователя\n      \n      \n      Переключение темы приложения\n      \n    \n  \n\n  \n    \n      Добавить продукт\n    \n    \n      Добавить категорию\n    \n    \n      Добавить изображение\n    \n  \n\n  \n    \n      ID Продукта\n    \n    \n      Редактировать продукт\n    \n  \n\n  \n    \n      ID Категории\n    \n    \n      Редактировать категорию\n    \n  \n\n  \n    \n      ID Изображения\n    \n    \n      Редактировать изображение\n    \n  \n\n    \n\n    \n                \n                    ./user-page.component.css\n                \n                @import '../../../styles/variables.css';\n\n:host {\n    display: block;\n    padding: 1.5rem 1rem; /* 24px 16px */\n    box-sizing: border-box;\n    min-height: 100vh;\n}\n\n.user-page-content {\n    padding: 1.25rem; /* 20px */\n    margin: 0 auto;\n    max-width: 800px; /* Компактная ширина */\n    border-radius: var(--button-border-radius); /* 6px */\n    display: flex;\n    flex-direction: column;\n    gap: 1.25rem; /* Уменьшен с 1.5rem для компактности */\n}\n\n/* Стили для заголовка */\nh1 {\n    font-size: 1.75rem;\n    color: var(--tui-primary);\n    margin: 0;\n    display: flex;\n    align-items: center;\n    gap: 0.5rem;\n    flex-wrap: wrap;\n}\n\n/* Стили для кнопок Taiga UI */\nbutton[tuiButton] {\n    margin: 0;\n    padding: var(--button-padding); /* Из variables.css */\n    color: var(--tui-text-01); /* Текст кнопки */\n}\n\n/* Группа кнопок */\n.user-page-content > div.action-buttons {\n    display: flex;\n    flex-wrap: wrap;\n    gap: 0.75rem; /* 12px между кнопками */\n}\n\n/* Стили для форм */\nform {\n    display: flex;\n    flex-direction: column;\n    gap: 0.75rem; /* 12px внутри формы */\n}\n\n/* Стили для инпутов Taiga UI */\ntui-input {\n    max-width: 200px; /* Компактная ширина */\n}\n\n/* Стили для текстовых элементов */\np {\n    margin: 0.5rem 0;\n    color: var(--tui-text-01);\n    font-size: 1rem;\n    line-height: 1.5;\n}\n\n/* Адаптивность */\n@media (max-width: 768px) {\n    :host {\n        padding: 1rem 0.5rem; /* 16px 8px */\n    }\n\n    .user-page-content {\n        padding: 0.75rem; /* 12px */\n        max-width: 100%;\n        border-radius: 0.5rem; /* 8px */\n        gap: 1rem; /* 16px */\n    }\n\n    h1 {\n        font-size: 1.5rem;\n        gap: 0.25rem;\n    }\n\n    tui-input {\n        max-width: 100%; /* Полная ширина */\n    }\n\n    .user-page-content > div.action-buttons {\n        flex-direction: column;\n        gap: 0.5rem; /* 8px */\n    }\n\n    form {\n        gap: 0.5rem; /* 8px */\n    }\n}\n\n/* Темная тема */\n[data-theme=\"dark\"] :host {\n    background: var(--background-color); /* Фон страницы */\n    color: var(--text-color-dark); /* Темный текст */\n}\n\n[data-theme=\"dark\"] .user-page-content {\n    background: var(--card-background-color); /* Фон карточки */\n    box-shadow: var(--card-shadow); /* Тень */\n}\n\n[data-theme=\"dark\"] h1 {\n    color: var(--tui-primary); /* Акцентный цвет */\n}\n\n[data-theme=\"dark\"] p {\n    color: var(--tui-text-01); /* Светлый текст */\n}\n\n[data-theme=\"dark\"] button[tuiButton] {\n    color: var(--tui-text-01); /* Светлый текст для кнопок */\n    background: var(--button-background-color); /* Фон из variables.css */\n}\n\n[data-theme=\"dark\"] button[tuiButton]:hover {\n    background: var(--button-background-color-hover);\n}\n\n[data-theme=\"dark\"] tui-input {\n    color: var(--tui-text-01); /* Светлый текст в инпутах */\n    background: var(--tui-base-01); /* Фон инпута */\n    border-color: var(--tui-base-03); /* Граница */\n}\n                \n                    ../../../styles/root.css\n                \n                @import 'variables.css';\n@import 'buttons.css';\n@import 'cards.css';\n@import 'navigation.css';\n@import 'header.css';\n@import 'carousel.css';\n@import 'icons.css';\n@import 'layout.css';\n@import 'tables.css';\n@import 'typography.css';\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Экран тест пользователя                  Переключение темы приложения                        Добавить продукт              Добавить категорию              Добавить изображение                  ID Продукта              Редактировать продукт                  ID Категории              Редактировать категорию                  ID Изображения              Редактировать изображение      '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AchievmentsPageForUserComponent', 'selector': 'app-achievments-page-for-user'},{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'ButtonComponent', 'selector': 'storybook-button'},{'name': 'CardItemComponent', 'selector': 'app-card-item'},{'name': 'CarouselImgComponent', 'selector': 'app-carousel-img'},{'name': 'DialogCategoryComponent', 'selector': 'app-dialog-category'},{'name': 'DialogImageComponent', 'selector': 'app-dialog-image'},{'name': 'DialogProductComponent', 'selector': 'app-dialog-product'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'storybook-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginProjComponent', 'selector': 'app-login-proj'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PageCartComponent', 'selector': 'app-page-cart'},{'name': 'PageCatalogItemComponent', 'selector': 'app-page-catalog-item'},{'name': 'PageComponent', 'selector': 'storybook-page'},{'name': 'PageItemFromCatalogComponent', 'selector': 'app-page-item-from-catalog'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RegisterProjComponent', 'selector': 'app-register-proj'},{'name': 'ThemeToggleComponent', 'selector': 'app-theme-toggle'},{'name': 'UserPageComponent', 'selector': 'app-user-page'},{'name': 'UserPageProjComponent', 'selector': 'app-user-page-proj'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserPageProjComponent.html":{"url":"components/UserPageProjComponent.html","title":"component - UserPageProjComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserPageProjComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/data/page/user-page-proj/user-page-proj.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-page-proj\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            ReactiveFormsModule\n                            TuiInputModule\n                            TuiSelectModule\n                            TuiSlider\n                            TuiTextfield\n                            TuiTextfieldControllerModule\n                            TuiButton\n                            TuiDataListWrapper\n                            AsyncPipe\n                            NgIf\n                            TuiFiles\n                            TuiLink\n                                AchievmentsPageForUserComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./user-page-proj.component.html\n            \n\n\n\n            \n                styleUrl\n                ./user-page-proj.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                alwaysFailMode\n                            \n                            \n                                    Private\n                                    Readonly\n                                authProjService\n                            \n                            \n                                isProjAuthenticated\n                            \n                            \n                                    Private\n                                logoutAttempt\n                            \n                            \n                                    Private\n                                    Readonly\n                                router\n                            \n                            \n                                    Private\n                                    Readonly\n                                userAchievementsRepository\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkAuthStatus\n                            \n                            \n                                logoutProj\n                            \n                            \n                                navigateTo\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toggleAlwaysFail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, userAchievementsService: UserAchievementsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/page/user-page-proj/user-page-proj.component.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userAchievementsService\n                                                  \n                                                        \n                                                                        UserAchievementsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkAuthStatus\n                        \n                    \n                \n            \n            \n                \ncheckAuthStatus()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/page/user-page-proj/user-page-proj.component.ts:85\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logoutProj\n                        \n                    \n                \n            \n            \n                \nlogoutProj()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/page/user-page-proj/user-page-proj.component.ts:91\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        navigateTo\n                        \n                    \n                \n            \n            \n                \nnavigateTo(path: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/page/user-page-proj/user-page-proj.component.ts:112\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                path\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/page/user-page-proj/user-page-proj.component.ts:49\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleAlwaysFail\n                        \n                    \n                \n            \n            \n                \ntoggleAlwaysFail()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/data/page/user-page-proj/user-page-proj.component.ts:81\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        alwaysFailMode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/data/page/user-page-proj/user-page-proj.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        authProjService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthProjService)\n                    \n                \n                    \n                        \n                                Defined in src/app/data/page/user-page-proj/user-page-proj.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isProjAuthenticated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/data/page/user-page-proj/user-page-proj.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logoutAttempt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/data/page/user-page-proj/user-page-proj.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/data/page/user-page-proj/user-page-proj.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        userAchievementsRepository\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UserAchievementsRepositoryService)\n                    \n                \n                    \n                        \n                                Defined in src/app/data/page/user-page-proj/user-page-proj.component.ts:39\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthProjService } from '../../../services/auth-proj.service';\nimport { CommonModule, AsyncPipe, NgIf } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TuiTextfield, TuiButton, TuiLink, TuiIcon, TuiIconPipe } from '@taiga-ui/core';\nimport { TuiSlider, TuiDataListWrapper, TuiFiles, TuiAvatar } from '@taiga-ui/kit';\nimport { TuiInputModule, TuiSelectModule, TuiTextfieldControllerModule } from '@taiga-ui/legacy';\nimport { AchievmentsPageForUserComponent } from '../achievments-page-for-user/achievments-page-for-user.component';\nimport { UserAchievementsRepositoryService } from '../../../repositories/user-achievements-repository.service';\nimport { ConfigService } from '../../../services/config.service';\nimport { UserAchievementsService } from '../../../services/user-achievements.service';\n\n@Component({\n  selector: 'app-user-page-proj',\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TuiInputModule,\n    TuiSelectModule,\n    TuiSlider,\n    TuiTextfield,\n    TuiTextfieldControllerModule,\n    TuiButton,\n    TuiDataListWrapper,\n    AsyncPipe,\n    NgIf,\n    TuiFiles,\n    TuiLink,\n    AchievmentsPageForUserComponent\n  ],\n  templateUrl: './user-page-proj.component.html',\n  styleUrl: './user-page-proj.component.css'\n})\nexport class UserPageProjComponent {\n  private readonly authProjService = inject(AuthProjService);\n  private readonly router = inject(Router);\n  private readonly userAchievementsRepository = inject(UserAchievementsRepositoryService);\n  alwaysFailMode = false;\n  isProjAuthenticated: boolean = false;\n  private logoutAttempt = 0;\n\n  constructor(\n    private readonly configService: ConfigService = inject(ConfigService),\n    private userAchievementsService: UserAchievementsService = inject(UserAchievementsService)\n  ) { }\n\n  ngOnInit(): void {\n    const userProjId = parseInt(localStorage.getItem('userProjId') || '0', 10);\n    this.alwaysFailMode = this.userAchievementsService.getAlwaysFailMode();\n    // Случайно определяем успех или ошибку (50/50)\n    const isSuccess = Math.random() \n    \n\n    \n         Авторизация пользователя с тестами\n  Выйти из аккаунта пользователя с тестами\n  \n  \n  Всегда имитировать ошибку тест-кейсов\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' Авторизация пользователя с тестами  Выйти из аккаунта пользователя с тестами      Всегда имитировать ошибку тест-кейсов'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AchievmentsPageForUserComponent', 'selector': 'app-achievments-page-for-user'},{'name': 'AlertDeleteComponent', 'selector': 'app-alert-on-delete'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonComponent', 'selector': 'app-back-button'},{'name': 'ButtonComponent', 'selector': 'storybook-button'},{'name': 'CardItemComponent', 'selector': 'app-card-item'},{'name': 'CarouselImgComponent', 'selector': 'app-carousel-img'},{'name': 'DialogCategoryComponent', 'selector': 'app-dialog-category'},{'name': 'DialogImageComponent', 'selector': 'app-dialog-image'},{'name': 'DialogProductComponent', 'selector': 'app-dialog-product'},{'name': 'FilterByInputComponent', 'selector': 'app-filter-by-input'},{'name': 'HeaderComponent', 'selector': 'storybook-header'},{'name': 'IconTrashComponent', 'selector': 'app-icon-trash'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginProjComponent', 'selector': 'app-login-proj'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PageCartComponent', 'selector': 'app-page-cart'},{'name': 'PageCatalogItemComponent', 'selector': 'app-page-catalog-item'},{'name': 'PageComponent', 'selector': 'storybook-page'},{'name': 'PageItemFromCatalogComponent', 'selector': 'app-page-item-from-catalog'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RegisterProjComponent', 'selector': 'app-register-proj'},{'name': 'ThemeToggleComponent', 'selector': 'app-theme-toggle'},{'name': 'UserPageComponent', 'selector': 'app-user-page'},{'name': 'UserPageProjComponent', 'selector': 'app-user-page-proj'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserPageProjComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserProjsRepositoryService.html":{"url":"injectables/UserProjsRepositoryService.html","title":"injectable - UserProjsRepositoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserProjsRepositoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/repositories/user-projs-repository.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createDpUserProj\n                            \n                            \n                                deleteDpUserProj\n                            \n                            \n                                getAllDpUserProjs\n                            \n                            \n                                getDpUserProjById\n                            \n                            \n                                updateDpUserProj\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dpUserProjsService: DpUserProjsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/repositories/user-projs-repository.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dpUserProjsService\n                                                  \n                                                        \n                                                                        DpUserProjsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createDpUserProj\n                        \n                    \n                \n            \n            \n                \ncreateDpUserProj(dpUserProj: IDpUserProj)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/user-projs-repository.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dpUserProj\n                                            \n                                                            IDpUserProj\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteDpUserProj\n                        \n                    \n                \n            \n            \n                \ndeleteDpUserProj(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/user-projs-repository.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllDpUserProjs\n                        \n                    \n                \n            \n            \n                \ngetAllDpUserProjs()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/user-projs-repository.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDpUserProjById\n                        \n                    \n                \n            \n            \n                \ngetDpUserProjById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/user-projs-repository.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateDpUserProj\n                        \n                    \n                \n            \n            \n                \nupdateDpUserProj(id: number, dpUserProj: IDpUserProj)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/user-projs-repository.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dpUserProj\n                                            \n                                                            IDpUserProj\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { IDpUserProj } from '../interface/IDpUserProj';\nimport { DpUserProjsService } from '../services/dp-user-projs.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserProjsRepositoryService {\n  constructor(private dpUserProjsService: DpUserProjsService) {}\n\n  getAllDpUserProjs(): Observable {\n    return this.dpUserProjsService.getAllDpUserProjs();\n  }\n\n  getDpUserProjById(id: number): Observable {\n    return this.dpUserProjsService.getDpUserProjById(id);\n  }\n\n  createDpUserProj(dpUserProj: IDpUserProj): Observable {\n    return this.dpUserProjsService.createDpUserProj(dpUserProj);\n  }\n\n  updateDpUserProj(id: number, dpUserProj: IDpUserProj): Observable {\n    return this.dpUserProjsService.updateDpUserProj(id, dpUserProj);\n  }\n\n  deleteDpUserProj(id: number): Observable {\n    return this.dpUserProjsService.deleteDpUserProj(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersRepositoryService.html":{"url":"injectables/UsersRepositoryService.html","title":"injectable - UsersRepositoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersRepositoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/repositories/users-repository.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createDpUser\n                            \n                            \n                                deleteDpUser\n                            \n                            \n                                getAllDpUsers\n                            \n                            \n                                getDpUserById\n                            \n                            \n                                updateDpUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dpUsersService: DpUsersService)\n                    \n                \n                        \n                            \n                                Defined in src/app/repositories/users-repository.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dpUsersService\n                                                  \n                                                        \n                                                                        DpUsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createDpUser\n                        \n                    \n                \n            \n            \n                \ncreateDpUser(dpUser: IDpUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/users-repository.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dpUser\n                                            \n                                                            IDpUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteDpUser\n                        \n                    \n                \n            \n            \n                \ndeleteDpUser(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/users-repository.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllDpUsers\n                        \n                    \n                \n            \n            \n                \ngetAllDpUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/users-repository.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDpUserById\n                        \n                    \n                \n            \n            \n                \ngetDpUserById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/users-repository.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateDpUser\n                        \n                    \n                \n            \n            \n                \nupdateDpUser(id: number, dpUser: IDpUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/repositories/users-repository.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dpUser\n                                            \n                                                            IDpUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { IDpUser } from '../interface/IDpUser';\nimport { DpUsersService } from '../services/dp-users.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersRepositoryService {\n  constructor(private dpUsersService: DpUsersService) {}\n\n  getAllDpUsers(): Observable {\n    return this.dpUsersService.getAllDpUsers();\n  }\n\n  getDpUserById(id: number): Observable {\n    return this.dpUsersService.getDpUserById(id);\n  }\n\n  createDpUser(dpUser: IDpUser): Observable {\n    return this.dpUsersService.createDpUser(dpUser);\n  }\n\n  updateDpUser(id: number, dpUser: IDpUser): Observable {\n    return this.dpUsersService.updateDpUser(id, dpUser);\n  }\n\n  deleteDpUser(id: number): Observable {\n    return this.dpUsersService.deleteDpUser(id);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/data/components/alert-delete/alert-delete.component.ts\n            \n            component\n            AlertDeleteComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/data/components/back-button/back-button.component.ts\n            \n            component\n            BackButtonComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/data/components/card-item/card-item.component.ts\n            \n            component\n            CardItemComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/data/components/carousel-img/carousel-img.component.ts\n            \n            component\n            CarouselImgComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/data/components/dialog-category/dialog-category.component.ts\n            \n            component\n            DialogCategoryComponent\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/app/data/components/dialog-image/dialog-image.component.ts\n            \n            component\n            DialogImageComponent\n            \n                0 %\n                (0/26)\n            \n        \n        \n            \n                \n                src/app/data/components/dialog-product/dialog-product.component.ts\n            \n            component\n            DialogProductComponent\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/app/data/components/filter-by-input/filter-by-input.component.ts\n            \n            component\n            FilterByInputComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/data/components/icon-trash/icon-trash.component.ts\n            \n            component\n            IconTrashComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/data/components/loading/loading.component.ts\n            \n            component\n            LoadingComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/data/components/login-proj/login-proj.component.ts\n            \n            component\n            LoginProjComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/data/components/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/data/components/navbar/navbar.component.ts\n            \n            component\n            NavbarComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/data/components/register-proj/register-proj.component.ts\n            \n            component\n            RegisterProjComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/data/components/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/data/components/theme-toggle/theme-toggle.component.ts\n            \n            component\n            ThemeToggleComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/data/page/about/about.component.ts\n            \n            component\n            AboutComponent\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/app/data/page/achievments-page-for-user/achievments-page-for-user.component.ts\n            \n            component\n            AchievmentsPageForUserComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/data/page/page-cart/page-cart.component.ts\n            \n            component\n            PageCartComponent\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                src/app/data/page/page-cart/page-cart.component.ts\n            \n            interface\n            CartItem\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/data/page/page-catalog-item/page-catalog-item.component.ts\n            \n            component\n            PageCatalogItemComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/data/page/page-item-from-catalog/page-item-from-catalog.component.ts\n            \n            component\n            PageItemFromCatalogComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/data/page/user-page-proj/user-page-proj.component.ts\n            \n            component\n            UserPageProjComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/data/page/user-page/user-page.component.ts\n            \n            component\n            UserPageComponent\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                src/app/interface/IAchievement.ts\n            \n            interface\n            IAchievement\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/interface/IAddToCartRequest.ts\n            \n            interface\n            IAddToCartRequest\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interface/ICartItem.ts\n            \n            interface\n            ICartItem\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/interface/ICartViewModel.ts\n            \n            interface\n            ICartViewModel\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interface/ICreateDpImageRequest.ts\n            \n            interface\n            ICreateDpImageRequest\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interface/IDpCategory.ts\n            \n            interface\n            IDpCategory\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/interface/IDpImage.ts\n            \n            interface\n            IDpImage\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/interface/IDpOrder.ts\n            \n            interface\n            IDpOrder\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/interface/IDpOrderComposition.ts\n            \n            interface\n            IDpOrderComposition\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/interface/IDpOrderDetail.ts\n            \n            interface\n            IDpOrderDetail\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/interface/IDpProduct.ts\n            \n            interface\n            IDpProduct\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/interface/IDpProductAttribute.ts\n            \n            interface\n            IDpProductAttribute\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/interface/IDpSize.ts\n            \n            interface\n            IDpSize\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/interface/IDpUser.ts\n            \n            interface\n            IDpUser\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/interface/IDpUserProj.ts\n            \n            interface\n            IDpUserProj\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/interface/IRemoveFromCartRequest.ts\n            \n            interface\n            IRemoveFromCartRequest\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interface/IUpdateCartRequest.ts\n            \n            interface\n            IUpdateCartRequest\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interface/IUpdateDpImageRequest.ts\n            \n            interface\n            IUpdateDpImageRequest\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interface/IUserHasAchievement.ts\n            \n            interface\n            IUserHasAchievement\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/repositories/achievements-repository.service.ts\n            \n            injectable\n            AchievementsRepositoryService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/repositories/auth-proj-repository.service.ts\n            \n            injectable\n            AuthProjRepositoryService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/repositories/auth-repository.service.ts\n            \n            injectable\n            AuthRepositoryService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/repositories/categories-repository.service.ts\n            \n            injectable\n            CategoriesRepositoryService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/repositories/images-repository.service.ts\n            \n            injectable\n            ImagesRepositoryService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/repositories/order-compositions-repository.service.ts\n            \n            injectable\n            OrderCompositionsRepositoryService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/repositories/order-repository.service.ts\n            \n            injectable\n            OrderRepositoryService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/repositories/product-attributes-repository.service.ts\n            \n            injectable\n            ProductAttributesRepositoryService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/repositories/products-repository.service.ts\n            \n            injectable\n            ProductsRepositoryService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/repositories/shop-cart-repository.service.ts\n            \n            injectable\n            ShopCartRepositoryService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/repositories/sizes-repository.service.ts\n            \n            injectable\n            SizesRepositoryService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/repositories/user-achievements-repository.service.ts\n            \n            injectable\n            UserAchievementsRepositoryService\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/app/repositories/user-projs-repository.service.ts\n            \n            injectable\n            UserProjsRepositoryService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/repositories/users-repository.service.ts\n            \n            injectable\n            UsersRepositoryService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/services/achievements.service.ts\n            \n            injectable\n            AchievementsService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/services/auth-proj.service.ts\n            \n            injectable\n            AuthProjService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/services/config.service.ts\n            \n            injectable\n            ConfigService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/services/dp-categories.service.ts\n            \n            injectable\n            DpCategoriesService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/services/dp-images.service.ts\n            \n            injectable\n            DpImagesService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/services/dp-order-compositions.service.ts\n            \n            injectable\n            DpOrderCompositionsService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/services/dp-orders.service.ts\n            \n            injectable\n            DpOrdersService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/services/dp-product-attributes.service.ts\n            \n            injectable\n            DpProductAttributesService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/services/dp-products.service.ts\n            \n            injectable\n            ProductsService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/services/dp-shop-cart.service.ts\n            \n            injectable\n            ShopCartService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/services/dp-sizes.service.ts\n            \n            injectable\n            DpSizesService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/services/dp-user-projs.service.ts\n            \n            injectable\n            DpUserProjsService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/services/dp-users.service.ts\n            \n            injectable\n            DpUsersService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/services/user-achievements.service.ts\n            \n            injectable\n            UserAchievementsService\n            \n                53 %\n                (8/15)\n            \n        \n        \n            \n                \n                src/stories/button.component.ts\n            \n            component\n            ButtonComponent\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                        src/stories/button.stories.ts\n            \n            variable\n            Large\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/stories/button.stories.ts\n            \n            variable\n            meta\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/stories/button.stories.ts\n            \n            variable\n            Primary\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/stories/button.stories.ts\n            \n            variable\n            Secondary\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/stories/button.stories.ts\n            \n            variable\n            Small\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/stories/button.stories.ts\n            \n            variable\n            Sota6SiFront\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/stories/button.stories.ts\n            \n            type alias\n            Story\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/stories/card-item.stories.ts\n            \n            variable\n            Default\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/stories/card-item.stories.ts\n            \n            variable\n            EmptyImages\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/stories/card-item.stories.ts\n            \n            variable\n            meta\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/stories/card-item.stories.ts\n            \n            variable\n            NoPrice\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/stories/card-item.stories.ts\n            \n            type alias\n            Story\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/stories/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        src/stories/header.stories.ts\n            \n            variable\n            LoggedIn\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/stories/header.stories.ts\n            \n            variable\n            LoggedOut\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/stories/header.stories.ts\n            \n            variable\n            meta\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/stories/header.stories.ts\n            \n            type alias\n            Story\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/stories/page.component.ts\n            \n            component\n            PageComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        src/stories/page.stories.ts\n            \n            variable\n            LoggedIn\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/stories/page.stories.ts\n            \n            variable\n            LoggedOut\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/stories/page.stories.ts\n            \n            variable\n            meta\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/stories/page.stories.ts\n            \n            type alias\n            Story\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/stories/user.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/2)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/cdk : ^19.2.10\n        \n            @angular/common : ^19.2.0\n        \n            @angular/compiler : ^19.2.0\n        \n            @angular/core : ^19.2.0\n        \n            @angular/forms : ^19.2.0\n        \n            @angular/material : ^19.2.10\n        \n            @angular/platform-browser : ^19.2.0\n        \n            @angular/platform-browser-dynamic : ^19.2.0\n        \n            @angular/router : ^19.2.0\n        \n            @fortawesome/fontawesome-free : ^6.7.2\n        \n            @taiga-ui/addon-commerce : ^4.35.0\n        \n            @taiga-ui/addon-table : ^4.36.0\n        \n            @taiga-ui/cdk : ^4.34.0\n        \n            @taiga-ui/core : ^4.36.0\n        \n            @taiga-ui/event-plugins : ^4.0.2\n        \n            @taiga-ui/icons : ^4.34.0\n        \n            @taiga-ui/icons-fontawesome : ^4.37.0\n        \n            @taiga-ui/kit : ^4.34.0\n        \n            @taiga-ui/layout : ^4.35.0\n        \n            @taiga-ui/legacy : ^4.35.0\n        \n            ngx-cookie-service : ^19.1.2\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.15.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nSota6SiFront\nThis project was generated using Angular CLI version 19.2.8.\nDevelopment server\nTo start a local development server, run:\nExample :ng serveOnce the server is running, open your browser and navigate to http://localhost:4200/. The application will automatically reload whenever you modify any of the source files.\nCode scaffolding\nAngular CLI includes powerful code scaffolding tools. To generate a new component, run:\nExample :ng generate component component-nameFor a complete list of available schematics (such as components, directives, or pipes), run:\nExample :ng generate --helpBuilding\nTo build the project run:\nExample :ng buildThis will compile your project and store the build artifacts in the dist/ directory. By default, the production build optimizes your application for performance and speed.\nRunning unit tests\nTo execute unit tests with the Karma test runner, use the following command:\nExample :ng testRunning end-to-end tests\nFor end-to-end (e2e) testing, run:\nExample :ng e2eAngular CLI does not come with an end-to-end testing framework by default. You can choose one that suits your needs.\nAdditional Resources\nFor more information on using the Angular CLI, including detailed command references, visit the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    27 Components\n                \n            \n        \n        \n            \n                \n                    \n                    29 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    21 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Story   (src/.../button.stories.ts)\n                        \n                        \n                            Story   (src/.../card-item.stories.ts)\n                        \n                        \n                            Story   (src/.../header.stories.ts)\n                        \n                        \n                            Story   (src/.../page.stories.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/stories/button.stories.ts\n    \n    \n        \n            \n                \n                    \n                    Story\n                \n            \n            \n                \n                            StoryObj\n\n                \n            \n        \n    \n    src/stories/card-item.stories.ts\n    \n    \n        \n            \n                \n                    \n                    Story\n                \n            \n            \n                \n                            StoryObj\n\n                \n            \n        \n    \n    src/stories/header.stories.ts\n    \n    \n        \n            \n                \n                    \n                    Story\n                \n            \n            \n                \n                            StoryObj\n\n                \n            \n        \n    \n    src/stories/page.stories.ts\n    \n    \n        \n            \n                \n                    \n                    Story\n                \n            \n            \n                \n                            StoryObj\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            Default   (src/.../card-item.stories.ts)\n                        \n                        \n                            EmptyImages   (src/.../card-item.stories.ts)\n                        \n                        \n                            Large   (src/.../button.stories.ts)\n                        \n                        \n                            LoggedIn   (src/.../header.stories.ts)\n                        \n                        \n                            LoggedIn   (src/.../page.stories.ts)\n                        \n                        \n                            LoggedOut   (src/.../header.stories.ts)\n                        \n                        \n                            LoggedOut   (src/.../page.stories.ts)\n                        \n                        \n                            meta   (src/.../button.stories.ts)\n                        \n                        \n                            meta   (src/.../card-item.stories.ts)\n                        \n                        \n                            meta   (src/.../header.stories.ts)\n                        \n                        \n                            meta   (src/.../page.stories.ts)\n                        \n                        \n                            NoPrice   (src/.../card-item.stories.ts)\n                        \n                        \n                            Primary   (src/.../button.stories.ts)\n                        \n                        \n                            Secondary   (src/.../button.stories.ts)\n                        \n                        \n                            Small   (src/.../button.stories.ts)\n                        \n                        \n                            Sota6SiFront   (src/.../button.stories.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideAnimations(),\n    provideHttpClient(withInterceptorsFromDi()),\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideRouter(routes),\n    provideEventPlugins(),\n    AchievementsService // Убедитесь, что сервис добавлен в providers\n  ]\n}\n                    \n                \n\n\n        \n    \n\n    src/stories/card-item.stories.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Default\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Story\n\n                    \n                \n                \n                    \n                        Default value : {\n  args: {\n    productInfo: {\n      dpProductId: 1,\n      dpTitle: 'Sample Product',\n      dpPrice: 1000,\n      dpPurchasePrice: 900,\n      dpImages: [\n        { dpImagesId: 1, dpImageTitle: 'Product Image 1', dpProductId: 1 },\n        { dpImagesId: 2, dpImageTitle: 'Product Image 2', dpProductId: 1 },\n      ],\n    } as IDpProduct,\n  },\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        EmptyImages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Story\n\n                    \n                \n                \n                    \n                        Default value : {\n  args: {\n    productInfo: {\n      dpProductId: 1,\n      dpTitle: 'Sample Product',\n      dpPrice: 1000,\n      dpPurchasePrice: 900,\n      dpImages: [],\n    } as IDpProduct,\n  },\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        meta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Meta\n\n                    \n                \n                \n                    \n                        Default value : {\n  title: 'Components/CardItem',\n  component: CardItemComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [\n        CommonModule,\n        HttpClientModule,\n        TuiButton,\n        TuiIcon,\n        TuiAppearance,\n        BrowserAnimationsModule,\n        RouterTestingModule, // Мокаем Router для тестирования\n      ],\n      providers: [\n        {\n          provide: ConfigService,\n          useValue: {\n            achievementIds: {\n              navigateToProductSuccess: 1,\n              navigateToProductFailed: 2,\n            },\n          },\n        },\n        {\n          provide: UserAchievementsRepositoryService,\n          useValue: {\n            handleAchievement: () => ({ subscribe: () => {} }), // Мокаем метод\n          },\n        },\n        {\n          provide: UserAchievementsService,\n          useValue: {\n            getAlwaysFailMode: () => false, // Мокаем метод\n          },\n        },\n      ],\n    }),\n  ],\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        NoPrice\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Story\n\n                    \n                \n                \n                    \n                        Default value : {\n  args: {\n    productInfo: {\n      dpProductId: 1,\n      dpTitle: 'Sample Product',\n      dpPrice: 0,\n      dpPurchasePrice: 0,\n      dpImages: [\n        { dpImagesId: 1, dpImageTitle: 'Product Image 1', dpProductId: 1 },\n      ],\n    } as IDpProduct,\n  },\n}\n                    \n                \n\n\n        \n    \n\n    src/stories/button.stories.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Large\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Story\n\n                    \n                \n                \n                    \n                        Default value : {\n  args: {\n    size: 'large',\n    label: 'Button',\n  },\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        meta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Meta\n\n                    \n                \n                \n                    \n                        Default value : {\n  title: 'Example/Button',\n  component: ButtonComponent,\n  tags: ['autodocs'],\n  argTypes: {\n    backgroundColor: {\n      control: 'color',\n    },\n  },\n  // Use `fn` to spy on the onClick arg, which will appear in the actions panel once invoked: https://storybook.js.org/docs/essentials/actions#action-args\n  args: { onClick: fn() },\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Primary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Story\n\n                    \n                \n                \n                    \n                        Default value : {\n  args: {\n    primary: true,\n    label: 'Button',\n  },\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Secondary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Story\n\n                    \n                \n                \n                    \n                        Default value : {\n  args: {\n    label: 'Button',\n  },\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Small\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Story\n\n                    \n                \n                \n                    \n                        Default value : {\n  args: {\n    size: 'small',\n    label: 'Button',\n  },\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Sota6SiFront\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Story\n\n                    \n                \n                \n                    \n                        Default value : {\n  args: {\n    primary: false,\n    label: \"Button\"\n  }\n}\n                    \n                \n\n\n        \n    \n\n    src/stories/header.stories.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LoggedIn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Story\n\n                    \n                \n                \n                    \n                        Default value : {\n  args: {\n    user: {\n      name: 'Jane Doe',\n    },\n  },\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LoggedOut\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Story\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        meta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Meta\n\n                    \n                \n                \n                    \n                        Default value : {\n  title: 'Example/Header',\n  component: HeaderComponent,\n  // This component will have an automatically generated Autodocs entry: https://storybook.js.org/docs/writing-docs/autodocs\n  tags: ['autodocs'],\n  parameters: {\n    // More on how to position stories at: https://storybook.js.org/docs/configure/story-layout\n    layout: 'fullscreen',\n  },\n  args: {\n    onLogin: fn(),\n    onLogout: fn(),\n    onCreateAccount: fn(),\n  },\n}\n                    \n                \n\n\n        \n    \n\n    src/stories/page.stories.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LoggedIn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Story\n\n                    \n                \n                \n                    \n                        Default value : {\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    const loginButton = canvas.getByRole('button', { name: /Log in/i });\n    await expect(loginButton).toBeInTheDocument();\n    await userEvent.click(loginButton);\n    await expect(loginButton).not.toBeInTheDocument();\n\n    const logoutButton = canvas.getByRole('button', { name: /Log out/i });\n    await expect(logoutButton).toBeInTheDocument();\n  },\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LoggedOut\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Story\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        meta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Meta\n\n                    \n                \n                \n                    \n                        Default value : {\n  title: 'Example/Page',\n  component: PageComponent,\n  parameters: {\n    // More on how to position stories at: https://storybook.js.org/docs/configure/story-layout\n    layout: 'fullscreen',\n  },\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
